{"version":3,"file":"static/chunks/678-5b35f6cae9351044.js","mappings":"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","sources":["webpack://_N_E/./src/utils/Resizer.tsx","webpack://_N_E/./src/utils/keyboard.ts","webpack://_N_E/./src/utils/localstorage.ts","webpack://_N_E/./src/utils/pointer.ts","webpack://_N_E/<anon>"],"sourcesContent":["import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { clamp } from \"./data\";\nimport { useCombinedMouseTouchDrag } from \"./pointer\";\n\nexport const Resizer: React.FC<{\n    id: string;\n    className?: string;\n    vertical?: boolean;\n    defaultFraction?: number;\n    children: React.ReactNode[];\n}> = ({ id, className, children, vertical, defaultFraction }) => {\n\n    let [parentEl, setParentEl] = useState<HTMLElement | null>(null);\n    let [sliderHitEl, setSliderHitEl] = useState<HTMLElement | null>(null);\n    let childrenArr = React.Children.toArray(children).filter(a => a);\n    let firstChild = childrenArr[0] as React.ReactElement;\n    let scndChild = childrenArr[1] as React.ReactElement;\n\n    let [fraction, setFraction] = useState(defaultFraction ?? 0.4);\n\n    let [, setDragStart] = useCombinedMouseTouchDrag(sliderHitEl, () => fraction, (ev, ds, end) => {\n        let parentBcr = parentEl!.getBoundingClientRect();\n        let deltaPx = vertical ? ev.clientY - ds.clientY : ev.clientX - ds.clientX;\n        let fullSizePx = vertical ? parentBcr.height : parentBcr.width;\n        let newFraction = clamp(ds.data + deltaPx / fullSizePx, 0, 1);\n        setFraction(newFraction);\n        ev.preventDefault();\n        ev.stopPropagation();\n    });\n\n    function handleMouseDown(ev: React.MouseEvent) {\n        setDragStart(ev);\n        ev.stopPropagation();\n        ev.preventDefault();\n    }\n\n    let pct = (fraction * 100) + '%';\n    let invPct = ((1 - fraction) * 100) + '%';\n    let hasBothChildren = firstChild && scndChild;\n\n    return <div ref={setParentEl} className={clsx(\"relative flex\", className, vertical ? 'flex-col' : 'flex-row')}>\n        {firstChild && <div className=\"flex flex-initial overflow-hidden\" style={{ flexBasis: hasBothChildren ? pct : '100%' }}>\n            {firstChild}\n        </div>}\n        {scndChild && <div className=\"flex flex-initial overflow-hidden\" style={{ flexBasis: hasBothChildren ? invPct : '100%' }}>\n            {scndChild}\n        </div>}\n        {hasBothChildren && <>\n            <div\n                ref={setSliderHitEl}\n                className={clsx(\"absolute\", vertical ? \"w-full cursor-ns-resize h-4\" : \"h-full cursor-ew-resize w-4\")}\n                style={{ transform: `translate${vertical ? 'Y' : 'X'}(-50%)`, top: vertical ? pct : undefined, left: vertical ? undefined : pct }}\n                onMouseDown={handleMouseDown}>\n            </div>\n            <div\n                className={clsx(\"absolute bg-slate-200 pointer-events-none\", vertical ? \"w-full h-0 border-t\" : \"h-full w-0 border-l\")}\n                style={{ transform: `translate${vertical ? 'Y' : 'X'}(-50%)`, top: vertical ? pct : undefined, left: vertical ? undefined : pct }}>\n            </div>\n        </>}\n    </div>;\n};\n","import { createContext, useContext, useEffect } from \"react\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport enum KeyboardOrder {\n    MainPage = 0,\n    Element = 1,\n    Modal = 2,\n}\n\nexport interface IKeyHandler {\n    order: KeyboardOrder;\n    handler: (ev: KeyboardEvent) => void;\n    receiveKeyUp: boolean;\n}\n\nexport interface IKeyHandlerOptions {\n    isActive?: boolean;\n    receiveKeyUp?: boolean;\n}\n\nexport class KeyboardManager {\n    private handlers: IKeyHandler[] = [];\n\n    registerHandler(order: KeyboardOrder, handler: (ev: KeyboardEvent) => void, opts?: IKeyHandlerOptions): () => void {\n        let newHandler: IKeyHandler = { order, handler, receiveKeyUp: opts?.receiveKeyUp ?? false };\n        this.handlers.push(newHandler);\n        return () => {\n            this.handlers = this.handlers.filter(h => h !== newHandler);\n        };\n    }\n\n    handleKey = (ev: KeyboardEvent) => {\n        let handlersSorted = this.handlers.sort((a, b) => a.order - b.order);\n\n        let propagationStopped = false;\n        let oldStopPropagation = ev.stopPropagation;\n\n        ev.stopPropagation = () => {\n            propagationStopped = true;\n            oldStopPropagation.call(ev);\n        };\n\n        for (let handler of handlersSorted) {\n            if (ev.type === \"keyup\" && !handler.receiveKeyUp) {\n                continue;\n            }\n            handler.handler(ev);\n            if (propagationStopped) {\n                break;\n            }\n        }\n    }\n}\n\nexport const KeyboardManagerContext = createContext<KeyboardManager>(new KeyboardManager());\n\nexport function useGlobalKeyboard(order: KeyboardOrder, handler: (ev: KeyboardEvent) => void, opts?: IKeyHandlerOptions) {\n    let manager = useContext(KeyboardManagerContext);\n    let handlerRef = useFunctionRef(handler);\n    let receiveKeyUp = opts?.receiveKeyUp ?? false;\n    let isActive = opts?.isActive ?? true;\n\n    useEffect(() => {\n        if (isActive) {\n            let h = (ev: KeyboardEvent) => handlerRef.current(ev);\n            let unregister = manager.registerHandler(order, h, { receiveKeyUp });\n            return () => unregister();\n        }\n    }, [order, handlerRef, manager, receiveKeyUp, isActive]);\n}\n\nexport function useCreateGlobalKeyboardDocumentListener() {\n    let manager = useContext(KeyboardManagerContext);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", manager.handleKey);\n        window.addEventListener(\"keyup\", manager.handleKey);\n        return () => {\n            window.removeEventListener(\"keydown\", manager.handleKey);\n            window.removeEventListener(\"keyup\", manager.handleKey);\n        };\n    }, [manager]);\n}\n\nexport enum Modifiers {\n    None = 0,\n    Alt = 1,\n    CtrlOrCmd = 2,\n    Shift = 4,\n}\n\nexport interface IKeyboardEvent {\n    type: string;\n    key: string;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n\nexport interface IModifiersEvent {\n    type: string;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n\nexport function isArrowKeyWithModifiers(ev: IKeyboardEvent, direction: \"up\" | \"down\" | \"left\" | \"right\", modifiers: Modifiers = Modifiers.None) {\n    return (ev.key.toLowerCase() === direction || ev.key.toLowerCase() === `arrow${direction}`) && hasModifiers(ev, modifiers);\n}\n\nexport function isKeyWithModifiers(ev: IKeyboardEvent, key: string, modifiers: Modifiers = Modifiers.None) {\n    return key.toLowerCase() === ev.key.toLowerCase() && hasModifiers(ev, modifiers);\n}\n\nexport function hasModifiers(ev: IModifiersEvent, modifiers: Modifiers) {\n    let modifiersActual = Modifiers.None;\n    modifiersActual |= ev.altKey ? Modifiers.Alt : 0;\n    modifiersActual |= ev.ctrlKey || ev.metaKey ? Modifiers.CtrlOrCmd : 0;\n    modifiersActual |= ev.shiftKey ? Modifiers.Shift : 0;\n\n    return modifiersActual === modifiers;\n}\n","import { useEffect, useState } from \"react\";\nimport { StateSetter } from \"./data\";\n\nexport function iterLocalStorageEntries(cb: (key: string, value: string | null) => void) {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    if (!ls) {\n        return;\n    }\n\n    for (let i = 0; i < ls.length; i++) {\n        let key = ls.key(i);\n        if (key) {\n            let value = ls.getItem(key);\n            cb(key, value);\n        }\n    }\n}\n\nexport function readFromLocalStorage<T>(key: string): T | undefined {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    let value = ls?.getItem(key);\n    if (value) {\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            console.error('Failed to parse local storage value:', key, value);\n        }\n    }\n    return undefined;\n}\n\nexport function writeToLocalStorage<T>(key: string, value: T) {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    if (value) {\n        ls?.setItem(key, JSON.stringify(value));\n    } else {\n        ls?.removeItem(key);\n    }\n}\n\nexport function useLocalStorageState<T>(key: string, hydrateFromLS: (a: Partial<T> | undefined) => T): [T, StateSetter<T>] {\n    let [value, setValue] = useState(() => hydrateFromLS(readFromLocalStorage(key)));\n\n    useEffect(() => {\n        writeToLocalStorage(key, value);\n    }, [key, value]);\n\n    return [value, setValue];\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport interface IDragStart<T> {\n    clientX: number;\n    clientY: number;\n    data: T;\n    button: number;\n    buttons: number;\n    shiftKey: boolean;\n    altKey: boolean;\n    metaKey: boolean;\n    ctrlKey: boolean;\n}\n\nexport function useGlobalDrag<T>(\n    handleMove: (ev: MouseEvent, ds: IDragStart<T>, end: boolean) => void,\n    handleClick?: (ev: MouseEvent, ds: IDragStart<T>) => void,\n    handleMoveEnd?: (ev: MouseEvent, ds: IDragStart<T>, end: boolean) => void,\n): [IDragStart<T> | null, (ev: IMouseEvent, data: T) => void] {\n    let [dragStart, setDragStart] = useState<IDragStart<T> | null>(null);\n    let isDragging = useRef(false);\n    let handleMoveRef = useFunctionRef(handleMove);\n    let handleClickRef = useFunctionRef(handleClick);\n    let handleMoveEndRef = useFunctionRef(handleMoveEnd);\n\n    useEffect(() => {\n        if (!dragStart) {\n            isDragging.current = false;\n            return;\n        }\n\n        function dist(ev1: { clientX: number, clientY: number }, ev2: { clientX: number, clientY: number }) {\n            let dx = ev2.clientX - ev1.clientX;\n            let dy = ev2.clientY - ev1.clientY;\n            return dx * dx + dy * dy;\n        }\n\n        function handleMouseMove(ev: MouseEvent) {\n            if (!isDragging.current && (dist(ev, dragStart!) > 10.0 || !handleClickRef.current)) {\n                isDragging.current = true;\n            }\n            if (isDragging.current) {\n                handleMoveRef.current(ev, dragStart!, false);\n            }\n        }\n\n        function handleMouseUp(ev: MouseEvent) {\n            if (isDragging.current || !handleClickRef.current) {\n                handleMoveRef.current(ev, dragStart!, true);\n                handleMoveEndRef.current?.(ev, dragStart!, true);\n            } else {\n                handleClickRef.current?.(ev, dragStart!);\n            }\n            setDragStart(null);\n        }\n\n        document.addEventListener('mousemove', handleMouseMove, { capture: true });\n        document.addEventListener('mouseup', handleMouseUp, { capture: true });\n        return () => {\n            document.removeEventListener('mousemove', handleMouseMove, { capture: true });\n            document.removeEventListener('mouseup', handleMouseUp, { capture: true });\n        };\n    }, [dragStart, handleMoveRef, handleClickRef, handleMoveEndRef]);\n\n    let setDragStartTarget = useCallback((ev: IMouseEvent, data: T) => {\n        setDragStart({\n            clientX: ev.clientX,\n            clientY: ev.clientY,\n            data,\n            button: ev.button,\n            buttons: ev.buttons,\n            shiftKey: ev.shiftKey,\n            altKey: ev.altKey,\n            ctrlKey: ev.ctrlKey,\n            metaKey: ev.metaKey,\n        });\n    }, [setDragStart]);\n\n    return [dragStart, setDragStartTarget];\n}\n\nexport interface IMouseLocation {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface IPointerEvent {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface IMouseEvent extends IPointerEvent {\n    type: string;\n    readonly button: number;\n    readonly buttons: number;\n    readonly shiftKey: boolean;\n    readonly altKey: boolean;\n    readonly ctrlKey: boolean;\n    readonly metaKey: boolean;\n    stopPropagation(): void;\n    preventDefault(): void;\n}\n\nexport interface IWheelEvent extends IMouseEvent {\n    deltaMode: number;\n    deltaY: number;\n}\n\nexport interface IBaseEvent {\n    type: string;\n    stopPropagation(): void;\n    preventDefault(): void;\n}\n\nexport function getWheelDelta(ev: IWheelEvent): number {\n    let mode = ev.deltaMode;\n    let scale = 1.0;\n    if (mode === 0) { // pixel\n        scale = 125;\n    } else if (mode === 1) { // line\n        scale = 3;\n    } else if (mode === 2) { // page\n        scale = 0.1;\n    }\n\n    return ev.deltaY / scale;\n}\n\nexport interface TouchSimple {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface TouchEventStart<T> {\n    data: T;\n    touches: TouchSimple[];\n}\n\nexport interface TouchEventStart1PointDrag<T> extends TouchEventStart<T> {\n    isDragging: boolean;\n}\n\nexport interface ITouchEventOptions {\n    alwaysSendDragEvent?: boolean;\n    sendDragEnd?: boolean;\n}\n\nexport function useTouchEvents<T>(\n    el: GlobalEventHandlers | null,\n    data: T,\n    options: ITouchEventOptions,\n    handle1PointDrag?: (ev: TouchEvent, start: TouchEventStart1PointDrag<T>, end: boolean) => void,\n    handle2PointDrag?: (ev: TouchEvent, start: TouchEventStart<T>) => void,\n    handle1PointClick?: (ev: TouchEvent, start: TouchEventStart<T>) => void,\n) {\n    let alwaysSendDragEvent = options.alwaysSendDragEvent ?? false;\n    let sendDragEnd = options.sendDragEnd ?? false;\n    let initialData = useRef<T>(data);\n    let initialTouches = useRef<TouchSimple[]>();\n    let lastTouch = useRef<{ time: number, velocity: number, touch: TouchSimple } | null>(null);\n    let isDrag = useRef<boolean>(false);\n    let latestData = useRef<T>(data);\n    let lastPressTime = useRef<number>(0);\n    latestData.current = data;\n    let handle1PointDragRef = useFunctionRef(handle1PointDrag);\n    let handle2PointDragRef = useFunctionRef(handle2PointDrag);\n    let handle1PointClickRef = useFunctionRef(handle1PointClick);\n\n    useEffect(() => {\n        if (!el) {\n            return;\n        }\n\n        function sendEvent(ev: TouchEvent) {\n            let initial = {data: initialData.current, touches: initialTouches.current!};\n            if (!ev.touches || !initial.touches || ev.touches.length !== initial.touches.length) {\n                return;\n            }\n\n            if (!isDrag.current) {\n                if (ev.touches.length > 1 || (ev.touches.length === 1 && touchPixelDist(ev.touches[0], initial.touches[0]) >= 10)) {\n                    isDrag.current = true;\n                }\n            }\n\n            if (ev.touches.length === 1 && handle1PointDragRef.current && (alwaysSendDragEvent || isDrag.current)) {\n                handle1PointDragRef.current(ev, { ...initial, isDragging: isDrag.current }, false);\n            }\n            if (ev.touches.length === 2 && handle2PointDragRef.current) {\n                handle2PointDragRef.current(ev, initial);\n            }\n\n            if (ev.touches.length === 1) {\n                lastTouch.current = {\n                    time: 0,\n                    velocity: 0,\n                    touch: copyTouchList(ev.touches)[0],\n                };\n\n            } else {\n                lastTouch.current = null;\n            }\n        }\n\n        function captureInitialAndSend(ev: TouchEvent) {\n            let prevTouches = initialTouches.current;\n            let prevData = initialData.current;\n            initialData.current = latestData.current;\n            initialTouches.current = copyTouchList(ev.touches as any);\n\n            if (!prevTouches || !prevTouches.length) {\n                lastPressTime.current = performance.now();\n            }\n\n            let lastTouchTouch = lastTouch.current?.touch;\n\n            sendEvent(ev);\n\n            if (ev.touches.length === 0) {\n                if (sendDragEnd && handle1PointDragRef.current && lastTouchTouch && (isDrag.current || alwaysSendDragEvent)) {\n                    ev = cloneTouchEvent(ev, { touches: [lastTouchTouch] as any });\n                    handle1PointDragRef.current(ev, { data: prevData, touches: prevTouches!, isDragging: isDrag.current }, true);\n                }\n                if (!isDrag.current && handle1PointClickRef.current && prevTouches?.length === 1) {\n                    handle1PointClickRef.current(ev, {data: prevData, touches: prevTouches!});\n                }\n                isDrag.current = false;\n                lastTouch.current = null;\n            }\n        }\n\n        el.addEventListener('touchstart', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchend', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchcancel', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchmove', sendEvent, { passive: false });\n        return () => {\n            el.removeEventListener('touchstart', captureInitialAndSend);\n            el.removeEventListener('touchend', captureInitialAndSend);\n            el.removeEventListener('touchcancel', captureInitialAndSend);\n            el.removeEventListener('touchmove', sendEvent);\n        };\n    }, [el, handle1PointDragRef, handle2PointDragRef, handle1PointClickRef, alwaysSendDragEvent, sendDragEnd]);\n}\n\nexport function copyTouchList(tl: TouchList) {\n    let res: TouchSimple[] = [];\n    for (let i = 0; i < tl.length; i++) {\n        let touch = tl[i];\n        res.push({ clientX: touch.clientX, clientY: touch.clientY });\n    }\n    return res;\n}\n\nfunction touchPixelDist(a: TouchSimple, b: TouchSimple) {\n    let dx = b.clientX - a.clientX;\n    let dy = b.clientY - a.clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n\nexport function useCombinedMouseTouchDrag<T>(\n    el: GlobalEventHandlers | null,\n    captureDragStart: (ev: IMouseEvent) => T,\n    handleDrag: (ev: IMouseEvent, start: IDragStart<T>, end: boolean) => void,\n    handleClick?: (ev: IMouseEvent, start: IDragStart<T>) => void,\n): [dragStart: IDragStart<T> | null, setDragStart: (ev: IMouseEvent) => void] {\n    let [touchDragStart, setTouchDragStart] = useState<IDragStart<T> | null>(null);\n\n    let captureDragStartRef = useFunctionRef(captureDragStart);\n    function handleMouseDrag(ev: MouseEvent, ds: IDragStart<T>, end: boolean) {\n        handleDrag(ev, ds, end);\n    }\n\n    function handleMouseClick(ev: MouseEvent, ds: IDragStart<T>) {\n        handleClick?.(ev, ds);\n    }\n\n    useTouchEvents(el, 0, { alwaysSendDragEvent: true, sendDragEnd: true }, function handle1PointDrag(ev, ds, end) {\n        let mouseEvent = mouseEventFromEventAndSingleTouch(ev, ev.touches[0]);\n        let dragStart = touchDragStart;\n        if (!dragStart) {\n            let dragStartData = captureDragStart(mouseEvent);\n            dragStart = { ...extractClientPosFromTouch(ds.touches[0]), data: dragStartData };\n            setTouchDragStart(dragStart);\n        }\n\n        if (!ds.isDragging) {\n            return;\n        }\n\n        handleDrag(mouseEvent, dragStart, end);\n\n        if (end) {\n            setTouchDragStart(null);\n        }\n\n    }, undefined, function handle1PointClick(ev, ds) {\n        if (touchDragStart) {\n            handleClick?.(mouseEventFromEventAndSingleTouch(ev, ev.touches[0]), touchDragStart);\n        }\n        setTouchDragStart(null);\n    });\n\n    let [dragStart, setDragStartLocal] = useGlobalDrag<T>(handleMouseDrag, handleClick ? handleMouseClick : undefined);\n\n    let setDragStart = useCallback((ev: IMouseEvent) => {\n        let data = captureDragStartRef.current(ev);\n        setDragStartLocal(ev, data);\n    }, [setDragStartLocal, captureDragStartRef]);\n\n    return [dragStart ?? touchDragStart, setDragStart];\n}\n\nfunction cloneTouchEvent<T extends {}>(ev: TouchEvent, extra: T): TouchEvent & T & { button: -1, buttons: 0 } {\n    return {\n        ...ev,\n        preventDefault: () => ev.preventDefault(),\n        stopPropagation: () => ev.stopPropagation(),\n        ...extra,\n        button: -1,\n        buttons: 0,\n    };\n}\n\nfunction mouseEventFromEventAndSingleTouch(ev: TouchEvent, touch: TouchSimple): TouchEvent & IMouseEvent {\n    return cloneTouchEvent(ev, extractClientPosFromTouch(touch));\n}\n\nfunction extractClientPosFromTouch(touch: TouchSimple) {\n    // creates a mouse event compatible with mouse drags\n    return {\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        shiftKey: false,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        button: -1,\n        buttons: 0,\n     };\n}\n"],"names":["Resizer","id","className","children","vertical","defaultFraction","param","parentEl","setParentEl","useState","sliderHitEl","setSliderHitEl","childrenArr","React","toArray","filter","a","firstChild","scndChild","fraction","setFraction","setDragStart","useCombinedMouseTouchDrag","ev","ds","end","parentBcr","getBoundingClientRect","deltaPx","clientY","clientX","fullSizePx","height","width","clamp","data","preventDefault","stopPropagation","pct","invPct","hasBothChildren","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","ref","clsx","jsx","style","flexBasis","Fragment","transform","concat","top","undefined","left","onMouseDown","KeyboardOrder","Modifiers","MainPage","Element","Modal","KeyboardManagerContext","createContext","registerHandler","order","handler","opts","newHandler","receiveKeyUp","handlers","push","h","handleKey","handlersSorted","sort","b","propagationStopped","oldStopPropagation","call","type","useGlobalKeyboard","manager","useContext","handlerRef","useFunctionRef","isActive","useEffect","unregister","current","useCreateGlobalKeyboardDocumentListener","window","addEventListener","removeEventListener","isArrowKeyWithModifiers","direction","modifiers","None","key","toLowerCase","hasModifiers","isKeyWithModifiers","modifiersActual","altKey","Alt","ctrlKey","metaKey","CtrlOrCmd","shiftKey","Shift","iterLocalStorageEntries","cb","ls","localStorage","i","length","value","getItem","useLocalStorageState","hydrateFromLS","setValue","readFromLocalStorage","JSON","parse","e","console","error","setItem","stringify","removeItem","useGlobalDrag","handleMove","handleClick","handleMoveEnd","dragStart","isDragging","useRef","handleMoveRef","handleClickRef","handleMoveEndRef","handleMouseMove","dx","dy","dist","ev2","ev1","handleMouseUp","document","capture","useCallback","button","buttons","useTouchEvents","el","options","handle1PointDrag","handle2PointDrag","handle1PointClick","alwaysSendDragEvent","sendDragEnd","initialData","initialTouches","lastTouch","isDrag","latestData","lastPressTime","handle1PointDragRef","handle2PointDragRef","handle1PointClickRef","captureInitialAndSend","passive","sendEvent","initial","touches","touchPixelDist","Math","sqrt","time","velocity","touch","copyTouchList","prevTouches","prevData","performance","now","lastTouchTouch","cloneTouchEvent","tl","res","captureDragStart","handleDrag","touchDragStart","setTouchDragStart","captureDragStartRef","mouseEvent","extractClientPosFromTouch","dragStartData","setDragStartLocal","extra"],"sourceRoot":""}