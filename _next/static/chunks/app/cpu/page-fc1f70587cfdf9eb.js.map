{"version":3,"file":"static/chunks/app/cpu/page-fc1f70587cfdf9eb.js","mappings":"mFAAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,IAAA,CAAAD,EAAA,+OCiBO,IAAME,EAAU,KACnBC,CAAAA,EAAAA,EAAAA,EAAAA,IACA,IAAIC,EAAgBC,CAAAA,EAAAA,EAAAA,EAAAA,IAWpB,MAAO,GAAAC,EAAAC,IAAA,EAAAD,EAAAE,QAAA,YACH,GAAAF,EAAAC,IAAA,EAACE,EAAAA,CAAMA,CAAAA,CAACC,MAAO,aACX,GAAAJ,EAAAK,GAAA,EAACC,SAAAA,CAAOC,UAAU,8BACd,GAAAP,EAAAK,GAAA,EAACG,EAAAA,CAAeA,CAAAA,CAACC,KAAMC,EAAAA,GAAMA,KAEjC,GAAAV,EAAAK,GAAA,EAACM,MAAAA,CAAIJ,UAAU,yBAAgB,mBAC/B,GAAAP,EAAAK,GAAA,EAACM,MAAAA,CAAIJ,UAAU,oCAUnB,GAAAP,EAAAK,GAAA,EAACM,MAAAA,CAAIJ,UAAWK,IAAAA,OAAAA,UACZ,GAAAZ,EAAAK,GAAA,EAACQ,EAAAA,EAAoBA,CAACC,QAAQ,EAACC,MAAOjB,WAClC,GAAAE,EAAAK,GAAA,EAACW,EAAAA,SAASA,CAAAA,UACN,GAAAhB,EAAAK,GAAA,EAACY,EAAAA,QAAQA,CAAAA,CAACC,SAAU,GAAAlB,EAAAK,GAAA,EAACM,MAAAA,CAAAA,YACjB,GAAAX,EAAAK,GAAA,EAACc,EAAAA,CAAAA,aAMzB,EAEMA,EACD,KACD,IAAIC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACTC,EAAeC,CAAAA,EAAAA,EAAAA,eAAAA,IACf,CAAEC,YAAAA,CAAW,CAAEC,eAAAA,CAAc,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IAElCC,EAAcL,EAAaM,GAAG,CAAC,eAS/BC,EAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAPnB,SAAmBH,CAA0B,EACzC,IAAII,EAAY,IAAIC,gBAAgBC,SAASC,MAAM,EAC/CC,EAAWC,SAoBFd,CAA6B,CAAEe,CAAsC,EACtF,IAAIC,EAAS,IAAIN,gBAAgBV,EAAaiB,QAAQ,IACtD,IAAK,GAAI,CAACC,EAAKzB,EAAM,GAAI0B,OAAOC,OAAO,CAACL,GAChCtB,OAAAA,EACAuB,EAAOK,MAAM,CAACH,GAEdF,EAAOM,GAAG,CAACJ,EAAKzB,GAGxB,OAAOuB,EAAOC,QAAQ,EAC1B,EA9BmCR,EAAW,CAAEJ,YAAAA,CAAY,GAChDQ,IAAaJ,EAAUQ,QAAQ,IAC/BnB,EAAOyB,OAAO,CAACZ,SAASa,QAAQ,CAAG,IAAMX,EAEjD,GAaA,MAVAY,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACFvB,EAAYwB,iBAAiB,EAC7BnB,EAAaoB,OAAO,CAACzB,EAAYwB,iBAAiB,CAE1D,EAAG,CAACxB,EAAYwB,iBAAiB,CAAEnB,EAAa,EAEhDkB,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACNtB,EAAeyB,GAAM,EAAE,GAAGA,CAAC,CAAEC,mBAAoBxB,MAAAA,EAAAA,EAAe,IAAK,GACzE,EAAG,CAACA,EAAaF,EAAe,EAEzB,IACX,oBCrFA2B,EAAAC,OAAA,EAAkB,wDCDlBD,EAAAC,OAAA,CAAA3D,EAAA","sources":["webpack://_N_E/?df9a","webpack://_N_E/./src/cpu/CpuMain.tsx","webpack://_N_E/./src/cpu/CpuMain.module.scss","webpack://_N_E/./node_modules/next/navigation.js","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/src/cpu/CpuMain.tsx\")","'use client';\n\nimport React, { Suspense, useEffect } from 'react';\nimport { useCreateGlobalKeyboardDocumentListener } from '../utils/keyboard';\nimport { CpuCanvas } from './CpuCanvas';\nimport s from './CpuMain.module.scss';\nimport { Header } from '../homepage/Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { IProgramState } from './CpuModel';\nimport { CompLibrary } from './comps/CompBuilder';\nimport { SchematicLibrary } from './schematics/SchematicLibrary';\nimport { useEditorContext } from './Editor';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { useFunctionRef } from '../utils/hooks';\nimport { SharedContextContext, useCreateSharedContext } from './library/SharedContext';\n\nexport const CPUMain = () => {\n    useCreateGlobalKeyboardDocumentListener();\n    let sharedContext = useCreateSharedContext();\n    // let [schematicId, setSchematicId] = useState<string | null>(null);\n    // let [editorState, setEditorState] = useState<IEditorState>(() => createCpuEditorState());\n    // let [name, setName] = useState('1 Bit Adder');\n\n    // let editorContext: IEditorContext = useMemo(() => ({\n    //     editorState,\n    //     exeModel: null!,\n    //     setEditorState,\n    // }), [editorState]);\n\n    return <>\n        <Header title={\"\"}>\n            <button className='flex px-2 text-2xl'>\n                <FontAwesomeIcon icon={faBars} />\n            </button>\n            <div className='text-2xl mx-2'>CPU Simulation</div>\n            <div className='relative ml-3 top-[1px] flex'>\n                {/* <ToolbarNameEditor value={name} setValue={(ev, value, end) => {\n                    if (end) {\n                        setName(value);\n                    }\n                }} /> */}\n            </div>\n            {/* <div className='ml-3 w-3 h-3 bg-white rounded-[1rem]'> */}\n            {/* </div> */}\n        </Header>\n        <div className={s.content}>\n            <SharedContextContext.Provider value={sharedContext}>\n                <CpuCanvas>\n                    <Suspense fallback={<div />}>\n                        <QueryUpdater />\n                    </Suspense>\n                </CpuCanvas>\n            </SharedContextContext.Provider>\n        </div>\n    </>;\n};\n\nconst QueryUpdater: React.FC<{\n}> = () => {\n    let router = useRouter();\n    let searchParams = useSearchParams();\n    let { editorState, setEditorState } = useEditorContext();\n\n    let schematicId = searchParams.get('schematicId');\n\n    function updateUrl(schematicId: string | null) {\n        let currQuery = new URLSearchParams(location.search);\n        let newQuery = updateQuery(currQuery, { schematicId });\n        if (newQuery !== currQuery.toString()) {\n            router.replace(location.pathname + '?' + newQuery);\n        }\n    }\n    let updateUrlRef = useFunctionRef(updateUrl);\n\n    useEffect(() => {\n        if (editorState.activeSchematicId) {\n            updateUrlRef.current(editorState.activeSchematicId);\n        }\n    }, [editorState.activeSchematicId, updateUrlRef]);\n\n    useEffect(() => {\n        setEditorState(a => ({ ...a, desiredSchematicId: schematicId ?? null }));\n    }, [schematicId, setEditorState]);\n\n    return null;\n};\n\nfunction updateQuery(searchParams: URLSearchParams, changes: Record<string, string | null>) {\n    let params = new URLSearchParams(searchParams.toString());\n    for (let [key, value] of Object.entries(changes)) {\n        if (value === null) {\n            params.delete(key);\n        } else {\n            params.set(key, value);\n        }\n    }\n    return params.toString();\n}\n\nfunction createCpuProgramState(): IProgramState {\n    return {\n        activeEditorIdx: 0,\n        compLibrary: new CompLibrary(),\n        editors: [],\n        schematicLibrary: new SchematicLibrary(),\n    };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"CpuMain_content__lMaTq\"};","module.exports = require('./dist/client/components/navigation')\n"],"names":["Promise","resolve","then","__webpack_require__","bind","CPUMain","useCreateGlobalKeyboardDocumentListener","sharedContext","useCreateSharedContext","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","Header","title","jsx","button","className","FontAwesomeIcon","icon","faBars","div","s","SharedContextContext","Provider","value","CpuCanvas","Suspense","fallback","QueryUpdater","router","useRouter","searchParams","useSearchParams","editorState","setEditorState","useEditorContext","schematicId","get","updateUrlRef","useFunctionRef","currQuery","URLSearchParams","location","search","newQuery","updateQuery","changes","params","toString","key","Object","entries","delete","set","replace","pathname","useEffect","activeSchematicId","current","a","desiredSchematicId","module","exports"],"sourceRoot":""}