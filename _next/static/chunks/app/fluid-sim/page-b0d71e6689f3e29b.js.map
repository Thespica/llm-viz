{"version":3,"file":"static/chunks/app/fluid-sim/page-b0d71e6689f3e29b.js","mappings":"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","sources":["webpack://_N_E/?da72","webpack://_N_E/./src/fluidsim/PerlinNoise.ts","webpack://_N_E/./src/fluidsim/FluidSimMain.tsx","webpack://_N_E/./src/fluidsim/FluidSimView.tsx","webpack://_N_E/./src/utils/data.ts","webpack://_N_E/./src/utils/hooks.ts","webpack://_N_E/./src/utils/layout.ts","webpack://_N_E/./src/utils/random.ts","webpack://_N_E/./src/utils/vector.ts","webpack://_N_E/./src/app/fluid-sim/page.module.scss","webpack://_N_E/./src/fluidsim/FluidSimView.module.scss","webpack://_N_E/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.production.min.js","webpack://_N_E/./node_modules/next/dist/compiled/react/jsx-runtime.js","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/node_modules/next/dist/client/link.js\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/src/fluidsim/FluidSimView.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/src/app/fluid-sim/page.module.scss\")","import { makeArray } from \"../utils/data\";\nimport { Random } from \"../utils/random\";\n\nexport class PerlinNoise2D {\n    private perm: number[];\n\n    constructor(seed: number) {\n        let rand = new Random(seed);\n        let perm = makeArray(256, 0);\n        for (let i = 0; i < 256; i++) {\n            perm[i] = rand.randint(0, 256);\n        }\n        this.perm = perm;\n    }\n\n    private grad2: [number, number][] = [\n        [1, 1], [-1, 1], [1, -1], [-1, -1],\n        [1, 0], [-1, 0], [1, 0], [-1, 0],\n        [0, 1], [0, -1], [0, 1], [0, -1],\n    ];\n\n    public noise(x: number, y: number) {\n        let X = Math.floor(x) & 255;\n        let Y = Math.floor(y) & 255;\n\n        x -= Math.floor(x);\n        y -= Math.floor(y);\n\n        let u = fade(x);\n        let v = fade(y);\n\n        let A = this.perm[X] + Y;\n        let AA = this.perm[A % 255];\n        let AB = this.perm[(A + 1) % 255];\n        let B = this.perm[(X + 1) % 255] + Y;\n        let BA = this.perm[B % 255];\n        let BB = this.perm[(B + 1) % 255];\n\n        return lerp(\n            lerp(dot2(this.grad2[AA % 12], x, y    ), dot2(this.grad2[BA % 12], x - 1, y   ), u),\n            lerp(dot2(this.grad2[AB % 12], x, y - 1), dot2(this.grad2[BB % 12], x - 1, y - 1), u),\n            v);\n    }\n\n    public octaveNoise(x: number, y: number, octaves: number, persistence: number) {\n        let total = 0;\n        let frequency = 1;\n        let amplitude = 1;\n        let maxValue = 0;\n        for (let i = 0; i < octaves; i++) {\n            total += this.noise(x * frequency, y * frequency) * amplitude;\n            maxValue += amplitude;\n            amplitude *= persistence;\n            frequency *= 2;\n        }\n        return total / maxValue * (1 / 0.4);\n    }\n}\n\nfunction fade(t: number) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\n\nfunction lerp(a: number, b: number, t: number) {\n    return a + t * (b - a);\n}\n\nfunction dot2(g: [number, number], x: number, y: number) {\n    return g[0] * x + g[1] * y;\n}\n","'use client';\n\nimport { PerlinNoise2D } from './PerlinNoise';\n\nexport interface IFluidSimState {\n    running: boolean;\n    sim: IFluidSim;\n    canvasTemp: HTMLCanvasElement;\n}\n\nexport interface ICanvasTargetDef {\n    canvas: HTMLCanvasElement;\n    name: string;\n}\n\nexport interface IFluidSim {\n    width: number;\n    height: number;\n    numPressureIterations: number;\n    cells: Float32Array; // 2d array of floats, with values for (temperature, density, velocityX, velocityY)\n\n    cells2: Float32Array;\n    cells3: Float32Array;\n\n    pressure0: Float32Array;\n    pressure1: Float32Array;\n    divergence0: Float32Array;\n    divergence1: Float32Array;\n\n    cellSize: number;\n\n    aggregates: ISimAggregates | null;\n\n    iterCount: number;\n}\n\nexport function initFluidSimState(): IFluidSimState {\n    return {\n        sim: initFluidSim(64, 64),\n        running: false,\n        canvasTemp: document.createElement('canvas'),\n    };\n}\n\nexport function initFluidSim(w: number, h: number): IFluidSim {\n    let width = w;\n    let height = h;\n\n    let boxSizeM = 0.1; // 10cm\n    let cellSize = boxSizeM / width;\n\n    let sim: IFluidSim = {\n        width,\n        height,\n        numPressureIterations: 1,\n        cells: new Float32Array(width * height * 4),\n        cells2: new Float32Array(width * height * 4),\n        cells3: new Float32Array(width * height * 4),\n        pressure0: new Float32Array(width * height),\n        pressure1: new Float32Array(width * height),\n        divergence0: new Float32Array(width * height),\n        divergence1: new Float32Array(width * height),\n        cellSize,\n        aggregates: null,\n        iterCount: 0,\n    };\n\n     let scaleX = 4 / width;\n     let scaleY = 4 / height;\n     let perlin = new PerlinNoise2D(4);\n     let perlinVelX = new PerlinNoise2D(7);\n     let perlinVelY = new PerlinNoise2D(8);\n     let maxVelX = 0;\n     for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            sim.cells[(y * width + x) * 4 + 0] = perlin.octaveNoise((x + 10) * scaleX, (y + 10) * scaleY, 5, 0.8); // temperature\n            sim.cells[(y * width + x) * 4 + 1] = 1.0; // density\n\n            // let velX = perlinVelX.octaveNoise((x + 10) * scaleX, (y + 10) * scaleY, 4, 0.2) / 40.0;\n            // let velY = perlinVelY.octaveNoise((x + 10) * scaleX, (y + 10) * scaleY, 4, 0.2) / 40.0;\n            let velX = 0;\n            let velY = 0;\n\n            // units: m/s\n            // a rectangular region of velocity, in the center of the screen, pointing up and to the right a bit\n            if (x > width * 4 / 10 && x < width * 6 / 10 && y > height * 4 / 10 && y < height * 6 / 10) {\n                velX = 4 / 100; // 0.4 cm/s\n                velY = 4 / 100;\n                maxVelX = Math.max(maxVelX, velX);\n            }\n\n            sim.cells[(y * width + x) * 4 + 2] = velX;\n            sim.cells[(y * width + x) * 4 + 3] = velY;\n        }\n    }\n\n    console.log(`maxVelX: ${maxVelX}, cellSize: ${cellSize}, maxVelX / cellSize: ${maxVelX / cellSize}`);\n\n    fixBoundaries(sim);\n    computeAggregateValues(sim);\n\n    return sim;\n}\n\nexport function stepFluidSim(sim: IFluidSim, dtMs: number) {\n    let startTime = performance.now();\n    let dt = dtMs / 1000.0; // convert to seconds, since we're working in SI units\n\n    function getCell(arr: Float32Array, i: number, j: number, k: number) {\n        return arr[(i * sim.width + j) * 4 + k];\n    }\n\n    function getCellClamped(arr: Float32Array, i: number, j: number, k: number) {\n        i = i < 0 ? 0 : i >= sim.height ? sim.height - 1 : i;\n        j = j < 0 ? 0 : j >= sim.width ? sim.width - 1 : j;\n        return arr[(i * sim.width + j) * 4 + k];\n    }\n\n    function setCell(arr: Float32Array, i: number, j: number, k: number, value: number) {\n        arr[(i * sim.width + j) * 4 + k] = value;\n    }\n\n    function getCell0(arr: Float32Array, i: number, j: number) {\n        return arr[i * sim.width + j];\n    }\n\n    function setCell0(arr: Float32Array, i: number, j: number, v: number) {\n        arr[i * sim.width + j] = v;\n    }\n\n    function getCell0Clamped(arr: Float32Array, i: number, j: number) {\n        i = i < 0 ? 0 : i >= sim.height ? sim.height - 1 : i;\n        j = j < 0 ? 0 : j >= sim.width ? sim.width - 1 : j;\n        return arr[i * sim.width + j];\n    }\n\n    function getCellBilinearClamped(arr: Float32Array, y: number, x: number, k: number) {\n        let ya = Math.floor(y);\n        let xa = Math.floor(x);\n        let yb = ya + 1;\n        let xb = xa + 1;\n\n        let a = getCellClamped(arr, ya, xa, k);\n        let b = getCellClamped(arr, yb, xa, k);\n        let c = getCellClamped(arr, ya, xb, k);\n        let d = getCellClamped(arr, yb, xb, k);\n\n        let y0 = y - ya;\n        let x0 = x - xa;\n\n        let y1 = 1 - y0;\n        let x1 = 1 - x0;\n\n        return (a * x1 * y1) + (b * x1 * y0) + (c * x0 * y1) + (d * x0 * y0);\n    }\n\n    // advection\n\n    if (sim.iterCount > 0) {\n        let maxDx = 0;\n        let maxVx = 0;\n        for (let y = 0; y < sim.height; y++) {\n            for (let x = 0; x < sim.width; x++) {\n                let vX = getCell(sim.cells, y, x, 2);\n                let vY = getCell(sim.cells, y, x, 3);\n\n                // given velocity, where would we have been at -dtMs?\n                let x0 = x - vX * dt / sim.cellSize;\n                let y0 = y - vY * dt / sim.cellSize;\n\n                maxDx = Math.max(maxDx, Math.abs(x0 - x));\n                maxVx = Math.max(maxVx, Math.abs(vX));\n\n                // get all the state variables at that point\n                let tempSrc = getCellBilinearClamped(sim.cells, y0, x0, 0);\n                let densitySrc = getCellBilinearClamped(sim.cells, y0, x0, 1);\n                let velXSrc = getCellBilinearClamped(sim.cells, y0, x0, 2);\n                let velYSrc = getCellBilinearClamped(sim.cells, y0, x0, 3);\n\n                setCell(sim.cells2, y, x, 0, tempSrc);\n                setCell(sim.cells2, y, x, 1, densitySrc);\n                setCell(sim.cells2, y, x, 2, velXSrc);\n                setCell(sim.cells2, y, x, 3, velYSrc);\n            }\n        }\n\n        // console.log(`maxDx: ${maxDx * 1000/20} (cells/s), maxVx: ${maxVx * 100} (cm/s)`);\n    } else {\n        sim.cells2.set(sim.cells);\n    }\n\n    // diffusion (not really needed, since we get plenty of numerical diffusion from the advection step)\n\n    let arrOrig = sim.cells2;\n    let arrFrom = sim.cells;\n    arrFrom.set(arrOrig);\n    let arrTo = sim.cells3;\n\n    let tempDiffusionRate = 0.0; // 1.0 / 1000;\n    let tempAlpha = tempDiffusionRate * dt / (sim.cellSize * sim.cellSize);\n    let tempBeta = 1 + 4 * tempAlpha;\n\n    let densityDiffusionRate = 0.1;\n    let densityAlpha = densityDiffusionRate * dt / (sim.cellSize * sim.cellSize);\n    let densityBeta = 1 + 4 * densityAlpha;\n\n    let viscosity = 0.5 / 1000;\n    let velocityAlpha = viscosity * dt / (sim.cellSize * sim.cellSize);\n    let velocityBeta = 1 + 4 * velocityAlpha;\n\n    function diffuseCell(i: number, j: number, k: number, alpha: number, beta: number) {\n        let orig = getCell(arrOrig, i, j, k);\n        let up = getCellClamped(arrFrom, i - 1, j, k);\n        let down = getCellClamped(arrFrom, i + 1, j, k);\n        let left = getCellClamped(arrFrom, i, j - 1, k);\n        let right = getCellClamped(arrFrom, i, j + 1, k);\n\n        // gauss-seidel relaxation\n        let laplace = left + right + up + down;\n        let dst = (orig + alpha * laplace) / beta;\n        setCell(arrTo, i, j, k, dst);\n    }\n\n    if (false) {\n        for (let iter = 0; iter < 4; iter++) {\n            for (let i = 0; i < sim.height; i++) {\n                for (let j = 0; j < sim.width; j++) {\n                    // temps:\n                    diffuseCell(i, j, 0, tempAlpha, tempBeta);\n                    diffuseCell(i, j, 1, densityAlpha, densityBeta);\n                    diffuseCell(i, j, 2, velocityAlpha, velocityBeta);\n                    diffuseCell(i, j, 3, velocityAlpha, velocityBeta);\n                }\n            }\n\n            // swap arrays\n            let tmp = arrFrom;\n            arrFrom = arrTo;\n            arrTo = tmp;\n        }\n    }\n\n    // projection\n\n    // (we've already got our tentative velocity field in arrFrom, and don't have things like gravity to worry about)\n\n    // solve pressure-poisson equation\n    // let pressureAlpha = sim.cellSize * sim.cellSize;\n    // let pressureBeta = 1;\n\n    let pressureFrom = sim.pressure0;\n    let pressureTo = sim.pressure1;\n\n    function calcDivergence(srcArr: Float32Array, divArray: Float32Array) {\n        // precompute the divergence of the tentative velocity field\n        for (let y = 0; y < sim.height; y++) {\n            for (let x = 0; x < sim.width; x++) {\n                let divX = getCellClamped(srcArr, y, x + 1, 2) - getCellClamped(srcArr, y, x - 1, 2);\n                let divY = getCellClamped(srcArr, y + 1, x, 3) - getCellClamped(srcArr, y - 1, x, 3);\n                let divergence = (divX + divY) / (2 * sim.cellSize);\n                setCell0(divArray, y, x, divergence);\n            }\n        }\n    }\n\n    function calcDivergenceFreeVelocityField(arrFrom: Float32Array, arrTo: Float32Array, pressure: Float32Array) {\n        for (let y = 0; y < sim.height; y++) {\n            for (let x = 0; x < sim.width; x++) {\n                let pressureUp = getCell0Clamped(pressure, y - 1, x);\n                let pressureDown = getCell0Clamped(pressure, y + 1, x);\n                let pressureLeft = getCell0Clamped(pressure, y, x - 1);\n                let pressureRight = getCell0Clamped(pressure, y, x + 1);\n\n                let velXSrc = getCell(arrFrom, y, x, 2);\n                let velXDst = velXSrc - (pressureRight - pressureLeft) / (2 * sim.cellSize);\n                setCell(arrTo, y, x, 2, velXDst);\n\n                let velYSrc = getCell(arrFrom, y, x, 3);\n                let velYDst = velYSrc - (pressureDown - pressureUp) / (2 * sim.cellSize);\n                setCell(arrTo, y, x, 3, velYDst);\n            }\n        }\n    }\n\n    function calcPressureField(divergenceField: Float32Array, pressureFrom: Float32Array, pressureTo: Float32Array) {\n        for (let y = 0; y < sim.height; y++) {\n            for (let x = 0; x < sim.width; x++) {\n                let divergence = getCell0(divergenceField, y, x);\n                let pressureUp = getCell0Clamped(pressureFrom, y - 1, x);\n                let pressureDown = getCell0Clamped(pressureFrom, y + 1, x);\n                let pressureLeft = getCell0Clamped(pressureFrom, y, x - 1);\n                let pressureRight = getCell0Clamped(pressureFrom, y, x + 1);\n\n                let pressureLaplace = pressureLeft + pressureRight + pressureUp + pressureDown;\n                let pressureDst = (pressureLaplace - divergence * sim.cellSize * sim.cellSize) / 4;\n                setCell0(pressureTo, y, x, pressureDst);\n            }\n        }\n    }\n\n    function logDivergenceStats(divergenceField: Float32Array) {\n        let min = 0;\n        let max = 0;\n        let sum = 0;\n        let count = 0;\n        for (let y = 0; y < sim.height; y++) {\n            for (let x = 0; x < sim.width; x++) {\n                let divergence = getCell0(divergenceField, y, x);\n                min = Math.min(min, divergence);\n                max = Math.max(max, divergence);\n                sum += divergence;\n                count++;\n            }\n        }\n        console.log(\"divergence: min=\" + min + \", max=\" + max + \", avg=\" + (sum / count));\n    }\n\n    if (true) {\n\n        pressureFrom.fill(0);\n\n        calcDivergence(arrFrom, sim.divergence0);\n        sim.divergence1.set(sim.divergence0);\n\n        let pressureIterCount = sim.iterCount === 0 ? 1024 : 200;\n\n        // iteratively calculate the pressure field\n        for (let iter = 0; iter < pressureIterCount; iter++) {\n            calcPressureField(sim.divergence0, pressureFrom, pressureTo);\n\n            // swap arrays\n            let tmp = pressureFrom;\n            pressureFrom = pressureTo;\n            pressureTo = tmp;\n\n            // check for convergence\n            // logDivergenceStats(sim.divergence1);\n        }\n        calcDivergenceFreeVelocityField(arrFrom, arrTo, pressureFrom);\n        calcDivergence(arrTo, sim.divergence1);\n\n        // now we have the pressure field in pressureFrom\n        // use it to calculate the final velocity field, which will be stored in arrFrom (which currently contains the tentative velocity field)\n        calcDivergenceFreeVelocityField(arrFrom, arrFrom, pressureFrom);\n    }\n\n    sim.pressure0 = pressureFrom;\n    sim.pressure1 = pressureTo;\n\n    // woo, now we have the complete set of state variables for the next frame in arrFrom\n    // so shuffle them around, ensuring arrFrom is stored to the main array (the others are just temporary)\n    sim.cells = arrFrom;\n    sim.cells2 = arrTo;\n    sim.cells3 = arrOrig;\n\n    fixBoundaries(sim);\n    computeAggregateValues(sim);\n\n    sim.iterCount += 1;\n\n    console.log(\"step took \" + (performance.now() - startTime) + \"ms\");\n}\n\nfunction fixBoundaries(sim: IFluidSim) {\n    function setCell(cells: Float32Array, y: number, x: number, k: number, value: number) {\n        cells[(y * sim.width + x) * 4 + k] = value;\n    }\n\n    // top and bottom\n    for (let x = 0; x < sim.width; x++) {\n        setCell(sim.cells, 0, x, 2, 0);\n        setCell(sim.cells, 0, x, 3, 0);\n        setCell(sim.cells, sim.height - 1, x, 2, 0);\n        setCell(sim.cells, sim.height - 1, x, 3, 0);\n    }\n\n    // left and right\n    for (let y = 0; y < sim.height; y++) {\n        setCell(sim.cells, y, 0, 2, 0);\n        setCell(sim.cells, y, 0, 3, 0);\n        setCell(sim.cells, y, sim.width - 1, 2, 0);\n        setCell(sim.cells, y, sim.width - 1, 3, 0);\n    }\n}\n\ninterface ISimAggregates {\n    totalMass: number;\n    totalKineticEnergy: number;\n    totalMomentumX: number;\n    totalMomentumY: number;\n    averageTemperature: number;\n}\n\nfunction computeAggregateValues(sim: IFluidSim): ISimAggregates {\n    function getCell(cells: Float32Array, y: number, x: number, k: number) {\n        return cells[(y * sim.width + x) * 4 + k];\n    }\n\n    let aggs: ISimAggregates = {\n        totalMass: 0,\n        totalKineticEnergy: 0,\n        totalMomentumX: 0,\n        totalMomentumY: 0,\n        averageTemperature: 0\n    };\n\n    for (let y = 0; y < sim.height; y++) {\n        for (let x = 0; x < sim.width; x++) {\n            let temperature = getCell(sim.cells, y, x, 0);\n            let density = getCell(sim.cells, y, x, 1);\n            let velX = getCell(sim.cells, y, x, 2);\n            let velY = getCell(sim.cells, y, x, 3);\n\n            let mass = density * sim.cellSize * sim.cellSize;\n            aggs.totalMass += mass;\n            aggs.totalKineticEnergy += mass * (velX * velX + velY * velY) / 2;\n            aggs.totalMomentumX += mass * velX;\n            aggs.totalMomentumY += mass * velY;\n            aggs.averageTemperature += mass * temperature;\n        }\n    }\n    aggs.averageTemperature /= aggs.totalMass;\n\n    sim.aggregates = aggs;\n\n    // console.log(`aggregates: mass=${aggs.totalMass.toFixed(2)}, p_x=${aggs.totalMomentumX.toFixed(2)}, p_y=${aggs.totalMomentumY.toFixed(2)}, E_k=${aggs.totalKineticEnergy.toFixed(2)}, T=${aggs.averageTemperature.toFixed(2)}`);\n\n    return aggs;\n}","'use client';\n\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { useScreenLayout } from \"../utils/layout\";\nimport { ICanvasTargetDef, IFluidSimState, initFluidSimState, stepFluidSim } from \"./FluidSimMain\";\nimport s from \"./FluidSimView.module.scss\";\nimport { Subscriptions, useSubscriptions } from \"../utils/hooks\";\n\nlet dummySubs = new Subscriptions();\n\nexport const FluidSimView: React.FC = () => {\n    let [manager, setManager] = useState<FluidSimManager | null>(null);\n\n    useSubscriptions(manager?.subscriptions ?? dummySubs);\n\n    let layout = useScreenLayout();\n    useEffect(() => {\n        function handleKeyDown(ev: KeyboardEvent) {\n            if (!manager) {\n                return;\n            }\n            let key = ev.key.toLowerCase();\n            if (ev.key === ' ') {\n                handleStepClicked();\n            }\n            if (ev.key === 'Backspace') {\n                handleResetClicked();\n            }\n        }\n\n        document.addEventListener('keydown', handleKeyDown);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    });\n\n    useEffect(() => {\n        console.log('canvasEl created; creating FluidSimManager');\n        let manager = new FluidSimManager();\n        setManager(manager);\n        manager.markDirty();\n\n        return () => {\n            manager.looper.stopped = true;\n            setManager(null);\n        };\n    }, []);\n\n    manager?.markDirty();\n\n    function handleResetClicked() {\n        if (!manager) {\n            return;\n        }\n        manager.fluidSimState = initFluidSimState();\n        manager.fluidSimState.sim.numPressureIterations = 0;\n        stepFluidSim(manager.fluidSimState.sim, 20);\n        manager.markDirty();\n    }\n\n    function handleStepClicked() {\n        if (!manager) {\n            return;\n        }\n        let prevNumPressureIterations = manager.fluidSimState.sim.numPressureIterations;\n        // manager.fluidSimState = initFluidSimState();\n        // manager.fluidSimState.sim.numPressureIterations = prevNumPressureIterations + 10;\n        stepFluidSim(manager.fluidSimState.sim, 20);\n        manager.markDirty();\n    }\n\n    function handlePlayClicked() {\n        if (!manager) {\n            return;\n        }\n        manager.fluidSimState.running = !manager.fluidSimState.running;\n        manager.markDirty();\n    }\n\n    let sim = manager?.fluidSimState.sim;\n\n    return <div className={s.page}>\n        FluidSimView\n        {manager && sim && <>\n            <button onClick={handleResetClicked}>Reset</button>\n            <button onClick={handleStepClicked}>Step</button>\n            <button onClick={handlePlayClicked}>Play/Pause</button>\n\n            <div>Num Pressure Iterations: {sim.numPressureIterations}</div>\n            <div className={'flex flex-row'}>\n                <div className={'flex flex-col'}>\n                    <CanvasView manager={manager} sourceType={SourceType.VelocityVector} sourceArray={sim.cells} name={\"Main\"} />\n                    <CanvasView manager={manager} sourceType={SourceType.Scalar} sourceArray={sim.pressure0} name={\"Pressure\"} />\n                </div>\n                <div className={'flex flex-col'}>\n                    <CanvasView manager={manager} sourceType={SourceType.Scalar} sourceArray={sim.divergence0} name={\"Divergence Initial\"} />\n                    <CanvasView manager={manager} sourceType={SourceType.Scalar} sourceArray={sim.divergence1} name={\"Divergence Validation\"} />\n                </div>\n            </div>\n        </>}\n    </div>;\n};\n\ninterface ICanvasRenderOpts {\n    sourceType: SourceType;\n    sourceArray: Float32Array;\n}\n\nenum SourceType {\n    VelocityVector,\n    Temp,\n    Density,\n    Scalar,\n}\n\nconst CanvasView: React.FC<{\n    manager: FluidSimManager;\n    name: string,\n} & ICanvasRenderOpts> = ({ manager, name, ...renderOpts }) => {\n    let [canvasEl, setCanvasEl] = React.useState<HTMLCanvasElement | null>(null);\n    useSubscriptions(manager.subscriptions);\n\n    useLayoutEffect(() => {\n        if (canvasEl) {\n            let parentBcr = canvasEl.parentElement!.getBoundingClientRect();\n            let pr = window.devicePixelRatio;\n            canvasEl.width = parentBcr.width * pr;\n            canvasEl.height = parentBcr.height * pr;\n            renderFluidSimTarget(manager.fluidSimState, canvasEl, renderOpts);\n        }\n    });\n\n    return <div className=\"flex flex-col m-2\">\n        <div className=\"text-center\">{name}</div>\n        <div className=\"aspect-square relative overflow-hidden flex-none w-[256px] h-[256px]\">\n            <canvas ref={setCanvasEl} className={s.canvas} />\n        </div>\n    </div>;\n}\n\n\nclass FluidSimManager {\n    looper: Looper;\n    markDirty: () => void;\n    fluidSimState: IFluidSimState;\n    subscriptions = new Subscriptions();\n\n    constructor() {\n        this.looper = new Looper(this.render);\n        this.markDirty = this.looper.markDirty;\n        this.fluidSimState = initFluidSimState();\n    }\n\n    render = (time: number, dt: number) => {\n        if (this.fluidSimState.running) {\n            stepFluidSim(this.fluidSimState.sim, 10);\n        }\n\n        updateFluidSim(this.fluidSimState, dt);\n        this.subscriptions.subs.forEach(s => s());\n    }\n}\n\nclass Looper {\n    stopped = false;\n    prevTime: number = performance.now();\n    rafHandle: number = 0;\n    isDirty = false;\n\n    constructor(public render: (time: number, dt: number) => void) {\n    }\n\n    markDirty = () => {\n        if (this.stopped) {\n            return;\n        }\n\n        this.isDirty = true;\n        if (!this.rafHandle) {\n            this.prevTime = performance.now();\n            this.rafHandle = requestAnimationFrame(this.loop);\n        }\n    }\n\n    loop = (time: number) => {\n        if (!this.isDirty || this.stopped) {\n            this.rafHandle = 0;\n            return;\n        }\n        let wasDirty = this.isDirty;\n\n        this.isDirty = false;\n\n        let dt = time - this.prevTime;\n        this.prevTime = time;\n        if (dt < 8) dt = 16; // sometimes we get -ve dt due to perf.now() vs requestAnimationFrame() timing, so put to 16ms in that case\n\n        if (wasDirty || this.isDirty) {\n            this.render(time, dt);\n        }\n\n        this.rafHandle = requestAnimationFrame(this.loop);\n    }\n}\n\nfunction drawToCanvas(state: IFluidSimState, canvas: HTMLCanvasElement, sourceArr: Float32Array) {\n    let ctx = canvas.getContext(\"2d\")!;\n    let w = state.sim.width;\n    let h = state.sim.height;\n    let cellData = new Uint8ClampedArray(w * h * 4);\n\n    let nPx = state.sim.width * state.sim.height;\n    for (let i = 0; i < nPx; i++) {\n        let temp = sourceArr[i * 4 + 0];\n        let vX = sourceArr[i * 4 + 2];\n        let vY = sourceArr[i * 4 + 3];\n        cellData[i * 4 + 0] = floatToByte(temp);\n        // cellData[i * 4 + 1] = floatToByte(vY * 40); //density * 255;\n        cellData[i * 4 + 3] = 255;\n    }\n\n    {\n        let localCanvas = state.canvasTemp;\n        localCanvas.width = w;\n        localCanvas.height = h;\n        let localCtx = localCanvas.getContext(\"2d\")!;\n        let imageData = new ImageData(cellData, w, h);\n        localCtx.putImageData(imageData, 0, 0);\n    }\n\n    ctx.imageSmoothingEnabled = false;\n    ctx.drawImage(state.canvasTemp, 0, 0, canvas.width, canvas.height);\n\n    ctx.save();\n    ctx.scale(canvas.width / w, canvas.height / h);\n    ctx.globalAlpha = 0.1;\n    for (let y = 0; y < h; y += 3) {\n        for (let x = 0; x < w; x += 3) {\n            // draw arrow for velocity, with length proportional to velocity amplitude\n            let vx = sourceArr[(y * w + x) * 4 + 2];\n            let vy = sourceArr[(y * w + x) * 4 + 3];\n            let vLen = Math.sqrt(vx * vx + vy * vy);\n            let drawLen = floatToByte(vLen * 40) / 255 * 3;\n\n            let x0 = x + 0.5;\n            let y0 = y + 0.5;\n\n            let x2 = x0 + vx * drawLen / vLen;\n            let y2 = y0 + vy * drawLen / vLen;\n\n            // two arrowhead lines, each at 45 degrees to the line\n            let dx = x2 - x0;\n            let dy = y2 - y0;\n\n            let x3 = x2 - dx * 0.2 + dy * 0.2;\n            let y3 = y2 - dy * 0.2 - dx * 0.2;\n\n            let x4 = x2 - dx * 0.2 - dy * 0.2;\n            let y4 = y2 - dy * 0.2 + dx * 0.2;\n\n            ctx.beginPath();\n            ctx.moveTo(x0, y0);\n            ctx.lineTo(x2, y2);\n            ctx.lineTo(x3, y3);\n            ctx.moveTo(x2, y2);\n            ctx.lineTo(x4, y4);\n            ctx.strokeStyle = \"white\";\n            ctx.lineWidth = w / canvas.width;\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n\nfunction drawFieldToCanvas(state: IFluidSimState, canvas: HTMLCanvasElement, arr: Float32Array) {\n    let ctx = canvas.getContext(\"2d\")!;\n    let w = state.sim.width;\n    let h = state.sim.height;\n    let cellData = new Uint8ClampedArray(w * h * 4);\n    let nPx = w * h;\n    for (let i = 0; i < nPx; i++) {\n        cellData[i * 4 + 0] = floatToByte(arr[i] * 40);\n        cellData[i * 4 + 3] = 255;\n    }\n\n    {\n        let localCanvas = state.canvasTemp;\n        localCanvas.width = w;\n        localCanvas.height = h;\n        let localCtx = localCanvas.getContext(\"2d\")!;\n        let imageData = new ImageData(cellData, w, h);\n        localCtx.putImageData(imageData, 0, 0);\n\n        ctx.imageSmoothingEnabled = false;\n        ctx.drawImage(state.canvasTemp, 0, 0, canvas.width, canvas.height);\n    }\n}\n\nfunction renderFluidSimTarget(state: IFluidSimState, canvas: HTMLCanvasElement, opts: ICanvasRenderOpts) {\n\n    // canvas.width = state.sim.width;\n    // canvas.height = state.sim.height;\n\n    let ctx = canvas.getContext(\"2d\")!;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (opts.sourceType === SourceType.VelocityVector) {\n        drawToCanvas(state, canvas, opts.sourceArray);\n    }\n    if (opts.sourceType === SourceType.Scalar) {\n        drawFieldToCanvas(state, canvas, opts.sourceArray);\n    }\n\n    // drawFieldToCanvas(state, state.targetDefs[0], state.sim.divergence0);\n    // drawFieldToCanvas(state, state.targetDefs[1], state.sim.divergence1);\n}\n\nfunction updateFluidSim(state: IFluidSimState, dt: number) {\n    /*\n    state.canvas.width = state.sim.width;\n    state.canvas.height = state.sim.height;\n\n    let ctx = state.canvas.getContext(\"2d\")!;\n\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(0, 0, state.canvas.width, state.canvas.height);\n\n    drawToCanvas(state, state.canvas);\n    drawFieldToCanvas(state, state.targetDefs[0], state.sim.divergence0);\n    drawFieldToCanvas(state, state.targetDefs[1], state.sim.divergence1);\n    */\n    // stepFluidSim(state.sim, dt);\n}\n\nfunction floatToByte(f: number) {\n    // sigmoid function, assuming a common range of -1 to 1\n\n    let x = f;\n    let y = 1 / (1 + Math.exp(-x));\n    return y * 255;\n}\n","import { Vec3 } from \"./vector\";\n\nexport function makeArray<T = number>(length: number, val?: T): T[] {\n    return new Array(length).fill(val ?? 0);\n}\n\nexport function makeArrayRange(length: number, min: number, max: number): number[] {\n    return new Array(length).fill(0).map((_, i) => min + i * (max - min) / (length - 1));\n}\n\nexport function oneHotArray(length: number, index: number, val: number, defaultVal: number = 0.0): number[] {\n    let arr = new Array(length).fill(defaultVal);\n    arr[index] = val;\n    return arr;\n}\n\nexport function assignImm<T>(target: T, source: Partial<T>): T {\n    let keys = Object.keys(source);\n    let changed = false;\n    target = target ?? {} as any;\n    for (let k of keys) {\n        let src = (source as any)[k];\n        let dst = (target as any)[k];\n        if ((src === dst) ||\n            (src instanceof Date && dst instanceof Date && +src === +dst) ||\n            (src instanceof Vec3 && dst instanceof Vec3 && src.distSq(dst) === 0.0)\n        ) {\n            continue;\n        }\n        changed = true;\n    }\n    return changed ? Object.assign({}, target, source) : target;\n}\n\nexport function assignImmFull<T>(target: T | null, source: T | null): T | null {\n    return source && target ? assignImm(target, source) : source;\n}\n\nexport function isNil(a: any): a is null | undefined {\n    return a === null || a === undefined;\n}\n\nexport function isNotNil<T>(a: T | null | undefined): a is T {\n    return a !== null && a !== undefined;\n}\n\nexport type StateSetter<T> = (action: React.SetStateAction<T>) => void;\n\nexport function applySetter<T>(setState: React.SetStateAction<T>, existing: T) {\n    return setState instanceof Function ? setState(existing) : setState;\n}\n\nexport function clamp(num: number, min: number, max: number) {\n    if (num < min) {\n        return min;\n    } else if (num > max) {\n        return max;\n    }\n    return num;\n}\n\nexport function base64ToArrayBuffer(base64: string) {\n    let binaryString = window.atob(base64);\n    let len = binaryString.length;\n    let bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\nexport function getOrAddToMap<K, V>(map: Map<K, V>, key: K, valueFn: () => V): V {\n    let existing = map.get(key);\n    if (existing === undefined) {\n        let value = valueFn();\n        map.set(key, value);\n        return value;\n    }\n    return existing;\n}\n\nexport function hasFlag(flags: number, flag: number) {\n    return (flags & flag) === flag;\n}\n","import { useEffect, useReducer, useRef, useState } from \"react\";\n\nexport function useFunctionRef<T extends ((...args: any[]) => any) | undefined>(fn: T): React.MutableRefObject<T> {\n    let ref = useRef<T>(fn);\n    useEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return ref;\n}\n\nexport function useRequestAnimationFrame(active: boolean, cb: (dt: number) => void) {\n    let cbRef = useFunctionRef(cb);\n    useEffect(() => {\n        let stale = false;\n        let handle: number;\n        let prevTime: number | undefined;\n\n        function loop(time: number) {\n            let dt = (prevTime === undefined ? 16 : (time - prevTime)) / 1000;\n            prevTime = time;\n            cbRef.current(dt);\n            if (!stale) {\n                handle = requestAnimationFrame(loop);\n            }\n        }\n\n        if (active) {\n            handle = requestAnimationFrame(loop);\n            return () => {\n                stale = true;\n                cancelAnimationFrame(handle);\n            };\n        }\n    }, [active, cbRef]);\n}\n\nexport interface IIntervalOptions {\n    // run the callback immediately on mount\n    runImmediately?: boolean;\n}\n\nexport function useInterval(active: boolean, delay: number, cb: () => void, opts?: IIntervalOptions) {\n    let cbRef = useFunctionRef(cb);\n    let runImmediately = opts?.runImmediately ?? false;\n    useEffect(() => {\n        if (active) {\n            let handle = setInterval(cbRef.current, delay);\n            if (runImmediately) {\n                cbRef.current();\n            }\n            return () => clearInterval(handle);\n        }\n    }, [active, delay, cbRef, runImmediately]);\n}\n\nexport function logChangesFn(name: string) {\n    let prevValue: any = null;\n    return (currValue: any) => {\n        let changes = getChanges(prevValue, currValue);\n        prevValue = currValue;\n        changes && console.log(`${name} changed to`, changes);\n        return !!changes;\n    };\n\n    function getChanges(a: any, b: any) {\n        a = a || {};\n        b = b || {};\n        let keys = new Set<string>();\n        for (let k of [...Object.keys(a), ...Object.keys(b)]) {\n            a[k] !== b[k] && keys.add(k);\n        }\n        if (keys.size === 0) {\n            return null;\n        }\n        let changed: any = {};\n        for (let k of [...keys]) {\n            changed[k] = b[k];\n        }\n        return changed;\n    }\n}\n\nexport function useLogChanges(name: string, values: any) {\n    let [changesFn] = useState(() => logChangesFn(name));\n    return changesFn(values);\n}\n\n\nexport class Subscriptions {\n    subs = new Set<() => void>();\n    subscribe = (fn: () => void): (() => void) => {\n        this.subs.add(fn);\n        return () => this.subs.delete(fn);\n    }\n    notify = () => {\n        for (let sub of this.subs) {\n            sub();\n        }\n    }\n}\n\nexport function useSubscriptions(subscription: Subscriptions | null) {\n    let [, refresh] = useReducer(a => a + 1, 0);\n    useEffect(() => subscription?.subscribe(refresh), [subscription]);\n}\n","import { useEffect as useLayoutEffect, useState } from \"react\";\nimport { Vec3 } from \"./vector\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport interface ILayout {\n    width: number;\n    height: number;\n    isDesktop: boolean;\n    isPhone: boolean;\n}\n\nexport function useScreenLayout() {\n    let [layout, setLayout] = useState<ILayout>({ width: 0, height: 0, isDesktop: true, isPhone: false });\n\n    useLayoutEffect(() => {\n        // check the media queries that we use in css land\n        let mediaQuery = window.matchMedia('screen and (max-width: 800px)');\n\n        function handleResize() {\n            setLayout({\n                width: window.innerWidth,\n                height: window.innerHeight,\n                isDesktop: !mediaQuery.matches,\n                isPhone: mediaQuery.matches,\n            });\n        }\n\n        handleResize();\n\n        window.addEventListener('resize', handleResize);\n        mediaQuery.addEventListener('change', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            mediaQuery.removeEventListener('change', handleResize);\n        };\n    }, []);\n\n    return layout;\n}\n\nexport function useResizeChangeHandler(el: HTMLElement | undefined | null, handler: (size: Vec3, bcr: DOMRect) => void) {\n    let handlerRef = useFunctionRef(handler);\n    useLayoutEffect(() => {\n        if (!el) return;\n        function handleResize() {\n            let bcr = el!.getBoundingClientRect();\n            handlerRef.current(new Vec3(bcr.width, bcr.height, 0), bcr);\n        }\n        let observer = new ResizeObserver(handleResize);\n        observer.observe(el);\n        handleResize();\n        return () => observer.disconnect();\n    }, [el, handlerRef]);\n}\n","import { clamp } from \"./data\";\n\nfunction xmur3(str: string) {\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\n        h = h << 13 | h >>> 19;\n    return function() {\n        h = Math.imul(h ^ h >>> 16, 2246822507),\n        h = Math.imul(h ^ h >>> 13, 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    }\n}\n\nfunction sfc32(a: number, b: number, c: number, d: number) {\n    return function() {\n      a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;\n      var t = (a + b) | 0;\n      a = b ^ b >>> 9;\n      b = c + (c << 3) | 0;\n      c = (c << 21 | c >>> 11);\n      d = d + 1 | 0;\n      t = t + d | 0;\n      c = c + t | 0;\n      return (t >>> 0) / 4294967296;\n    }\n}\n\nexport type UniformDistGenerator = () => number;\n\nfunction randomGen(seed?: string): UniformDistGenerator {\n    let seeder = xmur3(seed ?? Math.random().toString());\n    return sfc32(seeder(), seeder(), seeder(), seeder());\n}\n\nexport class Random {\n    constructor(seed?: number) {\n        this.random = randomGen(seed?.toString());\n    }\n\n    random: UniformDistGenerator;\n\n    normal = () => {\n        let x = this.random();\n        let y = this.random();\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n\n    randint(min: number, max: number): number {\n        return clamp(Math.floor(this.random() * (max - min) + min), min, max - 1);\n    }\n}\n\n","\n/* Design decisions for Vec3/Vec4\n\nMethods have immutable behavior (rather than in-place) for less error-prone usage, but that naturally\nmeans a drop in perf. Happy with this trade.\nAll methods only have at most 1 new Vec*, even if it means a bit more repetition.\n\nFact-check: false:\n    Inheriting from Array<number> seems to give good structure in V8. In particular, the number array\n    elements (as doubles) are inline in the array, and the initialization with the size means the array\n    is actually that size. It looks like there's an extra pointer hop from this class to get to the\n    actual array data which is not strictly ideal, but better than both Float64Array and 3 pointer hops\n    in the case of { x: number, y: number, z: number } (V8 doesn't do double de-boxing :( ).\n\nProbably due to inhieriting from Array<number>, the constructor is painfully slow, showing up in\nstack traces.\n\nBack to simple objects, on the idea that ones that live on the stack will get jitted away anyway.\n\nV8 shows Vec3 & Vec4 as having an 24 byte overhead, which... isn't toooo bad\n\n*/\n\nimport { clamp } from \"./data\";\n\nexport enum Dim {\n    X = 0,\n    Y = 1,\n    Z = 2,\n}\n\nexport class Vec3 {\n    x: number;\n    y: number;\n    z: number;\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n    }\n\n    add(a: Vec3): Vec3 { return new Vec3(this.x + a.x, this.y + a.y, this.z + a.z); }\n    sub(a: Vec3): Vec3 { return new Vec3(this.x - a.x, this.y - a.y, this.z - a.z); }\n    dot(a: Vec3): number { return this.x * a.x + this.y * a.y + this.z * a.z; }\n    mul(a: number): Vec3 { return new Vec3(this.x * a, this.y * a, this.z * a); }\n    mulAdd(a: Vec3, b: number): Vec3 { return new Vec3(this.x + a.x * b, this.y + a.y * b, this.z + a.z * b); }\n    lenSq(): number { return this.x * this.x + this.y * this.y + this.z * this.z; }\n    distSq(a: Vec3): number {\n        let dx = this.x - a.x;\n        let dy = this.y - a.y;\n        let dz = this.z - a.z;\n        return dx * dx + dy * dy + dz * dz;\n    }\n    len(): number { return Math.sqrt(this.lenSq()); }\n    dist(a: Vec3): number { return Math.sqrt(this.distSq(a)); }\n    normalize(): Vec3 { return this.mul(1.0 / Math.sqrt(this.lenSq())); }\n    mid(a: Vec3): Vec3 { return new Vec3((this.x + a.x) * 0.5, (this.y + a.y) * 0.5, (this.z + a.z) * 0.5); }\n    abs() { return new Vec3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z)); }\n    clone(): Vec3 { return new Vec3(this.x, this.y, this.z); }\n    toVec4(): Vec4 { return new Vec4(this.x, this.y, this.z, 1.0); }\n    round(): Vec3 { return new Vec3(Math.round(this.x), Math.round(this.y), Math.round(this.z)); }\n    round_(): Vec3 { this.x = Math.round(this.x); this.y = Math.round(this.y); this.z = Math.round(this.z); return this; }\n    copy_(a: Vec3) { this.x = a.x; this.y = a.y; this.z = a.z; }\n    static cross(a: Vec3, b: Vec3): Vec3 { return new Vec3(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x); }\n    writeToBuf(buf: Float32Array, offset: number) {\n        buf[offset + 0] = this.x;\n        buf[offset + 1] = this.y;\n        buf[offset + 2] = this.z;\n    }\n    static fromArray(a: ArrayLike<number>, offset: number = 0): Vec3 {\n        return new Vec3(a[offset + 0], a[offset + 1], a[offset + 2]);\n    }\n    setAt(i: number, v: number) {\n        switch (i) {\n        case 0: this.x = v; break;\n        case 1: this.y = v; break;\n        case 2: this.z = v; break;\n        }\n        return this;\n    }\n    addAt(i: number, v: number) {\n        switch (i) {\n        case 0: this.x += v; break;\n        case 1: this.y += v; break;\n        case 2: this.z += v; break;\n        }\n        return this;\n    }\n    getAt(i: number): number {\n        switch (i) {\n        case 0: return this.x;\n        case 1: return this.y;\n        case 2: return this.z;\n        }\n        return 0.0;\n    }\n    withSetAt(i: number, v: number): Vec3 { return this.clone().setAt(i, v); }\n    withAddAt(i: number, v: number): Vec3 { return this.clone().addAt(i, v); }\n    toString(dp: number = 3): string {\n        return `Vec3(${numMaxDp(this.x, dp)}, ${numMaxDp(this.y, dp)}, ${numMaxDp(this.z, dp)})`;\n    }\n    rotateAbout(k: Vec3, thetaRad: number) {\n        // https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n        // k must have unit length\n        let c = Math.cos(thetaRad);\n        let s = Math.sin(thetaRad);\n        let kCrossV = Vec3.cross(k, this);\n        let kDotV = k.dot(this);\n        return this.mul(c).add(kCrossV.mul(s)).add(k.mul(kDotV * (1 - c)));\n    }\n    lerp(a: Vec3, t: number): Vec3 {\n         return new Vec3(\n            a.x * t + this.x * (1 - t),\n            a.y * t + this.y * (1 - t),\n            a.z * t + this.z * (1 - t),\n         );\n    }\n    static zero = new Vec3(0, 0, 0);\n    static one = new Vec3(1, 1, 1);\n}\n\n\nexport class Vec4 {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0, w: number = 1.0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n        this.w = +w;\n    }\n\n    getIdx(i: number): number {\n        switch (i) {\n        case 0: return this.x;\n        case 1: return this.y;\n        case 2: return this.z;\n        case 3: return this.w;\n        default: throw new Error(`Invalid index ${i}`);\n        }\n    }\n    add(a: Vec4): Vec4 { return new Vec4(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w); }\n    sub(a: Vec4): Vec4 { return new Vec4(this.x - a.x, this.y - a.y, this.z - a.z, this.w - a.w); }\n    dot(a: Vec4): number { return this.x*a.x + this.y*a.y + this.z*a.z + this.w+a.w; }\n    mul(a: number): Vec4 { return new Vec4(this.x * a, this.y * a, this.z * a, this.w * a); }\n    lenSq(): number { return this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w; }\n    distSq(a: Vec4): number {\n        let dx = this.x - a.x;\n        let dy = this.y - a.y;\n        let dz = this.z - a.z;\n        let dw = this.w - a.w;\n        return dx * dx + dy * dy + dz * dz + dw * dw;\n    }\n    len(): number { return Math.sqrt(this.lenSq()); }\n    dist(a: Vec4): number { return Math.sqrt(this.distSq(a)); }\n    normalize(): Vec4 { return this.mul(1.0 / Math.sqrt(this.lenSq())); }\n    projToVec3(): Vec3 { return new Vec3(this.x / this.w, this.y / this.w, this.z / this.w); }\n    static lerp(a: Vec4, b: Vec4, t: number): Vec4 {\n        return a.add(b.sub(a).mul(t));\n    }\n    writeToBuf(buf: Float32Array, offset: number) {\n        buf[offset + 0] = this.x;\n        buf[offset + 1] = this.y;\n        buf[offset + 2] = this.z;\n        buf[offset + 3] = this.w;\n    }\n    static fromArray(a: ArrayLike<number>, offset: number = 0): Vec4 {\n        return new Vec4(a[offset + 0], a[offset + 1], a[offset + 2], a[offset + 3]);\n    }\n    static fromVec3(v: Vec3, w: number = 1.0): Vec4 {\n        return new Vec4(v.x, v.y, v.z, w);\n    }\n    toArray(): ArrayLike<number> {\n        return [this.x, this.y, this.z, this.w];\n    }\n    static fromHexColor(s: string, alpha: number = 1.0): Vec4 {\n        if (s.startsWith('#')) s = s.slice(1);\n        let hexVal = parseInt(s, 16);\n        let x = (hexVal >> 16) & 0xFF;\n        let y = (hexVal >> 8) & 0xFF;\n        let z = hexVal & 0xFF;\n        return new Vec4(x / 255.0 * alpha, y / 255.0 * alpha, z / 255.0 * alpha, alpha);\n    }\n    toHexColor(): string {\n        let toPair = (v: number) => Math.floor(v * 255).toString(16).padStart(2, '0');\n        return `#${toPair(this.x)}${toPair(this.y)}${toPair(this.z)}${toPair(this.w)}`;\n    }\n    toString(): string {\n        return `Vec4(${numMaxDp(this.x)}, ${numMaxDp(this.y)}, ${numMaxDp(this.z)}, ${numMaxDp(this.w)})`;\n    }\n}\n\nfunction numMaxDp(x: number, dp: number = 3) {\n    return parseFloat(x.toFixed(dp)).toString();\n}\n\nexport class BoundingBox3d {\n    public min: Vec3 = new Vec3();\n    public max: Vec3 = new Vec3();\n    public empty: boolean = true;\n\n    constructor(...args: Array<Vec3>) {\n        for (let v of args)\n            this.addInPlace(v);\n    }\n\n    addInPlace(v: Vec3) {\n        if (this.empty) {\n            this.min.x = v.x;\n            this.min.y = v.y;\n            this.min.z = v.z;\n            this.max.x = v.x;\n            this.max.y = v.y;\n            this.max.z = v.z;\n            this.empty = false;\n        } else {\n            this.min.x = Math.min(this.min.x, v.x);\n            this.min.y = Math.min(this.min.y, v.y);\n            this.min.z = Math.min(this.min.z, v.z);\n            this.max.x = Math.max(this.max.x, v.x);\n            this.max.y = Math.max(this.max.y, v.y);\n            this.max.z = Math.max(this.max.z, v.z);\n        }\n        return this;\n    }\n\n    combineInPlace(v: BoundingBox3d) {\n        return v.empty ? this : this.addInPlace(v.min).addInPlace(v.max);\n    }\n\n    center(): Vec3 {\n        let a = this.max;\n        let b = this.min;\n        return new Vec3(\n            a.x + 0.5 * (b.x - a.x),\n            a.y + 0.5 * (b.y - a.y),\n            a.z + 0.5 * (b.z - a.z));\n    }\n\n    size(): Vec3 {\n        return this.max.sub(this.min);\n    }\n\n    contains(p: Vec3) {\n        return !this.empty &&\n            p.x >= this.min.x && p.x <= this.max.x &&\n            p.y >= this.min.y && p.y <= this.max.y &&\n            p.z >= this.min.z && p.z <= this.max.z;\n    }\n\n    intersects(b: BoundingBox3d) {\n        return !this.empty && !b.empty &&\n            this.max.x >= b.min.x && this.min.x <= b.max.x &&\n            this.max.y >= b.min.y && this.min.y <= b.max.y &&\n            this.max.z >= b.min.z && this.min.z <= b.max.z;\n    }\n\n    expandInPlace(border: number) {\n        if (!this.empty) {\n            this.min.x -= border;\n            this.min.y -= border;\n            this.min.z -= border;\n            this.max.x += border;\n            this.max.y += border;\n            this.max.z += border;\n        }\n        return this;\n    }\n\n    shrinkInPlaceXY(inset: number) {\n        if (!this.empty) {\n            this.min.x += inset;\n            this.min.y += inset;\n            this.max.x -= inset;\n            this.max.y -= inset;\n            if (this.min.x > this.max.x || this.min.y > this.max.y) {\n                this.empty = true;\n                this.min = new Vec3();\n                this.max = new Vec3();\n            }\n        }\n        return this;\n    }\n\n    clone(): BoundingBox3d {\n        let b = new BoundingBox3d();\n        b.min = this.min.clone();\n        b.max = this.max.clone();\n        b.empty = this.empty;\n        return b;\n    }\n\n    toString(): string {\n        return `BoundingBox3d(${this.min}, ${this.max})`;\n    }\n}\n\n// static functions that operate on Float32Arrays (or Float64Arrays)\n// all functions are in-place, and read/write from specified offsets\n// safe to use with the same array for both input and output\n\nexport type IArr = Float32Array | Float64Array;\n\nexport class Vec3Buf {\n\n    static add_(a: IArr, aOff: number, b: IArr, bOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0] + b[bOff + 0];\n        out[outOff + 1] = a[aOff + 1] + b[bOff + 1];\n        out[outOff + 2] = a[aOff + 2] + b[bOff + 2];\n    }\n\n    static sub_(a: IArr, aOff: number, b: IArr, bOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0] - b[bOff + 0];\n        out[outOff + 1] = a[aOff + 1] - b[bOff + 1];\n        out[outOff + 2] = a[aOff + 2] - b[bOff + 2];\n    }\n\n    static copy_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0];\n        out[outOff + 1] = a[aOff + 1];\n        out[outOff + 2] = a[aOff + 2];\n    }\n\n    static normalize_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        let x = a[aOff + 0];\n        let y = a[aOff + 1];\n        let z = a[aOff + 2];\n        let lenInv = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        out[outOff + 0] = x * lenInv;\n        out[outOff + 1] = y * lenInv;\n        out[outOff + 2] = z * lenInv;\n    }\n\n    static len_(a: Float32Array, aOff: number): number {\n        let x = a[aOff + 0];\n        let y = a[aOff + 1];\n        let z = a[aOff + 2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n}\n\nexport class Vec4Buf {\n    static copy_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0];\n        out[outOff + 1] = a[aOff + 1];\n        out[outOff + 2] = a[aOff + 2];\n        out[outOff + 3] = a[aOff + 3];\n    }\n}\n\nexport function segmentNearestPoint(p0: Vec3, p1: Vec3, x: Vec3) {\n    let v = p1.sub(p0);\n    let w = x.sub(p0);\n    let t = clamp(w.dot(v) / v.dot(v), 0, 1);\n    return p0.mulAdd(v, t);\n}\n\nexport function segmentNearestT(p0: Vec3, p1: Vec3, x: Vec3) {\n    let v = p1.sub(p0);\n    let w = x.sub(p0);\n    return clamp(w.dot(v) / v.dot(v), 0, 1);\n}\n\n// project x onto v\nexport function projectOntoVector(x: Vec3, v: Vec3) {\n    return v.mul(x.dot(v) / v.dot(v));\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"page_header__ezAD0\",\"back\":\"page_back__KmcK5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"FluidSimView_page__FFB8V\",\"canvasWrap\":\"FluidSimView_canvasWrap__qBCc0\",\"canvas\":\"FluidSimView_canvas__YZ0Xl\"};","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"next/dist/compiled/react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["Promise","resolve","then","__webpack_require__","t","bind","SourceType","PerlinNoise2D","noise","x","y","a","X","Math","floor","Y","u","fade","v","A","perm","AA","AB","B","BA","BB","dot2","grad2","b","octaveNoise","octaves","persistence","total","frequency","amplitude","maxValue","i","constructor","seed","rand","Random","makeArray","randint","g","initFluidSimState","sim","initFluidSim","w","h","cellSize","boxSizeM","width","height","numPressureIterations","cells","Float32Array","cells2","cells3","pressure0","pressure1","divergence0","divergence1","aggregates","iterCount","scaleX","scaleY","perlin","maxVelX","velX","velY","max","console","log","concat","fixBoundaries","computeAggregateValues","running","canvasTemp","document","createElement","stepFluidSim","dtMs","startTime","performance","now","dt","getCell","arr","j","k","getCellClamped","setCell","value","getCell0Clamped","getCellBilinearClamped","ya","xa","yb","xb","c","d","y0","x0","y1","x1","maxDx","maxVx","vX","vY","abs","tempSrc","densitySrc","velXSrc","velYSrc","set","arrOrig","arrFrom","arrTo","pressureFrom","pressureTo","calcDivergence","srcArr","divArray","divergence","divX","divY","calcDivergenceFreeVelocityField","pressure","pressureUp","pressureDown","pressureLeft","pressureRight","velXDst","velYDst","fill","pressureIterCount","iter","calcPressureField","divergenceField","pressureDst","pressureLaplace","tmp","aggs","totalMass","totalKineticEnergy","totalMomentumX","totalMomentumY","averageTemperature","temperature","density","mass","dummySubs","Subscriptions","FluidSimView","manager","setManager","useState","handleResetClicked","fluidSimState","markDirty","handleStepClicked","useSubscriptions","subscriptions","useScreenLayout","useEffect","handleKeyDown","ev","key","toLowerCase","addEventListener","removeEventListener","FluidSimManager","looper","stopped","jsx_runtime","jsxs","div","className","s","Fragment","jsx","button","onClick","CanvasView","sourceType","VelocityVector","sourceArray","name","Scalar","Temp","Density","renderOpts","param","canvasEl","setCanvasEl","React","useLayoutEffect","state","parentBcr","parentElement","getBoundingClientRect","pr","window","devicePixelRatio","ctx","getContext","clearRect","canvas","opts","drawToCanvas","sourceArr","cellData","Uint8ClampedArray","nPx","temp","floatToByte","localCanvas","localCtx","imageData","ImageData","putImageData","imageSmoothingEnabled","drawImage","save","scale","globalAlpha","vx","vy","vLen","sqrt","drawLen","x2","y2","dx","dy","x3","y3","x4","y4","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","restore","drawFieldToCanvas","ref","render","time","subs","forEach","Looper","prevTime","rafHandle","isDirty","requestAnimationFrame","loop","wasDirty","f","exp","length","val","makeArrayRange","min","map","_","oneHotArray","index","defaultVal","assignImm","target","source","keys","Object","changed","src","dst","Date","Vec3","distSq","assign","assignImmFull","isNil","isNotNil","clamp","num","base64ToArrayBuffer","base64","binaryString","atob","len","bytes","Uint8Array","charCodeAt","buffer","getOrAddToMap","valueFn","existing","get","undefined","hasFlag","flags","flag","useFunctionRef","fn","useRef","current","useRequestAnimationFrame","active","cb","cbRef","handle","stale","cancelAnimationFrame","useInterval","delay","runImmediately","setInterval","clearInterval","Set","subscribe","add","delete","notify","sub","subscription","refresh","useReducer","layout","setLayout","isDesktop","isPhone","mediaQuery","matchMedia","handleResize","innerWidth","innerHeight","matches","useResizeChangeHandler","el","handler","handlerRef","bcr","observer","ResizeObserver","observe","disconnect","random","seeder","normal","cos","PI","xmur3","str","imul","randomGen","toString","Dim","Z","z","dot","mul","mulAdd","lenSq","dz","dist","normalize","mid","clone","toVec4","Vec4","round","round_","copy_","cross","writeToBuf","buf","offset","fromArray","setAt","addAt","getAt","withSetAt","withAddAt","dp","numMaxDp","rotateAbout","thetaRad","sin","kCrossV","kDotV","lerp","zero","one","getIdx","dw","projToVec3","fromVec3","toArray","fromHexColor","alpha","startsWith","slice","hexVal","parseInt","toHexColor","toPair","padStart","parseFloat","toFixed","BoundingBox3d","addInPlace","empty","combineInPlace","center","size","contains","p","intersects","expandInPlace","border","shrinkInPlaceXY","inset","args","Vec3Buf","add_","aOff","bOff","out","outOff","sub_","normalize_","lenInv","len_","segmentNearestPoint","p0","p1","segmentNearestT","projectOntoVector","module","exports","Symbol","for","l","m","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","__self","__source","q","e","call","defaultProps","$$typeof","type","props","_owner"],"sourceRoot":""}