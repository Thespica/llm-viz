{"version":3,"file":"static/chunks/app/page-a8edaa8931d853a6.js","mappings":"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","sources":["webpack://_N_E/?ee68","webpack://_N_E/./src/llm/Annotations.ts","webpack://_N_E/./src/llm/Camera.ts","webpack://_N_E/./src/llm/Commentary.tsx","webpack://_N_E/./src/llm/GptModelLayout.ts","webpack://_N_E/./src/llm/Interaction.ts","webpack://_N_E/./src/utils/basic.ts","webpack://_N_E/./src/utils/renderPhases.ts","webpack://_N_E/./src/llm/GptModel.ts","webpack://_N_E/./src/utils/random.ts","webpack://_N_E/./src/utils/tensor.ts","webpack://_N_E/./src/utils/bezier.ts","webpack://_N_E/./src/llm/components/Arrow.ts","webpack://_N_E/./src/llm/components/SectionLabels.ts","webpack://_N_E/./src/llm/render/blockRender.ts","webpack://_N_E/./src/llm/render/blurRender.ts","webpack://_N_E/./src/llm/render/queryManager.ts","webpack://_N_E/./src/llm/render/modelRender.ts","webpack://_N_E/./src/llm/components/BlockInfo.ts","webpack://_N_E/./src/llm/NativeBindings.ts","webpack://_N_E/./src/llm/GptModelWasm.ts","webpack://_N_E/./src/llm/Program.ts","webpack://_N_E/./src/llm/CanvasEventSurface.tsx","webpack://_N_E/./src/llm/components/MovementControls.tsx","webpack://_N_E/./src/utils/layout.ts","webpack://_N_E/./src/utils/Resizer.tsx","webpack://_N_E/./src/llm/components/ModelSelectorToolbar.tsx","webpack://_N_E/./src/llm/LayerView.tsx","webpack://_N_E/./src/llm/PhaseTimeline.tsx","webpack://_N_E/./src/llm/SavedState.ts","webpack://_N_E/./src/llm/Sidebar.tsx","webpack://_N_E/./src/utils/localstorage.ts","webpack://_N_E/./src/utils/Portal.tsx","webpack://_N_E/./src/llm/WelcomePopup.tsx","webpack://_N_E/./src/llm/components/CommentaryHelpers.tsx","webpack://_N_E/./src/llm/components/DataFlow.ts","webpack://_N_E/./src/llm/components/ModelCard.ts","webpack://_N_E/./src/llm/components/TextLayout.ts","webpack://_N_E/./src/llm/components/TocDiagram.tsx","webpack://_N_E/./src/llm/render/fontRender.ts","webpack://_N_E/./src/llm/render/lineRender.ts","webpack://_N_E/./src/llm/render/sharedRender.ts","webpack://_N_E/./src/llm/render/threadRender.ts","webpack://_N_E/./src/llm/render/triRender.ts","webpack://_N_E/./src/llm/walkthrough/Walkthrough00_Intro.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough01_Prelim.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough02_Embedding.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough03_LayerNorm.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough04_SelfAttention.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough05_Softmax.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough06_Projection.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough07_Mlp.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough08_Transformer.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough09_Output.tsx","webpack://_N_E/./src/llm/walkthrough/Walkthrough.ts","webpack://_N_E/./src/llm/walkthrough/WalkthroughTools.ts","webpack://_N_E/./src/utils/data.ts","webpack://_N_E/./src/utils/hooks.ts","webpack://_N_E/./src/utils/keyboard.ts","webpack://_N_E/./src/utils/math.ts","webpack://_N_E/./src/utils/matrix.ts","webpack://_N_E/./src/utils/pointer.ts","webpack://_N_E/./src/utils/shader.ts","webpack://_N_E/./src/utils/vector.ts","webpack://_N_E/./src/llm/Commentary.module.scss","webpack://_N_E/./src/llm/LayerView.module.scss","webpack://_N_E/./src/llm/PhaseTimeline.module.scss","webpack://_N_E/./src/llm/Sidebar.module.scss","webpack://_N_E/./src/llm/WelcomePopup.module.scss","webpack://_N_E/./src/llm/components/TocDiagram.module.scss","webpack://_N_E/./src/llm/walkthrough/Walkthrough.module.scss","webpack://_N_E/./src/utils/Portal.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/src/llm/LayerView.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/src/llm/WelcomePopup.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/llm-viz/llm-viz/node_modules/next/dist/client/link.js\")","import { cellPosition, IBlkDef, IModelLayout } from \"./GptModelLayout\";\nimport { addLine } from \"./render/lineRender\";\nimport { IRenderState } from \"./render/modelRender\";\nimport { measureTextWidth, writeTextToBuffer } from \"./render/fontRender\";\nimport { lerp, lerpSmoothstep } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { DimStyle, dimStyleColor, dimStyleText } from \"./walkthrough/WalkthroughTools\";\nimport { IProgramState } from \"./Program\";\nimport { camScaleToScreen } from \"./Camera\";\nimport { isNil } from \"@/src/utils/data\";\n\nexport function blockDimension(state: IProgramState, layout: IModelLayout, blk: IBlkDef, dim: Dim, style: DimStyle, t: number) {\n    let render = state.render;\n\n    // Render |----- T ------| along the appropriate dimension\n\n    let { vecId } = dimConsts(dim);\n    let { cx } = dimProps(blk, dim);\n\n    let offVecId = vecId === 0 ? 1 : 0;\n\n    let text = dimStyleText(style);\n    if (style === DimStyle.None) {\n        return;\n    }\n\n    let start = cellPosition(layout, blk, dim, 0);\n    let end = cellPosition(layout, blk, dim, cx - 1) + layout.cell;\n    let mid = (end + start) / 2;\n    let midPos = dim === Dim.X ? new Vec3(mid, blk.y + blk.dz, blk.z + blk.dz) : new Vec3(blk.x, mid, blk.z + blk.dz);\n    let mul = dim === Dim.X ? -1.0 : 1.0;\n\n    let scale = camScaleToScreen(state, midPos);\n    scale = Math.min(scale, 1);\n\n    let fontSize = 2.5 * scale;\n    let tw = measureTextWidth(render.modelFontBuf, text, fontSize);\n    let th = fontSize;\n    let textPad = dim === Dim.X ? tw / 2 + fontSize * 0.4 : dim === Dim.Y ? th / 2 + fontSize * 0.4 : 0;\n\n    let botPad = fontSize * 0.3;\n    let edgeH2 = fontSize / 2 * 0.5;\n\n    let color = dimStyleColor(style).mul(t);\n\n    let zOffset = 0.1;\n\n    let textPos = new Vec3(blk.x, blk.y + blk.dy, blk.z + blk.dz + zOffset)\n        .setAt(vecId, mid)\n        .withAddAt(offVecId, -mul * (fontSize / 2 + botPad));\n\n    let textYOff = 0;\n    let tooSmall = tw > end - start - textPad * 2;\n    if (tooSmall) {\n        textYOff = mul * fontSize;\n    }\n\n    let mtx = Mat4f.fromTranslation(textPos);\n\n    let textDx = dim === Dim.X ? -tw / 2 : dim === Dim.Y ? -tw / 2 : 0;\n    let textDy = dim === Dim.X ? -textYOff - fontSize / 2 : dim === Dim.Y ? -fontSize / 2 : 0;\n\n    writeTextToBuffer(render.modelFontBuf, text, color, textDx, textDy, fontSize, mtx);\n\n    // let yOff = fontSize / 2 + botPad;\n    let lX = blk.x;\n    let lY = blk.y + blk.dy;\n    let lZ = blk.z + blk.dz + zOffset;\n    let thickness = fontSize * 0.02;\n    let n = new Vec3(0, 0, 1);\n\n    if (tooSmall) {\n        textPad = 0;\n\n    }\n\n    let base = new Vec3(lX, lY, lZ).withAddAt(offVecId, -mul * (fontSize / 2 + botPad));\n    let vStart = base.withSetAt(vecId, start);\n    let vEnd = base.withSetAt(vecId, end);\n    let vMid1 = base.withSetAt(vecId, mid - textPad);\n    let vMid2 = base.withSetAt(vecId, mid + textPad);\n\n    addLine(render.lineRender, thickness, color, vStart, vMid1, n);\n    addLine(render.lineRender, thickness, color, vEnd  , vMid2, n);\n    addLine(render.lineRender, thickness, color, vStart.withAddAt(offVecId, edgeH2), vStart.withAddAt(offVecId, -edgeH2), n);\n    addLine(render.lineRender, thickness, color, vEnd.withAddAt(offVecId, edgeH2), vEnd.withAddAt(offVecId, -edgeH2), n);\n}\n\nexport function blockIndex(state: IRenderState, layout: IModelLayout, blk: IBlkDef, dim: Dim, style: DimStyle, idx: number, cellOffset: number, t: number) {\n    if (t === 0) return;\n\n    let fontSize = 2;\n    let text = DimStyle[style] + '=' + Math.round(idx).toFixed(0);\n    let font = '';\n\n    let tw = measureTextWidth(state.modelFontBuf, text, fontSize, font);\n\n    let cellL = cellPosition(layout, blk, dim, Math.floor(idx)) + layout.cell / 2;\n    let cellR = cellPosition(layout, blk, dim, Math.ceil(idx)) + layout.cell / 2;\n    let pos = lerp(cellL, cellR, idx - Math.floor(idx)) + lerpSmoothstep(0, cellOffset, Math.min(idx, 1));\n    let botPad = fontSize * 0.5;\n\n    let color = dimStyleColor(style).mul(t);\n\n    let mtx = Mat4f.fromTranslation(new Vec3(pos, blk.y - botPad, blk.z + blk.dz));\n\n    writeTextToBuffer(state.modelFontBuf, text, color, -tw / 2, -fontSize, fontSize, mtx, font);\n}\n\ninterface IDimConst {\n    vecId: number;\n    xName: string;\n    dxName: string;\n    cxName: string;\n    offXName: string;\n    sizeXName: string;\n}\n\nlet dimConstX: IDimConst = { vecId: 0, xName: 'x', dxName: 'dx', cxName: 'cx', offXName: 'offX', sizeXName: 'sizeX' };\nlet dimConstY: IDimConst = { vecId: 1, xName: 'y', dxName: 'dy', cxName: 'cy', offXName: 'offY', sizeXName: 'sizeY' };\nlet dimConstZ: IDimConst = { vecId: 2, xName: 'z', dxName: 'dz', cxName: 'cz', offXName: 'offZ', sizeXName: 'sizeZ' };\n\nexport function dimConsts(dim: Dim) {\n    return dim === Dim.X ? dimConstX : dim === Dim.Y ? dimConstY : dimConstZ;\n}\n\nexport function dimProps(blk: IBlkDef, dim: Dim) {\n    switch (dim) {\n        case Dim.X: return { x: blk.x, cx: blk.cx, dx: blk.dx, rangeOffsets: blk.rangeOffsetsX, offX: blk.offX ?? 0, sizeX: blk.sizeX ?? blk.cx };\n        case Dim.Y: return { x: blk.y, cx: blk.cy, dx: blk.dy, rangeOffsets: blk.rangeOffsetsY, offX: blk.offY ?? 0, sizeX: blk.sizeY ?? blk.cy };\n        case Dim.Z: return { x: blk.z, cx: blk.cz, dx: blk.dz, rangeOffsets: blk.rangeOffsetsZ, offX: blk.offZ ?? 0, sizeX: blk.sizeZ ?? blk.cz };\n    }\n}\n\nexport function duplicateGrid(layout: IModelLayout, blk: IBlkDef): IBlkDef {\n    let newBlk = { ...blk, access: blk.access ? { ...blk.access } : undefined };\n    newBlk.name = '';\n    layout.cubes.push(newBlk);\n    return newBlk;\n}\n\nexport function splitGridForHighlight(layout: IModelLayout, blk: IBlkDef, dim: Dim, xSplit: number) {\n    let { x, cx, rangeOffsets } = dimProps(blk, dim);\n\n    if (cx <= 1) {\n        return blk;\n    }\n\n    // if there exists some rangeOffsets in our dim, then we iter over the sub-blocks, and split them\n    if (rangeOffsets && blk.subs) {\n        for (let s of blk.subs) {\n            let res = splitGrid(layout, s, dim, xSplit, 0);\n            if (res) {\n                return res;\n            }\n        }\n    }\n\n    return splitGrid(layout, blk, dim, xSplit, 0);\n}\n\nexport function splitGrid(layout: IModelLayout, blk: IBlkDef, dim: Dim, xSplit: number, splitAmt: number) {\n    // generate several new blocks (let's say up to 5) that are neighbouring the zSplit point\n\n    // main-left, left, center, right, main-right\n\n    // choose center as floor(zSplit), left is floor(zSplit) - 1, right is floor(zSplit) + 1\n    // main-left and main-right are the remaining\n    // only create those if there's space\n\n    // The splitAmt governs the overall gap between blocks\n    // Want a rotating-block-under-examination effect. When zSplit is right down the center (x + 0.5),\n    // have max seperation, and effectively join left & right with their main\n    // For non 0.5 zSplits, will show 2 gaps\n\n    let { offX, sizeX } = dimProps(blk, dim);\n\n    // if (cxSub <= 1 && ) {\n    //     return blk;\n    // }\n\n    let blocks: IBlkDef[] = [];\n    let rangeOffsets: [number, number][] = [];\n\n    let colX = Math.floor(xSplit) - offX;\n    if (colX < 0 || colX >= sizeX) {\n        return null;\n    }\n\n    if (sizeX <= 1) {\n        return blk;\n    }\n\n    function addSubBlockLocal(iStart: number, iEnd: number, xOffset: number) {\n        let res = addSubBlock(layout, blk, dim, iStart, iEnd, xOffset);\n        if (res) {\n            blocks.push(res.subBlock);\n            rangeOffsets.push(res.rangeOffset);\n        }\n        return res?.subBlock ?? null;\n    }\n\n    let midBlock: IBlkDef | null;\n    if (splitAmt === 0) {\n        addSubBlockLocal(0, colX, 0.0);\n        midBlock = addSubBlockLocal(colX, colX + 1, 0.0);\n        addSubBlockLocal(colX + 1, sizeX, 0.0);\n\n    } else {\n        let scale = 0.5;\n        let fract = (xSplit - colX - 0.5) * scale + 0.5;\n\n        let addMidBlockBefore = fract + scale < 1.0;\n        let addMidBlockAfter = fract - scale > 0.0;\n        let offset = lerpSmoothstep(-splitAmt, 0, (xSplit - 0.5) * scale + 0.5);\n\n        addSubBlockLocal(0     , colX - (addMidBlockBefore ? 1 : 0), offset + 0.0);\n\n        if (addMidBlockBefore) {\n            addSubBlockLocal(colX - 1, colX    , offset + lerpSmoothstep(splitAmt, 0, fract + scale));\n        }\n\n        midBlock = addSubBlockLocal(colX    , colX + 1, offset + lerpSmoothstep(splitAmt, 0, fract));\n\n        if (addMidBlockAfter) {\n            addSubBlockLocal(colX + 1, colX + 2, offset + lerpSmoothstep(splitAmt, 0, fract - scale));\n        }\n\n        addSubBlockLocal(colX + (addMidBlockAfter ? 2 : 1), sizeX, offset + splitAmt);\n    }\n\n    if (blocks.length > 0) {\n        if (dim === Dim.X) blk.rangeOffsetsX = rangeOffsets;\n        if (dim === Dim.Y) blk.rangeOffsetsY = rangeOffsets;\n        if (dim === Dim.Z) blk.rangeOffsetsZ = rangeOffsets;\n        blk.subs = blocks;\n        return midBlock;\n\n    } else {\n        return null;\n    }\n}\n\ninterface ISubBlockInfo {\n    subBlock: IBlkDef;\n    rangeOffset: [number, number];\n}\n\nfunction addSubBlock(layout: IModelLayout, blk: IBlkDef, dim: Dim, iStart: number, iEnd: number, xOffset: number): ISubBlockInfo | null {\n    let { x, cx, sizeX, offX } = dimProps(blk, dim);\n    let { vecId, xName, dxName, offXName, sizeXName } = dimConsts(dim);\n\n    if (iStart >= iEnd || iEnd <= 0 || iStart >= sizeX) {\n        return null;\n    }\n\n    let scale = (iEnd - iStart) / sizeX;\n    let translate = iStart / sizeX;\n\n    let mtx = Mat4f.fromScaleTranslation(new Vec3(1,1,1).setAt(vecId, scale), new Vec3().setAt(vecId, translate));\n\n    let subBlock: IBlkDef = { ...blk,\n        [dxName]: (iEnd - iStart) * layout.cell,\n        // [cxName]: iEnd - iStart,\n        access: blk.access && { ...blk.access },\n        localMtx: (blk.localMtx ?? new Mat4f()).mul(mtx),\n        [xName]: x + (iStart * layout.cell + xOffset),\n        [offXName]: iStart + offX,\n        [sizeXName]: iEnd - iStart,\n    };\n    return { subBlock, rangeOffset: [iEnd, xOffset] };\n}\n\n\nexport function splitGridAll(layout: IModelLayout, blk: IBlkDef, dim: Dim) {\n    let { dx } = dimProps(blk, dim);\n\n    let nCells = Math.ceil(dx / layout.cell);\n\n    let blocks: IBlkDef[] = [];\n    let rangeOffsets: [number, number][] = [];\n\n    for (let i = 0; i < nCells; i += 1) {\n        let res = addSubBlock(layout, blk, dim, i, i + 1, 0)!;\n        blocks.push(res.subBlock);\n        rangeOffsets.push(res.rangeOffset);\n    }\n\n    if (dim === Dim.X) blk.rangeOffsetsX = rangeOffsets;\n    if (dim === Dim.Y) blk.rangeOffsetsY = rangeOffsets;\n    if (dim === Dim.Z) blk.rangeOffsetsZ = rangeOffsets;\n    blk.subs = blocks;\n\n    return blocks;\n}\n\nexport interface IColorMix {\n    color1?: Vec4;\n    color2: Vec4;\n    mixes: number[];\n}\n\nexport function renderIndexes(state: IRenderState, layout: IModelLayout, blk: IBlkDef, color: Vec4, t: number, count: number = 4, offset: number = 0, data: Float32Array | null = null, mix?: IColorMix) {\n    let { modelFontBuf: fontBuf, lineRender } = state;\n\n    // Just rendering the 0, 1, 2 tokens, with plans to advance to the GPT text model etc\n\n    count = count || 3;\n\n    if (!data) {\n        data = new Float32Array(count);\n        for (let i = 0; i < count; i += 1) {\n            data[i] = i + offset;\n        }\n    }\n\n    // may scale with view\n    let em = layout.cell * 1;\n\n    let yLower = blk.y - em - layout.cell;// layout.cell * 2;\n\n    let strParts = [];\n    let textOffset = 0;\n    let i = 0;\n    for (let a of data) {\n        if (i >= count) {\n            break;\n        }\n        let w = measureTextWidth(fontBuf, '' + a, em);\n        let space = Math.max(layout.cell, w);\n        strParts.push({ val: a, textOffset, w, i, space });\n        textOffset += space;\n        i += 1;\n    }\n\n    let leftPos = cellPosition(layout, blk, Dim.X, offset);\n\n    let mtxRes = Mat4f.fromTranslation(new Vec3(0, yLower, 0));\n    let totalOffset = leftPos - textOffset / 2 + layout.cell * count / 2;\n    color = color.mul(t);\n\n    for (let a of strParts) {\n        let x = totalOffset + a.textOffset + a.space / 2 - a.w / 2;\n\n        let drawColor = color;\n        if (mix) {\n            let val = mix.mixes[a.i];\n            if (val > 0.0) {\n                drawColor = Vec4.lerp(color, mix.color2, val);\n            }\n        }\n\n        writeTextToBuffer(fontBuf, '' + a.val, drawColor, x, 0, em, mtxRes);\n\n        let tx = x + a.w / 2;\n        let bx = cellPosition(layout, blk, Dim.X, a.i + offset) + layout.cell * 0.5;\n        let top = yLower + em;\n        let delta = 0.1 * em;\n        let bot = Math.max(blk.y - 0.3, top);\n        let thick = em * 0.02;\n        // addLine(lineRender, thick, color, new Vec3(tx, 0, top), new Vec3(tx, 0, top - delta));\n        addLine(lineRender, thick, drawColor, new Vec3(tx, top + delta, 0), new Vec3(bx, bot - delta, 0), new Vec3(0, 0, 1));\n        // addLine(lineRender, thick, color, new Vec3(bx, 0, bot + delta), new Vec3(bx, 0, bot));\n    }\n}\n\nexport function indexMappingLines(state: IRenderState, layout: IModelLayout, blkSrc: IBlkDef, blkDest: IBlkDef, color: Vec4, srcPad: number, destPad: number, srcIdx: number, destIdx: number, lineFract: number) {\n\n    // assume all in x-y plane, and idx's are in x, and src is above dest\n\n    let top = blkSrc.y + blkSrc.dy + srcPad;\n    let bot = blkDest.y - destPad;\n    let midY = lerp(top, bot, lineFract);\n    let z = 0; // blkSrc.z + blkSrc.dz;\n\n    let srcX = cellPosition(layout, blkSrc, Dim.X, srcIdx) + layout.cell * 0.5;\n    let destX = cellPosition(layout, blkDest, Dim.X, destIdx) + layout.cell * 0.5;\n\n    // dogleg line, using only horizontal and vertical lines\n\n    let n = new Vec3(0, 0, 1);\n    let thick = layout.cell * 0.025;\n    addLine(state.lineRender, thick, color, new Vec3(srcX, top, z), new Vec3(srcX, midY, z), n);\n    addLine(state.lineRender, thick, color, new Vec3(srcX, midY, z), new Vec3(destX, midY, z), n);\n    addLine(state.lineRender, thick, color, new Vec3(destX, midY, z), new Vec3(destX, bot, z), n);\n}\n\n/* Returns all subblocks along a given dimension that overlap the provided range\n\nUsed in combination with splitGrid. To find all blocks up to, but not including the target idx 3, use:\n\n    findSubBlocks(blk, Dim.X, null, 3)\n\nTo find the exact block at idx 3, use:\n\n    findSubBlocks(blk, Dim.X, 3, 3)\n\nTo find all blocks after idx 3, use:\n\n    findSubBlocks(blk, Dim.X, 4, null)\n\n*/\nexport function findSubBlocks(blk: IBlkDef, dim: Dim, idxLow: number | null, idxHi: number | null) {\n    if (!blk.subs) {\n        return [];\n    }\n\n    let offsets = dim === Dim.X ? blk.rangeOffsetsX : dim === Dim.Y ? blk.rangeOffsetsY : blk.rangeOffsetsZ;\n    idxLow = idxLow === null ? null : Math.floor(idxLow);\n    idxHi = idxHi === null ? null : Math.floor(idxHi);\n\n    let subBlocks: IBlkDef[] = [];\n    let startIdx = 0;\n    for (let i = 0; i < blk.subs.length; i += 1) {\n        let endIdx = offsets?.[i]?.[0];\n        if (isNil(endIdx)) {\n            break;\n        }\n        if ((idxLow === null || idxLow < endIdx) && (idxHi === null || idxHi >= startIdx)) {\n            subBlocks.push(blk.subs[i]);\n        }\n        startIdx = endIdx;\n    }\n    return subBlocks;\n}\n\nexport enum TextAlignVert {\n    Top,\n    Middle,\n    Bottom,\n}\n\nexport enum TextAlignHoriz {\n    Left,\n    Center,\n    Right,\n}\n\nexport interface IFontConfig {\n    color?: Vec4; // default black\n    align?: TextAlignHoriz; // default left\n    valign?: TextAlignVert; // default top\n    size?: number; // default 1\n    face?: string; // default 'Roboto-Regular'\n}\n\nexport function drawTextOnModel(state: IRenderState, text: string, pos: Vec3, cfg: IFontConfig) {\n    let { modelFontBuf: fontBuf } = state;\n\n    let color = cfg.color || new Vec4(0, 0, 0, 1);\n    let align = cfg.align || TextAlignHoriz.Left;\n    let valign = cfg.valign || TextAlignVert.Top;\n    let size = cfg.size || 1;\n    let face = cfg.face;\n\n    let w = measureTextWidth(fontBuf, text, size);\n    let h = size;\n\n    let x = pos.x;\n    let y = pos.y;\n    let z = pos.z;\n\n    if (align === TextAlignHoriz.Center) {\n        x -= w / 2;\n    } else if (align === TextAlignHoriz.Right) {\n        x -= w;\n    }\n\n    if (valign === TextAlignVert.Middle) {\n        y -= h / 2;\n    } else if (valign === TextAlignVert.Bottom) {\n        y -= h;\n    }\n\n    let mtxRes = Mat4f.fromTranslation(new Vec3(x, y, 0));\n\n    writeTextToBuffer(fontBuf, text, color, 0, 0, size, mtxRes, face);\n}\n\n\nexport function addSourceDestCurveLine(state: IRenderState, layout: IModelLayout, srcBlk: IBlkDef, destBlk: IBlkDef, srcIdx: Vec3, destIdx: Vec3, color: Vec4) {\n    // assume always sampling in x-y plane\n    // so ignoring the z component of the idx's\n\n    let srcX = cellPosition(layout, srcBlk, Dim.X, srcIdx.x) + layout.cell * 0.5;\n    let srcY = cellPosition(layout, srcBlk, Dim.Y, srcIdx.y) + layout.cell * 0.5;\n    let srcZ = cellPosition(layout, srcBlk, Dim.Z, srcBlk.cz - 1) + layout.cell;\n\n    let destX = cellPosition(layout, destBlk, Dim.X, destIdx.x) + layout.cell * 0.5;\n    let destY = cellPosition(layout, destBlk, Dim.Y, destIdx.y) + layout.cell * 0.5;\n    let destZ = cellPosition(layout, destBlk, Dim.Z, destBlk.cz - 1) + layout.cell;\n\n    // want the curve to start & end at about 45deg from the x-y plane, and rise up in z\n    // projected along the x-y plane, the curve should be straight line\n    // we'll go for a circular arc, where the center of the circle is at the midpoint of the line, and at a fixed z height\n\n    // may have to deal with different z heights of the src & dest blocks\n    let srcPos = new Vec3(srcX, srcY, srcZ);\n    let destPos = new Vec3(destX, destY, destZ);\n    let midPos = srcPos.add(destPos).mul(0.5);\n\n    let cVec = Vec3.cross(srcPos.sub(destPos), new Vec3(1.2, 1, 0)).normalize().mul(10);\n    if (cVec.z > srcZ) {\n        cVec = cVec.mul(-1);\n    }\n    let circleCenter = cVec.add(midPos);\n\n\n    let radius = srcPos.dist(circleCenter);\n\n    let theta = Math.asin(srcPos.dist(midPos) / radius) * 2.0;\n\n    let n = Vec3.cross(circleCenter.sub(srcPos), circleCenter.sub(destPos)).normalize();\n\n    let rotateVec = srcPos.sub(circleCenter);\n\n    let count = 20;\n    let prevP = srcPos;\n    for (let i = 0; i <= count; i++) {\n        let t = i / count;\n        let p1 = circleCenter.add(rotateVec.rotateAbout(n, t * theta));\n        addLine(state.lineRender, 3, color, prevP, p1);\n        prevP = p1;\n    }\n    // arc from src to dest around circleCenter\n\n\n\n}\n","import { IModelLayout } from \"./GptModelLayout\";\nimport { IProgramState } from \"./Program\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { BoundingBox3d, Vec3 } from \"@/src/utils/vector\";\nimport { IRenderView } from \"./render/modelRender\";\nimport { clamp } from \"../utils/data\";\n\nexport interface ICamera {\n    camPos: Vec3;\n    camPosModel: Vec3;\n    lookAtMtx: Mat4f;\n    viewMtx: Mat4f;\n    modelMtx: Mat4f;\n    center: Vec3;\n    angle: Vec3; // x = degrees about z axis, y = degrees above the x-y plane; z = zoom\n\n    centerDesired?: Vec3;\n    // separated into rotation & zoom since they behave differently, and we want to control them separately\n    // probably should just split out the zoom into a separate variable\n    angleDesired?: Vec3;\n    angleZDesired?: number;\n\n    desiredCamera?: ICameraPos;\n    desiredCameraTransition?: {\n        t: number;\n        initialPos: ICameraPos;\n        targetPos: ICameraPos;\n    },\n\n    transition: {\n        centerT?: number;\n        angleT?: number;\n        angleZT?: number;\n\n        centerInit?: Vec3;\n        angleInit?: Vec3;\n        angleZInit?: number;\n    }\n}\n\nexport interface ICameraPos {\n    center: Vec3;\n    angle: Vec3;\n}\n\n\nexport function cameraToMatrixView(camera: ICamera) {\n    while (camera.angle.x < 0) camera.angle.x += 360;\n    while (camera.angle.x > 360) camera.angle.x -= 360;\n\n    let camZoom = camera.angle.z;\n    let angleX = camera.angle.x * Math.PI / 180;\n    let angleY = camera.angle.y * Math.PI / 180;\n\n    let dist = 200 * camZoom;\n    let camZ = dist * Math.sin(angleY);\n    let camX = dist * Math.cos(angleY) * Math.cos(angleX);\n    let camY = dist * Math.cos(angleY) * Math.sin(angleX);\n\n    let camLookat = camera.center;\n    let camPos = new Vec3(camX, camY, camZ).add(camLookat);\n\n    return {\n        lookAt: Mat4f.fromLookAt(camPos, camLookat, new Vec3(0, 0, 1)),\n        camPos,\n    };\n}\n\nexport function genModelViewMatrices(state: IProgramState, layout: IModelLayout, modelOffset: Vec3 = Vec3.zero) {\n    let { camera } = state;\n\n    let bb = new BoundingBox3d();\n    for (let c of layout.cubes) {\n        let tl = new Vec3(c.x, c.y, c.z).add(modelOffset);\n        let br = new Vec3(c.x + c.dx, c.y + c.dy, c.z + c.dz).add(modelOffset);\n        bb.addInPlace(tl);\n        bb.addInPlace(br);\n    }\n    let localDist = bb.size().len();\n\n    let { lookAt, camPos } = cameraToMatrixView(camera);\n    let dist = 200 * camera.angle.z;\n\n    // let persp = Mat4f.fromPersp(40, state.render.size.x / state.render.size.y, dist / 100, localDist + Math.max(dist * 2, 100000));\n    let persp = Mat4f.fromPersp(40, state.render.size.x / state.render.size.y, 100, 10000000);\n    let viewMtx = persp.mul(lookAt);\n    let modelMtx = new Mat4f();\n    modelMtx[0] = 1.0;\n    modelMtx[5] = 0.0;\n    modelMtx[6] = -1.0;\n    modelMtx[9] = -1.0;\n    modelMtx[10] = 0.0;\n\n    state.camera.modelMtx = modelMtx;\n    state.camera.viewMtx = viewMtx;\n    state.camera.camPos = camPos;\n    state.camera.camPosModel = modelMtx.invert().mulVec3Affine(camPos);\n    state.camera.lookAtMtx = lookAt;\n}\n\nexport function camScaleToScreen(state: IProgramState, modelPt: Vec3) {\n    let camDist = state.camera.camPosModel.dist(modelPt);\n    return camDist / state.render.size.y * 5.0;\n}\n\nexport function cameraMoveToDesired(camera: ICamera, dt: number) {\n\n    // This is making me nauseous. Gonna do jump-to instead of smooth transition for now.\n\n    // We'll use the velocity to check if we've applied the desired value, so we know when to\n    // modify the main camera\n    let duration = 1000 * 1;\n\n    if (camera.centerDesired && camera.transition.centerT === undefined) {\n        camera.transition.centerInit = camera.center;\n        camera.transition.centerT = 0.0;\n    }\n    if (camera.transition.centerT !== undefined) {\n        camera.transition.centerT += dt / duration;\n        if (camera.transition.centerT > 1.0) {\n            camera.transition.centerT = undefined;\n            camera.transition.centerInit = undefined;\n            camera.centerDesired = undefined;\n        } else if (camera.transition.centerInit && camera.centerDesired) {\n            camera.center = camera.transition.centerInit!.lerp(camera.centerDesired!, camera.transition.centerT);\n        }\n    }\n\n    if (camera.angleDesired && camera.transition.angleT === undefined) {\n        camera.transition.angleInit = camera.angle;\n        camera.transition.angleT = 0.0;\n    }\n    if (camera.transition.angleT !== undefined) {\n        camera.transition.angleT += dt / duration;\n        if (camera.transition.angleT > 1.0) {\n            camera.transition.angleT = undefined;\n            camera.transition.angleInit = undefined;\n            camera.angleDesired = undefined;\n        } else if (camera.transition.angleInit && camera.angleDesired) {\n            camera.angle = camera.transition.angleInit!.lerp(camera.angleDesired!, camera.transition.angleT);\n        }\n    }\n}\n\nexport function updateCamera(state: IProgramState, view: IRenderView) {\n\n    let transition = state.camera.desiredCameraTransition;\n\n    if (transition) {\n        if (transition.t < 1) {\n            transition.t = clamp(transition.t + view.dt / 1000 * 1.5, 0, 1);\n            let src = transition.initialPos;\n            let dest = transition.targetPos;\n\n            state.camera.angle = src.angle.lerp(dest.angle, transition.t);\n            state.camera.center = src.center.lerp(dest.center, transition.t);\n            view.markDirty();\n        } else {\n            state.camera.desiredCameraTransition = undefined;\n        }\n    }\n\n    // take a frame before we start moving the camera\n    if (state.camera.desiredCamera) {\n        state.camera.desiredCameraTransition = {\n            t: 0,\n            initialPos: {\n                center: state.camera.center,\n                angle: state.camera.angle,\n            },\n            targetPos: state.camera.desiredCamera,\n        }\n        state.camera.desiredCamera = undefined;\n        view.markDirty();\n    }\n}\n\n\nexport interface ISpringConfig {\n    tension: number;\n    mass: number;\n    friction?: number;\n    extra?: number;\n}\n\nexport function applySpringStep(pos: Vec3, target: Vec3, vel: Vec3 | null | undefined, dt: number, config: ISpringConfig) {\n    // default to critically damped\n    let friction = config.friction ?? 2 * Math.sqrt(config.mass * config.tension);\n    let dtS = dt / 1000;\n    vel = vel ?? new Vec3();\n    let dist = pos.sub(target);\n    let springExtra = dist.lenSq() === 0.0 ? new Vec3() : dist.normalize().mul(config.extra ?? 0);\n    let springF = (dist.add(springExtra)).mul(-config.tension);\n    let dampF = vel.mul(-friction);\n    let accel = springF.add(dampF).mul(1.0 / config.mass);\n\n    vel = vel.add(accel.mul(dtS));\n    pos = pos.add(vel.mul(dtS));\n    return { pos, vel };\n}\n","import React, { ReactNode, isValidElement, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport s from './Commentary.module.scss';\nimport { PhaseTimelineHoriz } from './PhaseTimeline';\nimport { useProgramState } from './Sidebar';\nimport { clamp } from '@/src/utils/data';\nimport { lerp, lerpSmoothstep } from '@/src/utils/math';\nimport { phaseToGroup, IWalkthrough, Phase } from './walkthrough/Walkthrough';\nimport { eventEndTime, ICommentary, isCommentary, ITimeInfo } from './walkthrough/WalkthroughTools';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowDown, faChevronLeft, faChevronRight, faPause, faPlay } from '@fortawesome/free-solid-svg-icons';\nimport clsx from 'clsx';\nimport { TocDiagram } from './components/TocDiagram';\nimport { BlockText, DimensionText } from './components/CommentaryHelpers';\nimport { useRequestAnimationFrame } from '../utils/hooks';\n\nexport function jumpToPhase(wt: IWalkthrough, phaseId: Phase) {\n    wt.time = 0;\n    wt.phase = phaseId;\n    wt.running = false;\n    wt.markDirty();\n}\n\nexport function jumpPhase(wt: IWalkthrough, phaseDelta: number) {\n    let group = phaseToGroup(wt);\n    let groupIdx = wt.phaseList.indexOf(group);\n    let phaseGroupIdx = group.phases.findIndex(p => p.id === wt.phase);\n    let newPhaseGroupIdx = phaseGroupIdx + phaseDelta;\n\n    if (newPhaseGroupIdx < 0) {\n        if (groupIdx > 0) {\n            let newGroup = wt.phaseList[groupIdx - 1];\n            wt.phase = newGroup.phases[newGroup.phases.length - 1].id;\n        }\n    } else if (newPhaseGroupIdx >= group.phases.length) {\n        if (groupIdx < wt.phaseList.length - 1) {\n            let newGroup = wt.phaseList[groupIdx + 1];\n            wt.phase = newGroup.phases[0].id;\n        }\n    } else {\n        wt.phase = group.phases[newPhaseGroupIdx].id;\n    }\n\n    console.log(`new phase is ${Phase[wt.phase]}`);\n\n    wt.time = 0;\n    wt.running = false;\n}\n\nexport const Commentary: React.FC = () => {\n    let progState = useProgramState();\n    let [parasEl, setParasEl] = React.useState<HTMLDivElement | null>(null);\n    // let [rangeInfo, setRangeInfo] = React.useState<{ start: number, end: number, width: number }>({ start: 0, end: 0, width: 1 });\n    let wt = progState.walkthrough;\n\n    function handleKeyDown(ev: React.KeyboardEvent) {\n        if (ev.key === ' ') {\n            ev.preventDefault(); // prevent scrolling\n        }\n    }\n\n    function handleContinueClick() {\n        if (wt.time >= wt.phaseLength) {\n            jumpPhase(wt, 1);\n            wt.time = 0;\n        } else {\n            wt.running = !wt.running;\n        }\n        progState.markDirty();\n    }\n\n    function handleAdvanceClick() {\n        if (wt.time >= wt.phaseLength) {\n            jumpPhase(wt, 1);\n            wt.time = 0;\n        } else {\n            wt.running = true;\n            let node = nodes.find(n => n.end > wt.time);\n            let speed = 15;\n            if (node) {\n                if (node.end > wt.time) {\n                    speed = (node.end - wt.time) * 2;\n                }\n            }\n            wt.speed = speed;\n        }\n        progState.markDirty();\n    }\n\n    function handlePhaseDeltaClick(delta: number) {\n        jumpPhase(wt, delta);\n        progState.markDirty();\n    }\n\n    let numTimes = wt.times.length;\n\n    let { nodes } = useMemo(() => {\n        let nodes: INode[] = [];\n        let prevIsTime = false;\n        for (let c of wt.times) {\n            if (isCommentary(c)) {\n                nodes.push({ commentary: c, isBreak: false, start: c.start, end: eventEndTime(c) });\n                prevIsTime = false;\n            } else {\n                !prevIsTime && nodes.push({ times: [], isBreak: false, start: c.start, end: c.start });\n                let lastNode = nodes[nodes.length - 1];\n                lastNode.times!.push(c);\n                lastNode.isBreak ||= !!c.isBreak;\n                lastNode.end = eventEndTime(c);\n                prevIsTime = true;\n            }\n        }\n        return { nodes };\n    }, [wt.times]);\n\n    let { prevBreak, nextBreak } = useMemo(() => {\n        let prevBreak = -1;\n        let nextBreak = -1;\n        let lastBreak = -1;\n        for (let i = 0; i < nodes.length + 1; i++) {\n            let node = nodes[i];\n            if (node?.isBreak || i === nodes.length) {\n                if (i === nodes.length || node.start >= wt.time) {\n                    nextBreak = lastBreak - 1;\n                    break;\n                }\n                prevBreak = lastBreak + 1;\n                lastBreak = i;\n            }\n        }\n        return { prevBreak, nextBreak };\n    }, [wt.time, nodes]);\n\n    interface IGuideLayout {\n        width: number;\n        height: number;\n        parentHeight: number;\n        childRanges: IChildRange[];\n    }\n\n    interface IChildRange {\n        top: number;\n        bottom: number;\n        height: number;\n        nodeId: number;\n        startT: number;\n        endT: number;\n    }\n\n    let [guideLayout, setGuideLayout] = useState<IGuideLayout>({ width: 0, height: 0, parentHeight: 0, childRanges: [] });\n\n    useLayoutEffect(() => {\n\n        function handleChildren() {\n            if (!parasEl?.children) return;\n\n            let parasBcr = parasEl.getBoundingClientRect();\n\n            let ranges: IChildRange[] = [];\n\n            for (let child of parasEl.children) {\n                let nid = parseInt(child.getAttribute('data-nid')!);\n                let c = nodes[nid];\n                if (!c) {\n                    continue;\n                }\n                let cStart = c.commentary?.start ?? c.times![0].start;\n                let cEnd = eventEndTime(c.commentary ?? c.times![c.times!.length - 1]);\n                let childBcr = child.getBoundingClientRect();\n\n                ranges.push({ top: childBcr.top - parasBcr.top, bottom: childBcr.bottom - parasBcr.top, nodeId: nid, startT: cStart, endT: cEnd, height: childBcr.height });\n            }\n            // console.log('handling resize event (or first time)', parasBcr.height);\n            setGuideLayout({\n                width: parasBcr.width - 40,\n                height: parasBcr.height,\n                parentHeight: parasEl.parentElement!.getBoundingClientRect().height,\n                childRanges: ranges,\n            });\n        }\n\n        if (parasEl) {\n            let observer = new ResizeObserver(handleChildren);\n            observer.observe(parasEl);\n            observer.observe(parasEl.parentElement!);\n            return () => {\n                observer.disconnect();\n            };\n        }\n\n    }, [nodes, parasEl, wt.phase, numTimes]);\n\n    interface IRangeInfo {\n        start: number;\n        end: number;\n        width: number;\n    }\n\n    let { rangeInfo, currPos } = useMemo(() => {\n        let rangeInfo: IRangeInfo = { start: 0, end: 0, width: 1 };\n        let currPos = 0;\n\n        for (let range of guideLayout.childRanges) {\n            if (range.startT <= wt.time && range.endT >= wt.time) {\n                currPos = range.bottom;\n                break;\n            }\n        }\n\n        let startPos = 0;\n        let endPos = 0;\n\n        function findChild(nid: number) {\n            return guideLayout.childRanges.find(c => c.nodeId === nid);\n        }\n\n        if (nodes.length > 0) {\n            let child = findChild(Math.max(0, prevBreak))!;\n            if (child) {\n                startPos = child.top;\n            }\n        }\n        if (nextBreak >= 0) {\n            let child = findChild(nextBreak)!;\n            if (child) {\n                endPos = child.bottom;\n            }\n        }\n\n        rangeInfo = { start: startPos, end: endPos, width: guideLayout.width };\n        return { rangeInfo, currPos };\n    }, [wt.time, guideLayout, nodes, prevBreak, nextBreak]);\n\n    let group = phaseToGroup(wt);\n    let phase = group?.phases.find(p => p.id === wt.phase)!;\n\n    // fast-scroll to top whenever phase changes (and then we'll scroll down smoothly as below)\n    useEffect(() => {\n        if (parasEl) {\n            parasEl.parentElement!.scrollTop = 0;\n        }\n    }, [parasEl, wt.phase]);\n\n    let prevPhase = useRef(-1);\n    let upToDate = wt.commentary?.commentaryList.length ?? 0 > 0;\n    // scroll to current position whenever it changes (rangeInfo.start)\n    useEffect(() => {\n        if (parasEl) { // && parasEl.parentElement!.getBoundingClientRect().height === guideLayout.parentHeight) {\n            let delta = 512; // parasEl.getBoundingClientRect().top - parasEl.parentElement!.getBoundingClientRect().top - 45;\n\n            if (prevPhase.current !== wt.phase) {\n                // parasEl.parentElement!.scrollTop = rangeInfo.start + delta;\n                prevPhase.current = wt.phase;\n            } else if (wt.time > 0) {\n                parasEl.parentElement!.scrollTo({ top: rangeInfo.start + delta, behavior: 'smooth' });\n            }\n        }\n    }, [rangeInfo.start, rangeInfo.end, currPos, parasEl, upToDate, guideLayout.height, guideLayout.parentHeight, wt.phase, wt.time]);\n\n    return <>\n        <div className={s.chapterControls}>\n            <button className={clsx(s.btn, s.prevNextBtn)} onClick={() => handlePhaseDeltaClick(-1)}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n            </button>\n            <div className={s.chapterTitle}>Chapter: {phase.title}</div>\n            <button className={clsx(s.btn, s.prevNextBtn)} onClick={() => handlePhaseDeltaClick(1)}>\n                <FontAwesomeIcon icon={faChevronRight} />\n            </button>\n        </div>\n        <div className={s.walkthroughViewport}>\n            <div className={s.walkthroughText} tabIndex={0} onKeyDownCapture={handleKeyDown}>\n                <div className={s.tocBackground}>\n                    <TocDiagram activePhase={phase.id} />\n                </div>\n                <div className={s.divider} />\n                <div className={s.walkthroughParas} ref={setParasEl}>\n                    {walkthroughToParagraphs(wt, nodes)}\n                    <SectionHighlight key={nextBreak} top={rangeInfo.start} height={rangeInfo.end - rangeInfo.start} width={rangeInfo.width} />\n                    {!wt.running && <>\n                        <div className={s.dividerLine} style={{ top: currPos }} />\n                        <SpaceToContinueHint top={currPos} onClick={handleContinueClick} />\n                    </>}\n                </div>\n            </div>\n        </div>\n        <div className={s.controls}>\n            <button className={clsx(s.btn, \"flex-[2] bg-blue-300 border border-blue-600 hover:bg-blue-400\")} onClick={handleContinueClick}>\n                <div>Continue</div>\n            </button>\n            <button className={clsx(s.btn, \"ml-4 min-w-[100px] bg-white border border-blue-600 hover:bg-blue-200\")} onClick={handleAdvanceClick}>\n                <div>Skip</div>\n            </button>\n        </div>\n    </>;\n};\n\ninterface INode {\n    commentary?: ICommentary;\n    times?: ITimeInfo[];\n    isBreak: boolean;\n    start: number;\n    end: number;\n}\n\nexport function walkthroughToParagraphs(wt: IWalkthrough, nodes: INode[]) {\n\n    function genCommentary(c: ICommentary, t: number) {\n\n        let keyId = 0;\n        let paraKeyId = 0;\n        let res: React.ReactNode[] = [];\n        let paraItems: ReactNode[] = [];\n\n        function pushParagraph() {\n            if (paraItems.length) {\n                res.push(<p key={keyId++}>{paraItems}</p>);\n                paraItems = [];\n                paraKeyId = 0;\n            }\n        }\n\n        for (let i = 0; i < c.strings.length; i++) {\n\n            let strRaw = c.strings[i];\n            if (strRaw.trim()) {\n                let paras = strRaw.split('\\n\\n');\n                for (let j = 0; j < paras.length; j++) {\n                    let strPart = markupSimple(paras[j]);\n                    if (j > 0) {\n                        pushParagraph();\n                    }\n                    paraItems.push(<React.Fragment key={paraKeyId++}>{strPart}</React.Fragment>);\n                }\n            }\n\n            if (i < c.values.length) {\n                let val = c.values[i];\n                if (isValidElement(val)) {\n                    paraItems.push(<React.Fragment key={paraKeyId++}>{val}</React.Fragment>)\n                }\n                if (val.insertInline) {\n                    paraItems.push(<React.Fragment key={paraKeyId++}>{val.insertInline}</React.Fragment>);\n                }\n                if (val.insert) {\n                    pushParagraph();\n                    let fnVal = typeof val.insert === 'function' ? val.insert() : val.insert;\n                    let el = typeof fnVal === 'string' ? fnVal : React.createElement(fnVal as React.FC, { key: 'i' + i });\n                    res.push(el);\n                }\n                if (val.color) {\n                    let color = val.color.toHexColor();\n                    let content = markupSimple(val.str);\n                    if (val.dim) {\n                        paraItems.push(<DimensionText key={paraKeyId++} style={{ color }} dim={val.dim}>{content}</DimensionText>);\n                    } else if (val.blk) {\n                        paraItems.push(<BlockText key={paraKeyId++} style={{ color }} blk={val.blk}>{content}</BlockText>);\n                    } else {\n                        paraItems.push(<span key={paraKeyId++} style={{ color }}>{content}</span>);\n                    }\n                }\n            }\n        }\n        pushParagraph();\n\n        return res;\n    }\n\n    return <>\n        {nodes.map((n, i) => {\n            if (n.commentary) {\n                let c = n.commentary;\n                let displayFactor = c.duration === 0 ? (wt.time >= c.start ? 1 : 0) : clamp((wt.time - c.start) / c.duration, 0, 1);\n                let opacity = lerp(0.6, 1, displayFactor);\n                let blur = lerp(0, 0, displayFactor);\n                return <div key={i} style={{ opacity, filter: `blur(${blur}px)` }} data-nid={i}>\n                    {genCommentary(c, wt.time)}\n                </div>;\n            } else {\n                let times = n.times!;\n                let active = wt.time >= times[0].start;\n                let inRange = wt.time >= times[0].start && wt.time <= eventEndTime(times[times.length - 1]);\n                let opacity = active ? 1 : 0.6;\n                let blur = 0; // active ? 0 : 2;\n                let showLine = times.length > 1 || !times[0].isBreak;\n\n                function handlePlayPause() {\n                    if (wt.running) {\n                        wt.running = false;\n                        wt.markDirty();\n                    } else {\n                        wt.running = true;\n                        if (!inRange) {\n                            wt.time = times[0].start;\n                        }\n                    }\n                    wt.markDirty();\n                }\n\n                function handleArrowTo() {\n                    if (!inRange) {\n                        wt.time = times[0].start;\n                        wt.markDirty();\n                    }\n                }\n\n                return <div key={i} className={s.commentaryBreak} data-nid={i} style={{ opacity, filter: `blur(${blur}px)` }}>\n                    {showLine && <>\n                        <button className={clsx(s.jump, 'btn')} onClick={handleArrowTo}>\n                            <FontAwesomeIcon icon={faArrowDown} />\n                        </button>\n                        <button className={clsx(s.playPause, 'btn')} onClick={handlePlayPause}>\n                            <FontAwesomeIcon icon={wt.running && inRange ? faPause : faPlay} />\n                        </button>\n                        <PhaseTimelineHoriz times={n.times!} />\n                    </>}\n                </div>;\n            }\n        })}\n    </>;\n}\n\nfunction markupSimple(inputStr: string): React.ReactNode {\n    let italicLocs: number[] = [];\n    let boldLocs: number[] = [];\n\n    let prevC = '';\n    let idx = 0;\n    for (let c of inputStr) {\n        if (c === '_' && ((italicLocs.length % 2) === 1 || !prevC.match(/[a-zA-Z0-9]/))) {\n            italicLocs.push(idx);\n        // } else if (c === '*' && prevC !== '*') {\n        //     boldLocs.push(idx);\n        }\n        prevC = c;\n        idx++;\n    }\n\n    let nodesFlat: INode[] = [];\n    function addNodes(t: INode['t'], locs: number[]) {\n        for (let i = 0; i < Math.ceil(locs.length / 2); i++) {\n            nodesFlat.push({ t: t, start: locs[i * 2], end: (locs[i * 2 + 1] ?? inputStr.length) + 1 });\n        }\n    }\n\n    addNodes('i', italicLocs);\n    addNodes('b', boldLocs);\n\n    interface INode {\n        t: '' | 'b' | 'i';\n        start: number; // inclusive\n        end: number; // exclusive\n        children?: INode[];\n    }\n\n    function insertIntoTree(treeNode: INode, node: INode) {\n        // we know node is fully contained within treeNode. But what about treeNode's children?\n\n        // the children are distinct but form a partial cover of the treeNode\n        let prevEnd = treeNode.start;\n        let currStart = node.start;\n        let directNewChildren: INode[] = [];\n\n        for (let c of treeNode.children ?? []) {\n            if (currStart < c.start) {\n                directNewChildren.push({ ...node, start: currStart, end: c.start });\n                prevEnd = currStart;\n                currStart = c.start;\n            }\n            if (currStart < c.end && node.end > c.start) {\n                insertIntoTree(c, { ...node, start: Math.max(currStart, c.start), end: Math.min(node.end, c.end) });\n                currStart = Math.min(node.end, c.end);\n                prevEnd = node.end;\n            }\n        }\n        if (currStart < node.end) {\n            directNewChildren.push({ ...node, start: currStart, end: node.end });\n        }\n\n        if (directNewChildren.length > 0) {\n            treeNode.children = [...treeNode.children ?? [], ...directNewChildren];\n            treeNode.children.sort((a, b) => a.start - b.start);\n        }\n    }\n\n    let treeBase: INode = { t: '', start: 0, end: inputStr.length, children: [] };\n\n    for (let node of nodesFlat) {\n        insertIntoTree(treeBase, node);\n    }\n\n    function buildReactDom(node: INode, i: number) {\n        let pad = node.t === '' ? 0 : 1;\n        let res: ReactNode[] = [];\n        let children = node.children ?? []\n        let segStart = node.start + pad;\n        for (let i = 0; i < children.length + 1; i++) {\n            let segEnd = i < children.length ? children[i].start : node.end - pad;\n\n            if (segEnd > segStart) {\n                res.push(inputStr.slice(segStart, segEnd));\n            }\n\n            if (i < children.length) {\n                res.push(buildReactDom(children[i], i));\n                segStart = children[i].end;\n            }\n        }\n\n        if (node.t === 'b') {\n            return <b key={i}>{res}</b>;\n        } else if (node.t === 'i') {\n            return <i key={i}>{res}</i>;\n        } else {\n            return res;\n        }\n    }\n\n    return buildReactDom(treeBase, 0);\n}\n\nconst SpaceToContinueHint: React.FC<{\n    top: number;\n    onClick: React.MouseEventHandler,\n}> = ({ top, onClick }) => {\n\n    return <div className={\"absolute flex justify-center pointer-events-none top-0 left-0 right-0\"} style={{ top, transform: `translateY(20px)` }}>\n        <div className={\"flex-shrink py-2 px-4 bg-blue-200 shadow-md rounded-3xl pointer-events-auto text-black cursor-pointer\"} onClick={onClick}>\n             Press <span className={s.key}>Space</span> to continue\n        </div>\n    </div>;\n}\n\nconst SectionHighlight: React.FC<{\n    top: number;\n    height: number;\n    width: number;\n}> = ({ top, height, width }) => {\n    let [tick, setTick] = useState(0);\n\n    useRequestAnimationFrame(tick < 2, (dt) => {\n        setTick(tick + dt);\n    });\n\n    let rectPad = 12;\n    let svgW = width + rectPad * 2;\n    let svgH = height + rectPad * 2;\n\n    let pad = 3;\n    let x0 = pad;\n    let y0 = pad;\n    let x1 = svgW - pad;\n    let y1 = svgH - pad;\n\n    let strokeWidth = lerpSmoothstep(3, 0, tick);\n\n    if (height <= 0) {\n        return null;\n    }\n\n    return <div className={s.sectionHighlightWrap} style={{ top: top - rectPad, height: svgH, width: svgW, left: -rectPad }}>\n        <svg viewBox={`0 0 ${svgW} ${svgH}`} className={s.sectionHighlight}>\n            <rect x={x0} y={y0} width={x1 - x0} height={y1 - y0} fill=\"none\" stroke=\"blue\" strokeWidth={strokeWidth} opacity={strokeWidth} rx={5} ry={5} />\n            {/* <path d={`M ${x0} ${y0} L ${x1} ${y0} L ${x1} ${y1} L ${x0} ${y1} Z`} fill=\"none\" stroke=\"blue\" strokeWidth=\"3\" /> */}\n        </svg>\n    </div>;\n}\n","import { IBlockLayerLink, IGptModelLink, ILayerNormLayerLink, IModelShape } from \"./GptModel\";\nimport { isNil } from \"@/src/utils/data\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Dim, Vec3 } from \"@/src/utils/vector\";\nimport { IBufferTex } from \"@/src/utils/renderPhases\";\nimport { dimProps } from \"./Annotations\";\nimport { DimStyle } from \"./walkthrough/WalkthroughTools\";\n\nexport interface IBlkDef {\n    idx: number; // index in the layout.cubes array\n    t: 'w' | 'i' | 'a', // weights; intermediate value; aggregate (just LN & softmax)\n    x: number;\n    y: number;\n    z: number;\n    dx: number; // units: model-space\n    dy: number;\n    dz: number;\n    cx: number; // units: number of cells\n    cy: number;\n    cz: number;\n    access?: IBlkAccess;\n    deps?: IBlkDeps;\n    dimX: DimStyle;\n    dimY: DimStyle;\n    name: string;\n    small: boolean; // small enough to not be worth rendering in large models\n    // implicit dimZ = DimStyle.Batch for t === 'i'\n\n    // fields that are post-added by the walk-through for various rendering configurations\n\n    localMtx?: Mat4f; // for creating blocks that are sub-parts of a block\n    // what to do for different axes?\n    rangeOffsetsX?: [number, number][]; // if this block has been split, map from [[s0, xOff], [s1, xOff], ...] to the original block\n    rangeOffsetsY?: [number, number][];\n    rangeOffsetsZ?: [number, number][];\n    highlight: number; // 0 - 1 (0 = no highlight, 1 = full highlight)\n    opacity: number; // 0 - 1 (0 = transparent, 1 = opaque)\n    special: BlkSpecial;\n    transpose?: boolean; // transpose the process direction\n    subs?: IBlkDef[]; // substitutes for this block (i.e. render these instead)\n    offX?: number; // offset from the original block\n    offY?: number;\n    offZ?: number;\n    sizeX?: number; // size of the sub block\n    sizeY?: number;\n    sizeZ?: number;\n}\n\nexport enum BlkSpecial {\n    None,\n    Attention,\n}\n\n// define how a cell is computed from other blocks\n// matrix-mulplication: cell(x, y, b) = sum_i(A[i, y] * B[x, i, b]) + C[0, y]\nexport interface IBlkDeps {\n    dot?: [IBlkCellDep, IBlkCellDep];\n    dotLen?: number;\n    add?: IBlkCellDep[];\n    special: BlKDepSpecial;\n    lowerTri?: boolean;\n}\n\nexport interface IBlkCellDep {\n    src: IBlkDef;\n    srcIdxMtx: Mat4f; // inputs: [x, y, b, [i]], outputs: [x, y, b]\n}\n\ninterface IBlkDepArgs {\n    dot?: [[IBlkDef, string], [IBlkDef, string]];\n    dotLen?: number;\n    add?: [IBlkDef, string][];\n    lowerTri?: boolean; // only use the lower triangle of the matrix (causal attention matrices)\n    special?: BlKDepSpecial;\n}\n\nexport enum BlKDepSpecial {\n    None,\n    Softmax,\n    Gelu,\n    LayerNorm,\n    InputEmbed,\n    LayerNormMu,\n    LayerNormSigma,\n    SoftmaxAggMax,\n    SoftmaxAggExp,\n    Attention,\n}\n\nlet depIdxVars = '0xybi';\nfunction parseDepIdxStr(str: string): Mat4f {\n    let mtx = Mat4f.zeros();\n    for (let destI = 0; destI < str.length; destI++) {\n        let srcIdx = depIdxVars.indexOf(str[destI]);\n        if (srcIdx > 0) {\n            mtx.s(destI, srcIdx - 1, 1.0);\n        }\n    }\n    return mtx;\n}\n\nfunction depArgsToDeps(args: IBlkDepArgs): IBlkDeps {\n    let makeBlkDeps = (src: IBlkDef, depStr: string) => ({ src, srcIdxMtx: parseDepIdxStr(depStr) });\n    return {\n        dot: args.dot && args.dot.map(([src, depStr]) => makeBlkDeps(src, depStr)) as [IBlkCellDep, IBlkCellDep],\n        dotLen: args.dotLen,\n        add: args.add && args.add.map(([src, depStr]) => makeBlkDeps(src, depStr)),\n        special: args.special ?? BlKDepSpecial.None,\n        lowerTri: args.lowerTri,\n    };\n}\n\nexport function getBlkDimensions(blk: IBlkDef) {\n    let { x, y, z, dx, dy, dz } = blk;\n    return {\n        tl: new Vec3(x, y, z),\n        br: new Vec3(x + dx, y + dy, z + dz),\n    };\n}\n\nexport function setBlkPosition(blk: IBlkDef, pos: Vec3) {\n    blk.x = pos.x;\n    blk.y = pos.y;\n    blk.z = pos.z;\n}\n\nexport interface IBlkAccess {\n    src: IBufferTex;\n    channel: 'r' | 'g' | 'b';\n    scale: number;\n    mat: Mat4f; // actually using the first two columns for a 3x2 matrix: mapping (x, y, z) integer cell coord to (x, y) src tex coord\n    disable?: boolean;\n}\n\ninterface IBlkAccessDefArgs {\n    src?: IBufferTex;\n    channel?: 'r' | 'g' | 'b';\n    scale?: number;\n    x: number[];\n    y: number[];\n}\n\ninterface IBlkDefArgs {\n    t: 'w' | 'i' | 'a', // weights; intermediate value\n    xL?: number; // pos of Left edge\n    xR?: number; // Right\n    xM?: number; // Middle\n    zF?: number; // Front\n    zB?: number; // Back\n    zM?: number; // Middle\n    name?: string;\n    y: number;\n    cx: number; // units: number of cells\n    cz: number;\n    cy: number;\n    dimX: DimStyle;\n    dimY: DimStyle;\n    special?: BlkSpecial;\n    access?: IBlkAccessDefArgs;\n    deps?: IBlkDepArgs;\n    small?: boolean;\n    hidden?: boolean;\n    transpose?: boolean;\n}\n\nexport interface IBlkLabel {\n    visible: number;\n    cubes: IBlkDef[];\n}\n\nexport interface IModelLayout {\n    cell: number;\n    height: number;\n    margin: number;\n    cubes: IBlkDef[];\n}\n\nexport function cellPosition(layout: IModelLayout, blk: IBlkDef, dim: Dim, index: number) {\n    let { x, rangeOffsets } = dimProps(blk, dim);\n    let base = x + layout.cell * index;\n    if (!rangeOffsets) {\n        return base;\n    }\n    for (let [s, xOff] of rangeOffsets!) {\n        if (index < s) {\n            return base + xOff;\n        }\n    }\n    return base;\n}\n\nexport type IGptModelLayout = ReturnType<typeof genGptModelLayout>;\nexport type IGptLayerNormLayout = IGptModelLayout['ln_f'];\n\nexport function genGptModelLayout(shape: IModelShape, gptGpuModel: IGptModelLink | null = null, offset: Vec3 = new Vec3(0, 0, 0)) {\n    let { B, T, C, vocabSize, nHeads, A, nBlocks } = shape;\n\n    // work our way downwards from the top\n    // x is to the left and right\n    // y is positive going down, and the stack advances down from the top (at (0, 0, 0))\n    // z is coming out of the page\n\n    // a single batch of the residual pathway goes down the x-z plane\n    // weights & off-residual pathways are left & right of the residual pathway (i.e. along x)\n    // those blocks might have y-depth but that's OK: still have space to add batches\n    // x = 0 is just to the left of time-cell t=0\n\n    let isLargeModel = shape.nBlocks > 12;\n\n    let y = 0;\n\n    let cell = 1.5;\n    let margin = Math.max(12, C / 10);\n\n    function mk(args: IBlkDefArgs): IBlkDef {\n        let xDef = [args.xL, args.xR, args.xM].map(a => +!isNil(a)).reduce((a, b) => a + b, 0);\n        let yDef = [args.zF, args.zB, args.zM].map(a => +!isNil(a)).reduce((a, b) => a + b, 0);\n        if (xDef !== 1 || yDef !== 1) {\n            throw new Error(`Must supply exactly 1 x arg & 1 y arg: ${JSON.stringify(args)}`);\n        }\n        let dx = args.cx * cell;\n        let dy = args.cz * cell;\n        let x = !isNil(args.xL) ? args.xL : !isNil(args.xR) ? args.xR - dx : args.xM! - dx / 2;\n        let z = !isNil(args.zB) ? args.zB : !isNil(args.zF) ? args.zF - dy : args.zM! - dy / 2;\n\n        function ensure4(a: number[]) {\n            return a.length === 4 ? a : [...a, 0];\n        }\n\n        return {\n            dx: args.cx * cell,\n            dy: args.cy * cell,\n            dz: args.cz * cell,\n            t: args.t,\n            x: x,\n            y: args.y,\n            z: z,\n            cx: args.cx,\n            cy: args.cy,\n            cz: args.cz,\n            dimX: args.dimX,\n            dimY: args.dimY,\n            name: args.name ?? \"<unknown>\",\n            access: args.access?.src ? {\n                channel: args.access.channel ?? 'r',\n                src: args.access.src,\n                scale: args.access.scale ?? 1.0,\n                mat: Mat4f.fromColMajor([...ensure4(args.access.x), ...ensure4(args.access.y), 0, 0, 0, 0, 0, 0, 0, 0]),\n            } : undefined,\n            deps: args.deps ? depArgsToDeps(args.deps) : undefined,\n            opacity: args.hidden ? 0.0 : 1.0,\n            highlight: 0.0,\n            small: args.small ?? false,\n            special: args.special ?? BlkSpecial.None,\n            transpose: args.transpose,\n            idx: -1,\n        };\n    }\n\n    function mkLabel(init: number, cubes?: IBlkDef[]): IBlkLabel {\n        return { visible: 0, cubes: cubes ?? [] };\n    }\n\n    let cubes: IBlkDef[] = [];\n\n    let idxObj = mk({\n        t: 'i', cx: T, cz: B, cy: 1, y: y,\n        xM: 0, zM: 0,\n        access: { src: gptGpuModel?.inputTokens, x: [0, 1, 0], y: [1, 0, T], scale: 1 / vocabSize},\n        dimX: DimStyle.T, dimY: DimStyle.None,\n        name: 'Tokens',\n    });\n\n    let leftX = -T * cell / 2 - margin;\n    let rightX = T * cell / 2 + margin;\n\n    y += cell + margin;\n\n    let tokEmbedObj = mk({\n        t: 'w',\n        xR: leftX, zM: 0, y: y,\n        cx: vocabSize, cz: 1, cy: C, // src has shape [vocabSize, C]\n        access: { src: gptGpuModel?.vocabEmbed.weight, x: [0, 1, 0], y: [1, 0, 0], scale: 10 },\n        dimX: DimStyle.n_vocab, dimY: DimStyle.C,\n        name: 'Token Embed',\n    });\n\n    let posEmbedObj = mk({\n        t: 'w',\n        xL: rightX, zM: 0, y: y,\n        cx: T, cz: 1, cy: C,\n        access: { src: gptGpuModel?.posEmbed.weight, x: [0, 1, 0], y: [1, 0, 0], scale: 10 },\n        dimX: DimStyle.T, dimY: DimStyle.C,\n        name: 'Position Embed',\n    });\n\n    let residual0 = mk({\n        t: 'i',\n        xM: 0, zM: 0, y: y,\n        cx: T, cz: B, cy: C,\n        access: { src: gptGpuModel?.add.output, x: [0, 1, 0], y: [1, 0, T], scale: 10 },\n        deps: { add: [[tokEmbedObj, 'iy'], [posEmbedObj, 'xy'], [idxObj, 'x0']], special: BlKDepSpecial.InputEmbed }, // the i comes from the idxObj lookup\n        dimX: DimStyle.T, dimY: DimStyle.C,\n        name: 'Input Embed',\n    });\n    cubes.push(idxObj, tokEmbedObj, posEmbedObj, residual0);\n\n    let embedLabel = mkLabel(y, [idxObj, tokEmbedObj, posEmbedObj, residual0]);\n\n    y += C * cell + margin;\n\n    function createLn(x: number, src: IBlkDef, target?: ILayerNormLayerLink) {\n        let lnLeftX = leftX + x;\n        let resLeftX = lnLeftX - T * cell - margin;\n\n        let lnAgg1 = mk({\n            t: 'a', cx: T, cz: B, cy: 1, y: y,\n            xR: lnLeftX, zM: 0,\n            access: { src: target?.normAgg, x: [0, 1, 0], y: [1, 0, T], scale: 10.0, channel: 'r' },\n            deps: { add: [[src, 'xi']], special: BlKDepSpecial.LayerNormMu },\n            dimX: DimStyle.T, dimY: DimStyle.None, small: true,\n            name: 'LN Agg: μ, σ',\n        });\n        let lnAgg2 = mk({\n            t: 'a', cx: T, cz: B, cy: 1, y: y + cell,\n            xR: lnLeftX, zM: 0,\n            access: { src: target?.normAgg, x: [0, 1, 0], y: [1, 0, T], scale: 10.0, channel: 'g' },\n            deps: { add: [[src, 'xi']], special: BlKDepSpecial.LayerNormSigma },\n            dimX: DimStyle.T, dimY: DimStyle.None, small: true,\n            name: '',\n        });\n\n        y += 2 * cell + margin;\n\n        let lnSigma = mk({\n            t: 'w', cx: 1, cz: 1, cy: C, y: y,\n            xR: resLeftX, zM: 0,\n            access: { src: target?.normWeight, x: [1, 0, 0], y: [0, 1, 0], scale: 0.5 }, // mostly around 1.0\n            dimX: DimStyle.None, dimY: DimStyle.C,\n            name: 'γ', small: true,\n        });\n        let lnMu = mk({\n            t: 'w', cx: 1, cz: 1, cy: C, y: y,\n            xR: resLeftX - cell * 1 - margin, zM: 0,\n            access: { src: target?.normBias, x: [1, 0, 0], y: [0, 1, 0] },\n            dimX: DimStyle.None, dimY: DimStyle.C,\n            name: 'β', small: true,\n        });\n        let lnResid = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: y,\n            xR: lnLeftX, zM: 0,\n            access: { src: target?.output, x: [0, 1, 0], y: [1, 0, T], scale: 1.0 },\n            deps: { add: [[src, 'xy'], [lnAgg1, 'xi'], [lnAgg2, 'xi'], [lnSigma, '0y'], [lnMu, '0y']], special: BlKDepSpecial.LayerNorm }, // lnSigma is really mul rather than add\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            name: 'Layer Norm',\n        });\n        let lnCubes = [lnAgg1, lnAgg2, lnSigma, lnMu, lnResid];\n        return { lnAgg1, lnAgg2, lnResid, lnSigma, lnMu, cubes: lnCubes };\n    }\n\n    let lnLeftX = leftX - (T + 2) * cell - 3 * margin;\n\n    function createLayer(src: IBlkDef, target: IBlockLayerLink | undefined) {\n        let ln1 = createLn(0, src, target?.ln_1);\n\n        let interHeadMargin = 3 * margin + (C * cell) / 16;\n        let qkvMargin = 1 * margin + (C * cell) / 16;\n\n        let headWidth = 3 * B * cell + qkvMargin * 2 + (isLargeModel ? 0 : interHeadMargin);\n\n        let attn1Y = y + A * cell + margin + (isLargeModel ? 2 * A * cell : 0);\n        let attn2Y = attn1Y; // + T * cell + margin;\n        let vOutY = attn2Y + T * cell + margin;\n\n        let attnLeftX = lnLeftX; // leftX - ((T + 2) * cell + 3 * margin);\n        let qkvValLeftX = attnLeftX - T * cell - margin;\n        let qkvBiasLeftX = qkvValLeftX - C * cell - margin;\n        let stepPerHeadY = 0; // A * cell;\n\n        let attnTarget = target?.attn;\n\n        let heads = [];\n        for (let i = 0; i < nHeads; i++) {\n            let headZMid = headWidth * i - (nHeads - 1) * headWidth / 2;\n            let qMid = headZMid + B * cell + qkvMargin;\n            let kMid = headZMid;\n            let vMid = headZMid - B * cell - qkvMargin;\n\n            // x: C, y: A\n            let qWeightBlock = mk({\n                t: 'w', cx: C, cz: 1, cy: A, y: y,\n                xR: qkvValLeftX, zM: qMid,\n                access: { src: attnTarget?.qkvWeight, x: [1, 0, 0], y: [0, 1, 0, 0*C + A*i], scale: C * 0.25 },\n                dimX: DimStyle.C, dimY: DimStyle.A,\n                name: 'Q Weights',\n            });\n\n            let kWeightBlock = mk({\n                t: 'w', cx: C, cz: 1, cy: A, y: y,\n                xR: qkvValLeftX, zM: kMid,\n                access: { src: attnTarget?.qkvWeight, x: [1, 0, 0], y: [0, 1, 0, 1*C + A*i], scale: C * 0.25 },\n                dimX: DimStyle.C, dimY: DimStyle.A,\n                name: 'K Weights',\n            });\n\n            let vWeightBlock = mk({\n                t: 'w', cx: C, cz: 1, cy: A, y: y,\n                xR: qkvValLeftX, zM: vMid,\n                access: { src: attnTarget?.qkvWeight, x: [1, 0, 0], y: [0, 1, 0, 2*C + A*i], scale: C * 0.25 },\n                dimX: DimStyle.C, dimY: DimStyle.A,\n                name: 'V Weights',\n            });\n\n            let qkvWeightBlock = mk({\n                t: 'w', cx: C, cz: 1, cy: A * 3, y: y,\n                xR: qkvValLeftX, zM: kMid,\n                dimX: DimStyle.C, dimY: DimStyle.C,\n                name: 'QKV Weights',\n            });\n\n            let qBiasBlock = mk({\n                t: 'w', cx: 1, cz: 1, cy: A, y: y,\n                xR: qkvBiasLeftX, zM: qMid,\n                access: { src: attnTarget?.qkvBias, x: [1, 0, 0], y: [0, 1, 0, 0*C + A*i] },\n                dimX: DimStyle.None, dimY: DimStyle.A, small: true,\n                name: 'Q Bias',\n            });\n\n            let kBiasBlock = mk({\n                t: 'w', cx: 1, cz: 1, cy: A, y: y,\n                xR: qkvBiasLeftX, zM: kMid,\n                access: { src: attnTarget?.qkvBias, x: [1, 0, 0], y: [0, 1, 0, 1*C + A*i] },\n                dimX: DimStyle.None, dimY: DimStyle.A, small: true,\n                name: 'K Bias',\n            });\n\n            let vBiasBlock = mk({\n                t: 'w', cx: 1, cz: 1, cy: A, y: y,\n                xR: qkvBiasLeftX, zM: vMid,\n                access: { src: attnTarget?.qkvBias, x: [1, 0, 0], y: [0, 1, 0, 2*C + A*i] },\n                dimX: DimStyle.None, dimY: DimStyle.A, small: true,\n                name: 'V Bias',\n            });\n\n            let qBlock = mk({\n                t: 'i', cx: T, cz: B, cy: A, y: y,\n                xR: attnLeftX, zM: qMid,\n                access: { src: attnTarget?.qkvOutput, x: [0, 1, 0, 0*C + A*i], y: [1, 0, T], scale: 1.0 },\n                deps: { dot: [[qWeightBlock, 'iy'], [ln1.lnResid, 'xi']], add: [[qBiasBlock, '0y']], dotLen: C },\n                dimX: DimStyle.T, dimY: DimStyle.A,\n                name: 'Q vectors',\n            });\n\n            let kBlock = mk({\n                t: 'i', cx: T, cz: B, cy: A, y: y,\n                xR: attnLeftX, zM: kMid,\n                access: { src: attnTarget?.qkvOutput, x: [0, 1, 0, 1*C + A*i], y: [1, 0, T], scale: 1.0 },\n                deps: { dot: [[kWeightBlock, 'iy'], [ln1.lnResid, 'xi']], add: [[kBiasBlock, '0y']], dotLen: C },\n                dimX: DimStyle.T, dimY: DimStyle.A,\n                name: 'K vectors',\n            });\n\n            let vBlock = mk({\n                t: 'i', cx: T, cz: B, cy: A, y: y,\n                xR: attnLeftX, zM: vMid,\n                access: { src: attnTarget?.qkvOutput, x: [0, 1, 0, 2*C + A*i], y: [1, 0, T], scale: 1.0 },\n                deps: { dot: [[vWeightBlock, 'iy'], [ln1.lnResid, 'xi']], add: [[vBiasBlock, '0y']], dotLen: C },\n                dimX: DimStyle.T, dimY: DimStyle.A,\n                name: 'V vectors',\n            });\n\n            let qkvBlock = mk({\n                t: 'i', cx: T, cz: B, cy: A * 3, y: y,\n                xR: attnLeftX, zM: kMid,\n                dimX: DimStyle.T, dimY: DimStyle.C,\n                name: 'QKV vectors',\n            });\n\n            let attn2LeftX = attnLeftX - (T + 2) * cell - 2 * margin;\n\n            let attnMtx = mk({\n                t: 'i', cx: T, cz: B, cy: T, y: attn1Y,\n                xR: attnLeftX, zM: headZMid,\n                access: { src: attnTarget?.attnMatrix, x: [1, 0, 0], y: [0, 1, nHeads * T, T * i], scale: 1.0 },\n                deps: { dot: [[qBlock, 'yi'], [kBlock, 'xi']], lowerTri: true, dotLen: A, special: BlKDepSpecial.Attention },\n                dimX: DimStyle.T, dimY: DimStyle.T,\n                special: BlkSpecial.Attention,\n                transpose: true,\n                name: 'Attention Matrix',\n            });\n\n            let attnMtxAgg1 = mk({\n                t: 'a', cx: 1, cz: B, cy: T, y: attn1Y,\n                xR: attnLeftX - T * cell - margin - cell, zM: headZMid,\n                access: { src: attnTarget?.attnMatrixSoftmax, x: [0, 0, 0, 1], y: [0, 1, nHeads * T, T * i], channel: 'r' },\n                deps: { add: [[attnMtx, 'iy']], special: BlKDepSpecial.SoftmaxAggExp },\n                dimX: DimStyle.None, dimY: DimStyle.T, small: true,\n                name: '',\n            });\n\n            let attnMtxAgg2 = mk({\n                t: 'a', cx: 1, cz: B, cy: T, y: attn1Y,\n                xR: attnLeftX - T * cell - margin, zM: headZMid,\n                access: { src: attnTarget?.attnMatrixSoftmax, x: [0, 0, 0, 1], y: [0, 1, nHeads * T, T * i], channel: 'g' },\n                deps: { add: [[attnMtx, 'iy']], special: BlKDepSpecial.SoftmaxAggMax },\n                dimX: DimStyle.None, dimY: DimStyle.T, small: true,\n                name: '',\n            });\n\n            let attnMtxSm = mk({\n                t: 'i', cx: T, cz: B, cy: T, y: attn1Y,\n                xR: attn2LeftX, zM: headZMid,\n                access: { src: attnTarget?.attnMatrixSoftmax, x: [1, 0, 0], y: [0, 1, nHeads * T, T * i], scale: 2.0 },\n                deps: { add: [[attnMtx, 'xy'], [attnMtxAgg1, 'iy'], [attnMtxAgg2, 'iy']], lowerTri: true, special: BlKDepSpecial.Softmax },\n                dimX: DimStyle.T, dimY: DimStyle.T,\n                special: BlkSpecial.Attention,\n                transpose: true,\n                name: 'Attn Matrix Softmax',\n            });\n\n            let vOutBlock = mk({\n                t: 'i', cx: T, cz: B, cy: A, y: vOutY + i * stepPerHeadY,\n                xR: attnLeftX, zM: headZMid,\n                access: { src: attnTarget?.scaledVectors, x: [0, 1, 0, i * A], y: [1, 0, T] },\n                deps: { dot: [[vBlock, 'iy'], [attnMtxSm, 'ix']], dotLen: A },\n                dimX: DimStyle.T, dimY: DimStyle.A,\n                name: 'V Output',\n            });\n\n            let headCubes = [...isLargeModel ? [qkvWeightBlock, qkvBlock] : [qWeightBlock, kWeightBlock, vWeightBlock, qBlock, kBlock, vBlock],\n                qBiasBlock, kBiasBlock, vBiasBlock,\n                attnMtx, attnMtxAgg1, attnMtxAgg2, attnMtxSm, vOutBlock];\n\n            let headLabel = mkLabel(1.0, headCubes);\n            let qLabel = mkLabel(1.0, [qWeightBlock, qBiasBlock, qBlock]);\n            let kLabel = mkLabel(1.0, [kWeightBlock, kBiasBlock, kBlock]);\n            let vLabel = mkLabel(1.0, [vWeightBlock, vBiasBlock, vBlock]);\n            let biasLabel = mkLabel(1.0, [qBiasBlock, kBiasBlock, vBiasBlock]);\n            let mtxLabel = mkLabel(1.0, [attnMtx, attnMtxAgg1, attnMtxAgg2, attnMtxSm]);\n            let vectorLabel = mkLabel(1.0, [vOutBlock]);\n\n            let head = {\n                qWeightBlock, kWeightBlock, vWeightBlock,\n                qBiasBlock, kBiasBlock, vBiasBlock,\n                qBlock, kBlock, vBlock,\n                attnMtx, attnMtxAgg1, attnMtxAgg2, attnMtxSm, vOutBlock,\n                qLabel, kLabel, vLabel, biasLabel, mtxLabel, vectorLabel, headLabel,\n                cubes: headCubes,\n                labels: [qLabel, kLabel, vLabel, biasLabel, mtxLabel, vectorLabel, headLabel],\n            };\n            heads.push(head);\n        }\n\n        let vOutCombined = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: vOutY,\n            xR: attnLeftX, zF: - headWidth * nHeads / 2,\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            hidden: true,\n            name: 'V Output Combined',\n        });\n\n        let vFinalZ = Math.max(\n            vOutY + stepPerHeadY * (nHeads - 1) + A * cell + 2 * margin,\n            y + C * cell + margin, // in case the layer norm block is shorter\n        );\n\n        let projWeight = mk({\n            t: 'w', cx: C, cz: 1, cy: C, y: vFinalZ,\n            xR: qkvValLeftX, zM: 0,\n            access: { src: attnTarget?.proj.weight, x: [1, 0, 0], y: [0, 1, 0], scale: C * 0.5 },\n            dimX: DimStyle.C, dimY: DimStyle.C,\n            name: 'Projection Weights',\n        });\n\n        let projBias = mk({\n            t: 'w', cx: 1, cz: 1, cy: C, y: vFinalZ,\n            xR: qkvValLeftX - C * cell - margin, zM: 0,\n            access: { src: attnTarget?.proj.bias!, x: [0, 0, 0], y: [0, 1, 0], scale: C * 0.5 },\n            dimX: DimStyle.None, dimY: DimStyle.C, small: true,\n            name: 'Projection Bias',\n        });\n\n        let attnOut = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: vFinalZ,\n            xR: attnLeftX, zM: 0,\n            access: { src: attnTarget?.proj.output, x: [0, 1, 0], y: [1, 0, T] },\n            // deps: { dot: [[projWeight, 'iy'], [vOutCombined, 'xi']], dotLen: C },\n            // vOutCombined isn't displayed atm, so add from the heads instead\n            deps: {\n                dot: [[projWeight, 'iy'], [vOutCombined, 'xi']], dotLen: C,\n                add: [[projBias, '0y'], ...heads.map(h => [h.vOutBlock, 'xi'] as [IBlkDef, string])]\n            },\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            name: 'Attention Output',\n        });\n\n        let attnResidual = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: vFinalZ,\n            xM: 0, zM: 0,\n            access: { src: attnTarget?.output, x: [0, 1, 0], y: [1, 0, T] },\n            deps: { add: [[attnOut, 'xy'], [src, 'xy']] },\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            name: 'Attention Residual',\n        });\n\n        y = vFinalZ + C * cell + margin;\n\n        let ln2 = createLn(0, attnResidual, target?.ln_2);\n\n        let mlpFcWeight = mk({\n            t: 'w', cx: C * 4, cz: 1, cy: C, y: y,\n            xR: attnLeftX, zM: 0,\n            access: { src: target?.mlp.fcLayer.weight, x: [0, 1, 0], y: [1, 0, 0], scale: C * 0.5 },\n            dimX: DimStyle.C4, dimY: DimStyle.C,\n            name: 'MLP Weights',\n        });\n\n        let mlpFcBias = mk({\n            t: 'w', cx: C * 4, cz: 1, cy: 1, y: y - 1 * cell - margin,\n            xR: attnLeftX, zM: 0,\n            access: { src: target?.mlp.fcLayer.bias!, x: [0, 1, 0], y: [1, 0, 0], scale: C * 0.5 },\n            dimX: DimStyle.C4, dimY: DimStyle.None,\n            name: 'MLP Bias', small: true,\n        });\n\n        y += C * cell + margin;\n\n        let mlpFc = mk({\n            t: 'i', cx: C * 4, cz: B, cy: T, y: y,\n            xR: attnLeftX, zM: 0,\n            access: { src: target?.mlp.fcLayer.output, x: [1, 0, 0], y: [0, 1, T], scale: 1.0 },\n            deps: { dot: [[mlpFcWeight, 'xi'], [ln2.lnResid, 'yi']], dotLen: C, add: [[mlpFcBias, 'x']] },\n            dimX: DimStyle.C4, dimY: DimStyle.T,\n            name: 'MLP',\n            transpose: true,\n        });\n\n        y += T * cell + margin;\n\n        let mlpAct = mk({\n            t: 'i', cx: C * 4, cz: B, cy: T, y: y,\n            xR: attnLeftX, zM: 0,\n            access: { src: target?.mlp.mlpGelu, x: [1, 0, 0], y: [0, 1, T], scale: 1.0 },\n            deps: { add: [[mlpFc, 'xy']], special: BlKDepSpecial.Gelu },\n            dimX: DimStyle.C4, dimY: DimStyle.T,\n            name: 'MLP Activation',\n            transpose: true,\n        });\n\n        y += T * cell + margin;\n\n        let mlpProjWeight = mk({\n            t: 'w', cx: C * 4, cz: 1, cy: C, y: y,\n            xR: attnLeftX, zM: 0,\n            access: { src: target?.mlp.projLayer.weight, x: [1, 0, 0], y: [0, 1, 0], scale: C * 0.5 },\n            dimX: DimStyle.C4, dimY: DimStyle.C,\n            name: 'MLP Projection Weights',\n        });\n\n        let mlpProjBias = mk({\n            t: 'w', cx: 1, cz: 1, cy: C, y: y,\n            xR: attnLeftX - C * 4 * cell - margin, zM: 0,\n            access: { src: target?.mlp.projLayer.bias!, x: [1, 0, 0], y: [0, 1, 0], scale: C * 0.5 },\n            dimX: DimStyle.None, dimY: DimStyle.C, small: true,\n            name: 'MLP Projection Bias',\n        });\n\n        let mlpResult = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: y,\n            xL: attnLeftX + margin, zM: 0,\n            access: { src: target?.mlp.projLayer.output, x: [0, 1, 0], y: [1, 0, T] },\n            deps: { dot: [[mlpProjWeight, 'iy'], [mlpAct, 'ix']], dotLen: C, add: [[mlpProjBias, '0y']] },\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            name: 'MLP Result',\n        });\n\n        let mlpResidual = mk({\n            t: 'i', cx: T, cz: B, cy: C, y: y,\n            xM: 0, zM: 0,\n            access: { src: target?.mlp.output, x: [0, 1, 0], y: [1, 0, T] },\n            deps: { add: [[mlpResult, 'xy'], [attnResidual, 'xy']] },\n            dimX: DimStyle.T, dimY: DimStyle.C,\n            name: 'MLP Residual',\n        });\n\n        y += C * cell - margin;\n\n        let blockCubes = [\n            ...ln1.cubes,\n            ...heads.flatMap(h => h.cubes),\n            projWeight,\n            projBias,\n            attnOut,\n            attnResidual,\n            ...ln2.cubes,\n            mlpFcWeight,\n            mlpFcBias,\n            mlpFc,\n            mlpAct,\n            mlpProjWeight,\n            mlpProjBias,\n            mlpResult,\n            mlpResidual,\n        ]\n\n        let headCubes = [...ln1.cubes, ...heads.flatMap(h => h.cubes)];\n        let projCubes = [projWeight, projBias, attnOut, attnResidual];\n\n        let transformerLabel = mkLabel(1.0, blockCubes);\n        let selfAttendLabel = mkLabel(1.0, [...headCubes, ...projCubes]);\n        let projLabel = mkLabel(1.0, projCubes);\n        let mlpLabel = mkLabel(1.0, [...ln2.cubes, mlpFcWeight, mlpFcBias, mlpFc, mlpAct, mlpProjWeight, mlpProjBias, mlpResult, mlpResidual]);\n\n        cubes.push(...blockCubes);\n\n        return {\n            ln1,\n            heads,\n            labels: [transformerLabel, projLabel, selfAttendLabel, mlpLabel, ...heads.flatMap(h => h.labels)],\n            cubes: blockCubes,\n            transformerLabel,\n            projLabel,\n            selfAttendLabel,\n            mlpLabel,\n            projWeight,\n            projBias,\n            attnOut,\n            attnResidual,\n            mlpFc,\n            mlpFcWeight,\n            mlpFcBias,\n            mlpAct,\n            mlpProjWeight,\n            mlpProjBias,\n            mlpResult,\n            mlpResidual,\n            ln2,\n        };\n    }\n\n\n    let blockHalfMargin = 2 * margin;\n\n    y += blockHalfMargin;\n\n    let numColumns = 1;\n    let blocksPerColumn = 12;\n    if (shape.nBlocks > blocksPerColumn) {\n        numColumns = Math.ceil(shape.nBlocks / blocksPerColumn);\n    }\n    let columnWidth = (C * 14) * cell + margin * 2;\n    let blockIdxInColumn = 0;\n    let blockYTop = y;\n\n    let blocks: ReturnType<typeof createLayer>[] = [];\n    let blockSrc = residual0;\n    for (let i = 0; i < nBlocks; i++) {\n        if (blockIdxInColumn >= blocksPerColumn) {\n            blockIdxInColumn = 0;\n            y = blockYTop;\n            lnLeftX += columnWidth;\n            leftX += columnWidth;\n            rightX += columnWidth;\n        }\n\n        let target = gptGpuModel?.blocks[i];\n        y += blockHalfMargin;\n        let block = createLayer(blockSrc, target);\n        blocks.push(block);\n        blockSrc = block.mlpResidual;\n        y += blockHalfMargin;\n        blockIdxInColumn++;\n    }\n\n    y += blockHalfMargin;\n    let ln_f = createLn(0, blockSrc, gptGpuModel?.ln_f);\n\n    cubes.push(...ln_f.cubes);\n\n    let logitsTransposed = false;\n\n    let lmHeadWeight: IBlkDef, logits: IBlkDef, logitsAgg1: IBlkDef, logitsAgg2: IBlkDef, logitsSoftmax: IBlkDef;\n\n    if (logitsTransposed) {\n        lmHeadWeight = mk({\n            t: 'w', cx: vocabSize, cz: 1, cy: C, y: y,\n            xR: lnLeftX, zM: 0,\n            access: { src: gptGpuModel?.lm_head.weight, x: [0, 1, 0], y: [1, 0, 0], scale: 5.0 },\n            dimX: DimStyle.n_vocab, dimY: DimStyle.C,\n            name: 'LM Head Weights',\n        });\n\n        y += C * cell + margin;\n\n        logits = mk({\n            t: 'i', cx: vocabSize, cz: B, cy: T, y: y,\n            xR: lnLeftX, zM: 0,\n            access: { src: gptGpuModel?.lm_head.output, x: [1, 0, 0], y: [0, 1, T] },\n            deps: { dot: [[lmHeadWeight, 'xi'], [ln_f.lnResid, 'yi']], dotLen: C },\n            dimX: DimStyle.n_vocab, dimY: DimStyle.T,\n            name: 'Logits',\n        });\n\n        // z += vocabSize * cell + margin;\n\n        logitsAgg1 = mk({\n            t: 'a', cx: 1, cz: B, cy: T, y: y,\n            xL: lnLeftX + 1.5 * margin, zM: -3 * cell,\n            access: { src: gptGpuModel?.softmaxFinal.agg, x: [1, 0, 0], y: [0, 1, T], channel: 'r' },\n            deps: { add: [[logits, 'iy']], special: BlKDepSpecial.SoftmaxAggExp },\n            dimX: DimStyle.None, dimY: DimStyle.T,\n            name: 'SM Agg',\n        });\n\n        logitsAgg2 = mk({\n            t: 'a', cx: 1, cz: B, cy: T, y: y,\n            xL: lnLeftX + 1.5 * margin + cell, zM: -3 * cell,\n            access: { src: gptGpuModel?.softmaxFinal.agg, x: [1, 0, 0], y: [0, 1, T], channel: 'g' },\n            deps: { add: [[logits, 'iy']], special: BlKDepSpecial.SoftmaxAggMax },\n            dimX: DimStyle.None, dimY: DimStyle.T,\n            name: '',\n        });\n\n        y += T * cell + margin;\n\n        logitsSoftmax = mk({\n            t: 'i', cx: vocabSize, cz: B, cy: T, y: y,\n            xR: lnLeftX, zM: 0,\n            access: { src: gptGpuModel?.softmaxFinal.output, x: [1, 0, 0], y: [0, 1, T] },\n            deps: { add: [[logits, 'xy'], [logitsAgg1, 'iy'], [logitsAgg2, 'iy']], special: BlKDepSpecial.Softmax },\n            dimX: DimStyle.n_vocab, dimY: DimStyle.T,\n            name: 'Logits Softmax',\n        });\n\n    } else {\n        y += C * cell + margin;\n        let leftX2 = leftX - T * cell - margin;\n\n        lmHeadWeight = mk({\n            t: 'w', cx: C, cy: vocabSize, cz: 1, y: y,\n            xR: leftX2, zM: 0,\n            access: { src: gptGpuModel?.lm_head.weight, x: [1, 0, 0], y: [0, 1, 0], scale: 5.0 },\n            dimX: DimStyle.C, dimY: DimStyle.n_vocab,\n            name: 'LM Head Weights',\n        });\n\n\n        logits = mk({\n            t: 'i', cx: T, cy: vocabSize, cz: B, y: y,\n            xR: leftX, zM: 0,\n            access: { src: gptGpuModel?.lm_head.output, x: [0, 1, 0], y: [1, 0, T] },\n            deps: { dot: [[lmHeadWeight, 'iy'], [ln_f.lnResid, 'xi']], dotLen: C },\n            dimX: DimStyle.T, dimY: DimStyle.n_vocab,\n            name: 'Logits',\n        });\n\n        y += vocabSize * cell + margin;\n\n        logitsAgg2 = mk({\n            t: 'a', cx: T, cy: 1, cz: B, y: y,\n            xR: leftX, zM: 0,\n            access: { src: gptGpuModel?.softmaxFinal.agg, x: [0, 1, 0], y: [1, 0, T], channel: 'g' },\n            deps: { add: [[logits, 'xi']], special: BlKDepSpecial.SoftmaxAggMax },\n            dimX: DimStyle.T, dimY: DimStyle.None,\n            name: 'SM Agg',\n        });\n\n        logitsAgg1 = mk({\n            t: 'a', cx: T, cy: 1, cz: B, y: y + cell,\n            xR: leftX, zM: 0,\n            access: { src: gptGpuModel?.softmaxFinal.agg, x: [0, 1, 0], y: [1, 0, T], channel: 'r' },\n            deps: { add: [[logits, 'xi'], [logitsAgg2, 'x0']], special: BlKDepSpecial.SoftmaxAggExp },\n            dimX: DimStyle.T, dimY: DimStyle.None,\n            name: '',\n        });\n\n        y += 2 * cell + margin;\n\n        logitsSoftmax = mk({\n            t: 'i', cx: T, cy: vocabSize, cz: B, y: y,\n            xR: leftX, zM: 0,\n            access: { src: gptGpuModel?.softmaxFinal.output, x: [0, 1, 0], y: [1, 0, T] },\n            deps: { add: [[logits, 'xy'], [logitsAgg1, 'xi'], [logitsAgg2, 'xi']], special: BlKDepSpecial.Softmax },\n            dimX: DimStyle.T, dimY: DimStyle.n_vocab,\n            name: 'Logits Softmax',\n        });\n\n    }\n\n    // let logitsSoftmaxTopN = mk({\n    //     t: 'i', cx: T, cz: B, cy: Math.min(32, vocabSize), y: y,\n    //     xM: 0, zM: 0,\n    // });\n\n    let weightCount = vocabSize*C + T*C +\n        nBlocks * ((2*C + 4*C*C + C + 3*C) + // self attn\n                   (2*C + 4*C + 8*C*C + C)) + 2*C; // mlp\n\n    // let decoderCount = vocabSize * C; (excluded from the weight count apparently)\n\n    cubes.push(lmHeadWeight, logits, logitsAgg1, logitsAgg2, logitsSoftmax);\n\n    for (let i = 0; i < cubes.length; i++) {\n        cubes[i].idx = i;\n    }\n\n    return {\n        cubes,\n        cell,\n        margin,\n        idxObj,\n        tokEmbedObj,\n        posEmbedObj,\n        residual0,\n        ln_f,\n        lmHeadWeight,\n        logits,\n        logitsAgg1,\n        logitsAgg2,\n        logitsSoftmax,\n        embedLabel,\n        blocks,\n        height: y,\n        logitsTransposed,\n        model: gptGpuModel,\n        labels: [embedLabel, ...blocks.flatMap(b => b.labels)],\n        weightCount,\n        shape,\n        extraSources: {\n            idx: gptGpuModel?.inputBuf,\n            tokEmbedOut: gptGpuModel?.vocabEmbed.output,\n            posEmbedOut: gptGpuModel?.posEmbed.output,\n        },\n    };\n}\n\n","import { blockDimension, dimProps, findSubBlocks, splitGrid, splitGridForHighlight } from \"./Annotations\";\nimport { drawDataFlow, getBlockValueAtIdx } from \"./components/DataFlow\";\nimport { BlKDepSpecial, IBlkCellDep, IBlkDef } from \"./GptModelLayout\";\nimport { IProgramState } from \"./Program\";\nimport { clamp, isNotNil } from \"@/src/utils/data\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\n\nexport function runMouseHitTesting(state: IProgramState) {\n\n    let mouse = state.mouse;\n\n    let canvasSize = state.render.size;\n\n    let ndcX = mouse.mousePos.x / canvasSize.x * 2 - 1;\n    let ndcY = 1 - (mouse.mousePos.y / canvasSize.y * 2);\n\n    let viewMtx = state.camera.viewMtx;\n    let viewMtxInv = viewMtx.invert();\n    let modelMtx = state.camera.modelMtx;\n    let modelMtxInv = modelMtx.invert();\n\n    function clipToWorld(v: Vec4) {\n        let v2 = viewMtxInv.mulVec4(v);\n        let v3 = modelMtxInv.mulVec4(v2);\n        return v3.projToVec3();\n    }\n\n    let clipSpaceA = new Vec4(ndcX, ndcY, -1, 1);\n    let clipSpaceB = new Vec4(ndcX, ndcY, 1, 1);\n\n    let worldA = clipToWorld(clipSpaceA);\n    let worldB = clipToWorld(clipSpaceB);\n    let dir = worldB.sub(worldA).normalize();\n\n    // state.display.lines.push(`dir: ${dir.toString()}`);\n\n    // addLine2(state.render.lineRender, midWorld, midWorld.add(new Vec3(100,0,0)), { color: new Vec4(1, 0, 0, 1), thick: 10, mtx: new Mat4f() });\n\n    let visibleCubes: [IBlkDef, IBlkDef][] = [];\n    function addCube(c: IBlkDef, mainCube: IBlkDef) {\n        if (c.subs) {\n            for (let sub of c.subs) {\n                addCube(sub, mainCube || c);\n            }\n        } else if (c.opacity > 0) {\n            visibleCubes.push([c, mainCube]);\n        }\n    }\n    for (let c of state.layout.cubes) {\n        addCube(c, c);\n    }\n\n    let minT = 0.0;\n    let minCube: [IBlkDef, IBlkDef] | null = null;\n\n    for (let [c, main] of visibleCubes) {\n        let tl = new Vec3(c.x, c.y, c.z);\n        let br = new Vec3(c.x + c.dx, c.y + c.dy, c.z + c.dz);\n\n        let t = rayAABBIntersect(tl, br, worldA, dir);\n\n        // console.log('t:', t);\n\n        if (t > 0 && (!minCube || t < minT)) {\n            minT = t;\n            minCube = [c, main];\n        }\n    }\n\n    if (minCube) {\n        let [c, main] = minCube;\n\n        let tl = new Vec3(c.x, c.y, c.z);\n        let pt = worldA.add(dir.mul(minT));\n\n        let pt2 = new Vec3(\n            clamp((pt.x - tl.x) / c.dx, 0, 1 - 0.1/c.cx),\n            clamp((pt.y - tl.y) / c.dy, 0, 1 - 0.1/c.cy),\n            clamp((pt.z - tl.z) / c.dz, 0, 1 - 0.1/c.cz));\n\n        let pt3 = c.localMtx ? c.localMtx.mulVec3Proj(pt2) : pt2;\n\n        // the main block's index (useful for showing correct info against)\n        let ptIdx = new Vec3(\n            Math.floor(pt3.x * c.cx),\n            Math.floor(pt3.y * c.cy),\n            Math.floor(pt3.z * c.cz),\n        );\n\n        state.display.hoverTarget = { mainCube: main, subCube: c, mainIdx: ptIdx };\n\n        for (let label of state.layout.labels) {\n            for (let c of label.cubes) {\n                if (c === main) {\n                    label.visible = 1.0;\n                }\n            }\n        }\n\n        blockDimension(state, state.layout, main, Dim.X, main.dimX, 1.0);\n        blockDimension(state, state.layout, main, Dim.Y, main.dimY, 1.0);\n\n        highlightCellUnderMouse(state, main, c, pt2);\n        drawDependences(state, main, ptIdx);\n        drawDataFlow(state, main, ptIdx);\n    } else if (isNotNil(state.display.blkIdxHover)) {\n        for (let idx of state.display.blkIdxHover) {\n            let mainBlk = state.layout.cubes[idx];\n\n            iterVisibleSubCubes(mainBlk, (c) => {\n                c.highlight = 0.2;\n            });\n        }\n    }\n\n    if (isNotNil(state.display.dimHover)) {\n        let blks = state.walkthrough.dimHighlightBlocks;\n        for (let blk of blks ?? []) {\n            if (blk.dimX === state.display.dimHover) {\n                blockDimension(state, state.layout, blk, Dim.X, blk.dimX, 1.0);\n            }\n            if (blk.dimY === state.display.dimHover) {\n                blockDimension(state, state.layout, blk, Dim.Y, blk.dimY, 1.0);\n            }\n        }\n    }\n}\n\n\nexport function iterVisibleSubCubes(c: IBlkDef, cb: (c: IBlkDef) => void) {\n    if (c.subs) {\n        for (let sub of c.subs) {\n            iterVisibleSubCubes(sub, cb);\n        }\n    } else {\n        cb(c);\n    }\n}\n\nexport function highlightCellUnderMouse(state: IProgramState, mainBlk: IBlkDef, blk: IBlkDef, pt2: Vec3) {\n\n    iterVisibleSubCubes(mainBlk, (c) => {\n        c.highlight = 0.1;\n    });\n\n    // currently broken otherwise :(\n    if (blk === mainBlk) {\n        let ptLocalIdx = new Vec3(\n            pt2.x * blk.cx * blk.dx / mainBlk.dx,\n            pt2.y * blk.cy * blk.dy / mainBlk.dy,\n            pt2.z * blk.cz * blk.dz / mainBlk.dz,\n        );\n        // need to choose a primary axis (if it makes sense! usually the T axis)\n        // we then highlight that access a little bit\n        // probably need to do that in the GptModelLayout? It's not a super well-defined idea\n        let midX = splitGrid(state.layout, blk, Dim.X, ptLocalIdx.x, 0);\n        if (midX) {\n            midX.highlight = 0.15;\n            let midY = splitGrid(state.layout, midX, Dim.Y, ptLocalIdx.y, 0);\n            if (midY) {\n                let midZ = splitGrid(state.layout, midY, Dim.Z, ptLocalIdx.z, 0);\n                if (midZ) {\n                    midZ.highlight = 0.6;\n                }\n            }\n        }\n    }\n}\n\nexport function getDepSrcIdx(dep: IBlkCellDep, destIdx: Vec3) {\n    let mtx = dep.srcIdxMtx;\n    let hasXDot = mtx.g(0, 3) !== 0;\n    let hasYDot = mtx.g(1, 3) !== 0;\n    let srcIdx4 = mtx.mulVec4(Vec4.fromVec3(destIdx, 0));\n    let srcIdx = new Vec3(srcIdx4.x, srcIdx4.y, srcIdx4.z);\n    let dotDim = hasXDot ? Dim.Y : Dim.X;\n    return { srcIdx, dotDim, otherDim: dotDim === Dim.X ? Dim.Y : Dim.X, isDot: hasXDot || hasYDot };\n}\n\nexport function getDepDotLen(blk: IBlkDef, destIdx: Vec3): number | null {\n    if (!blk.deps?.dot) {\n        return null;\n    }\n    let dotLen: number | null = null;\n    let triLimit = blk.deps.dot.find(d => d.src.deps?.lowerTri);\n    if (triLimit) {\n        let { srcIdx, dotDim } = getDepSrcIdx(triLimit, destIdx);\n        dotLen = srcIdx.getAt(dotDim);\n    }\n    return dotLen;\n}\n\nexport function drawDependences(state: IProgramState, blk: IBlkDef, idx: Vec3) {\n    let layout = state.layout;\n    let deps = blk.deps;\n    if (!deps) {\n        return;\n    }\n\n    function drawDep(dep: IBlkCellDep, destIdx: Vec3, dotLen?: number | null) {\n        let { srcIdx, dotDim, otherDim, isDot } = getDepSrcIdx(dep, destIdx);\n\n        if (blk.deps?.special === BlKDepSpecial.InputEmbed && dep.src === state.layout.tokEmbedObj) {\n            let tokenIdx = getBlockValueAtIdx(state.layout.idxObj, new Vec3(destIdx.x, 0, destIdx.z));\n            isDot = false;\n            srcIdx.setAt(Dim.X, tokenIdx ?? 0);\n        }\n\n        if (isDot) {\n            if (dep.src.deps?.lowerTri) {\n                dotLen = dotLen ?? srcIdx.getAt(dotDim);\n            }\n\n            let sub = splitGridForHighlight(layout, dep.src, dotDim, srcIdx.getAt(dotDim));\n\n            if (sub && isNotNil(dotLen)) {\n                // only highlight up to dotLen\n                splitGrid(layout, sub, otherDim, dotLen, 0);\n                for (let parts of findSubBlocks(sub, otherDim, null, dotLen)) {\n                    parts.highlight = 0.5;\n                }\n            } else {\n\n                if (sub) sub.highlight = 0.5;\n            }\n        } else {\n            let sub = splitGridForHighlight(layout, dep.src, Dim.X, srcIdx.x);\n            if (!sub) return;\n            sub = splitGridForHighlight(layout, sub, Dim.Y, srcIdx.y);\n            if (!sub) return;\n            sub = splitGridForHighlight(layout, sub, Dim.Z, srcIdx.z);\n            if (sub) sub.highlight = 0.5;\n        }\n    }\n\n    if (deps.dot) {\n        let dotLen = getDepDotLen(blk, idx);\n        // let i = 0;\n        for (let dep of deps.dot) {\n            // if (i > 0) {\n                drawDep(dep, idx, dotLen);\n            // }\n            // i++;\n        }\n    }\n    if (deps.add) {\n        for (let dep of deps.add) {\n            drawDep(dep, idx);\n        }\n    }\n\n\n}\n\nfunction rayAABBIntersect(tl: Vec3, br: Vec3, rayOrigin: Vec3, rayDir: Vec3) {\n    let tx1 = (tl.x - rayOrigin.x) / rayDir.x;\n    let tx2 = (br.x - rayOrigin.x) / rayDir.x;\n\n    let tmin = Math.min(tx1, tx2);\n    let tmax = Math.max(tx1, tx2);\n\n    let ty1 = (tl.y - rayOrigin.y) / rayDir.y;\n    let ty2 = (br.y - rayOrigin.y) / rayDir.y;\n\n    tmin = Math.max(tmin, Math.min(ty1, ty2));\n    tmax = Math.min(tmax, Math.max(ty1, ty2));\n\n    let tz1 = (tl.z - rayOrigin.z) / rayDir.z;\n    let tz2 = (br.z - rayOrigin.z) / rayDir.z;\n\n    tmin = Math.max(tmin, Math.min(tz1, tz2));\n    tmax = Math.min(tmax, Math.max(tz1, tz2));\n\n    return tmax >= tmin ? tmin : -1;\n}\n","\nexport function nonNil<T>(value: T | null | undefined): value is T {\n  return value !== null && value !== undefined;\n}\n","import { IProgram } from \"./shader\";\n\nexport function logArr(name: string, arr: Float32Array, n = 15) {\n    console.log(name, [...arr.subarray(0, n)].map(a => parseFloat(a.toFixed(3))));\n}\n\nexport function arraysEqual(a: Float32Array, b: Float32Array) {\n    if (a.length !== b.length) return false;\n    for (let i = 0; i < a.length; i++) {\n        if (Math.abs(a[i] - b[i]) > 1e-4) return false;\n    }\n    return true;\n}\n\nexport function setProgramTexUniforms(gl: WebGL2RenderingContext, program: IProgram, names: string[]) {\n    gl.useProgram(program.program);\n    for (let i = 0; i < names.length; i++) {\n        let loc = gl.getUniformLocation(program.program, names[i]);\n        if (!loc) {\n            console.log('uniform not found:', names[i], '(may just be unused)');\n            continue;\n        }\n        gl.uniform1i(loc, i);\n    }\n}\n\nexport interface IBufferTex {\n    width: number;\n    height: number;\n    channels: number;\n    texture: WebGLTexture;\n    localBuffer?: Float32Array;\n}\n\n// we transform from 1 set of textures to another set within a shader\n// each buffer is a standard layer of the ML model\n// note that the dest buffers must all be the same size, but the src buffers can be different sizes\nexport interface IRenderPhase {\n    destBuffers: IBufferTex[];\n    srcBuffers: IBufferTex[];\n    fbo: WebGLFramebuffer;\n    program: IProgram;\n    uniformsSet: boolean;\n    uniformNames?: string[];\n}\n\nexport function createRenderPhase(gl: WebGL2RenderingContext, program: IProgram, dest: IBufferTex[], src: IBufferTex[], names?: string[]): IRenderPhase {\n    if (names) {\n        if (names.length !== src.length) {\n            throw new Error(`Number of texture names (${names.length}) does not match number of src textures (${src.length})`);\n        }\n    }\n\n    let fbo = gl.createFramebuffer()!;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n\n    for (let i = 0; i < dest.length; i++) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, dest[i].texture, 0);\n    }\n\n    gl.drawBuffers(dest.map((_, i) => gl.COLOR_ATTACHMENT0 + i));\n\n    let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        console.log(\"createRenderPhase: framebuffer not complete: \" + status);\n    }\n\n    return {\n        destBuffers: dest,\n        srcBuffers: src,\n        fbo,\n        program,\n        uniformNames: names,\n        uniformsSet: false,\n    };\n}\n\nexport let RenderPhaseStats = {\n    bindAndDrawCount: 0,\n};\n\nexport function runRenderPhase(gl: WebGL2RenderingContext, phase: IRenderPhase) {\n    gl.useProgram(phase.program.program);\n\n    if (!phase.uniformsSet) {\n        phase.uniformNames && setProgramTexUniforms(gl, phase.program, phase.uniformNames!);\n        phase.uniformsSet = true;\n    }\n\n    for (let i = 0; i < phase.srcBuffers.length; i++) {\n        gl.activeTexture(gl.TEXTURE0 + i);\n        gl.bindTexture(gl.TEXTURE_2D, phase.srcBuffers[i].texture);\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, phase.fbo);\n    // let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    // if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    //     console.log(\"runRenderPhase: framebuffer not complete: \" + status);\n    // }\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n    RenderPhaseStats.bindAndDrawCount += 1;\n}\n\nexport function createBufferTex(gl: WebGL2RenderingContext, width: number, height: number, channels: number): IBufferTex {\n    let texture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    let [format, iformat] = channelsToFormat(gl, channels);\n    gl.texImage2D(gl.TEXTURE_2D, 0, iformat, width, height, 0, format, gl.FLOAT, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return {\n        width,\n        height,\n        texture,\n        channels,\n    };\n}\n\nexport function writeToBufferTex(gl: WebGL2RenderingContext, buffer: IBufferTex, data: Float32Array) {\n    if (data.length !== buffer.width * buffer.height * buffer.channels) {\n        throw new Error('Data length does not match buffer size');\n    }\n    gl.bindTexture(gl.TEXTURE_2D, buffer.texture);\n    let [format] = channelsToFormat(gl, buffer.channels);\n    gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, buffer.width, buffer.height, format, gl.FLOAT, data);\n}\n\nexport function readFromRenderPhase(gl: WebGL2RenderingContext, phase: IRenderPhase, index: number, out: Float32Array) {\n    let buffer = phase.destBuffers[index];\n    if (out.length !== buffer.width * buffer.height * buffer.channels) {\n        throw new Error(`Data length does not match output size: expected ${buffer.width * buffer.height * buffer.channels}, got supplied buffer is ${out.length}`);\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, phase.fbo);\n    gl.readBuffer(gl.COLOR_ATTACHMENT0 + index);\n    let [format] = channelsToFormat(gl, buffer.channels);\n\n    let altFormat = gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT);\n    let altType = gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE);\n\n    if (altType !== gl.FLOAT) {\n        throw new Error(`Implementation does not support reading back float data. Got type ${GlType[altType] ?? altType}`);\n    }\n\n    if (altFormat !== format) {\n        // Sometimes the implementation doesn't support reading back float data for the particular number of channels we're after\n        // In this case, they typically support RGBA32F for channels < 4, so handle that case, and manually down-convert\n        if (altFormat !== gl.RGBA) {\n            throw new Error(`Implementation does not support reading back float data for ${buffer.channels} channels, or 4 channels. Got format ${GlFormat[altFormat] ?? altFormat}.`);\n        }\n        let temp = new Float32Array(buffer.width * buffer.height * 4);\n        gl.readPixels(0, 0, buffer.width, buffer.height, altFormat, gl.FLOAT, temp);\n        for (let c = 0; c < buffer.channels; c++) {\n            for (let i = 0; i < out.length; i++) {\n                out[i] = temp[i * 4 + c];\n            }\n        }\n    } else {\n        gl.readPixels(0, 0, buffer.width, buffer.height, format, gl.FLOAT, out);\n    }\n}\n\nexport function channelsToFormat(gl: WebGL2RenderingContext, channels: number): [GlFormat, GlInternalFormat] {\n    switch (channels) {\n        case 1: return [gl.RED, gl.R32F];\n        case 2: return [gl.RG, gl.RG32F];\n        case 3: return [gl.RGB, gl.RGB32F];\n        case 4: return [gl.RGBA, gl.RGBA32F];\n        default: throw new Error(`Invalid number of channels: ${channels}. Must be 1, 2, 3, or 4.`);\n    }\n}\n\nexport enum GlFormat {\n    RED = 0x1903,\n    RG = 0x8227,\n    RGB = 0x1907,\n    RGBA = 0x1908,\n}\n\nexport enum GlInternalFormat {\n    R32F = 0x822E,\n    RG32F = 0x8230,\n    RGB32F = 0x8815,\n    RGBA32F = 0x8814,\n}\n\nexport enum GlType {\n    UNSIGNED_BYTE = 0x1401,\n    FLOAT = 0x1406,\n}","import { NativeFunctions } from \"./NativeBindings\";\nimport { IRenderState } from \"./render/modelRender\";\nimport { createSyncObject, ISyncObject } from \"./render/syncObjects\";\nimport { nonNil } from \"@/src/utils/basic\";\nimport { Random } from \"@/src/utils/random\";\nimport { createBufferTex, writeToBufferTex, createRenderPhase, IBufferTex, runRenderPhase, readFromRenderPhase, arraysEqual, IRenderPhase, logArr, RenderPhaseStats } from \"@/src/utils/renderPhases\";\nimport { createShaderProgram, ensureShadersReady, IProgram, IShaderManager } from \"@/src/utils/shader\";\nimport { IGptModelConfig, ITensorSet } from \"@/src/utils/tensor\";\n\nexport interface IModelShape {\n    B: number;\n    vocabSize: number;\n    nBlocks: number;\n    C: number;\n    nHeads: number;\n    T: number;\n    A: number;\n}\n\nexport interface ILayerBuilder {\n    gl: WebGL2RenderingContext;\n    model: ITensorSet;\n    shape: IModelShape;\n    shaderManager: IShaderManager;\n}\n\n\nexport interface IDataAndModel {\n    data: ITensorSet;\n    model: ITensorSet;\n    native: NativeFunctions;\n}\n\nexport type IModelState = ReturnType<typeof initModel>;\n\n/* TODO: think about how to handle working computation buffers.\n\nFor each layer, we're typically abe to re-use the working memory buffers (provided they're the same dims, or smaller).\nBut the layers each have different weights.\nHowever, for debugging etc, we also want to keep all the working buffers around.\nWe also want to re-use programs and shader objects where possible. Can just do a string compare on the shader source.\nBaking in the constants remains a good idea I think, since the div/mod's can be flattened since they're often powers of 2 (& constant).\n\nAlso have the issue of passing input/output buffers between stages, where we can often re-use those buffers\n(not always, e.g. layerNorm). However, the (B, T, C) buffers can sometimes allow for a ping-pong process.\n\nWe might as well build the nested structure of the real model, with each chunk having create + execute methods.\n*/\n\nexport function initModel(state: IRenderState, dataAndModel: IDataAndModel, B: number) {\n    // let gptLayerTest = createGptModel(state.ctx.shaderManager, dataAndModel.model, dataAndModel.data.config.B!);\n    // runModel(state, gptLayerTest, dataAndModel.data);\n    // cleanupGptModel(state.gl, gptLayerTest);\n\n    return createGptModel(state.ctx.shaderManager, dataAndModel.model, B);\n}\n\nexport function setModelInputData(renderState: IRenderState, gptModel: IGpuGptModel, rand: Random) {\n    let { gl } = renderState;\n    let { inputTokens, shape: { B, T } } = gptModel;\n\n    let buf = new Float32Array(B * T);\n    for (let i = 0; i < buf.length; i++) {\n        buf[i] = rand.randint(0, 3);\n    }\n\n    buf.set([2, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0]);\n\n    gptModel.inputBuf = buf;\n    gptModel.inputLen = 6;\n    writeToBufferTex(gl, inputTokens, buf);\n}\n\nexport function runModel(renderState: IRenderState, gptModel: IGpuGptModel, validationData?: ITensorSet) {\n    let { ctx: { gl }, quadVao } = renderState;\n    let {\n        inputTokens,\n        add,\n        posEmbed,\n        vocabEmbed,\n        blocks,\n        ln_f,\n        lm_head,\n        softmaxFinal,\n        shape,\n    } = gptModel;\n\n    let { B, C, T, nBlocks } = shape;\n\n    console.log(`---- running GPT model B=${B} C=${C} T=${T} layers=${nBlocks} ----`);\n\n    let allValid = true;\n\n    RenderPhaseStats.bindAndDrawCount = 0;\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.BLEND);\n    gl.bindVertexArray(quadVao);\n\n    if (validationData) {\n        let tIdx = validationData.idx; // (B, T)\n        gptModel.inputBuf = tIdx.buffer;\n        writeToBufferTex(gl, inputTokens, tIdx.buffer);\n    }\n\n    runRenderPhase(gl, vocabEmbed.phase);\n    runRenderPhase(gl, posEmbed.phase);\n    runRenderPhase(gl, add.addPhase);\n\n    // gl.flush();\n    validate('x', add.addPhase);\n\n    for (let blockId = 0; blockId < blocks.length; blockId++) {\n        let { ln_1, attn, ln_2, mlp } = blocks[blockId];\n\n        gl.flush();\n        runRenderPhase(gl, ln_1.aggPhase);\n        runRenderPhase(gl, ln_1.applyPhase);\n        runRenderPhase(gl, attn.qkvPhase);\n        runRenderPhase(gl, attn.selfAttendPhase);\n        runRenderPhase(gl, attn.attnMatrixAggPhase);\n        runRenderPhase(gl, attn.attnMatrixSoftmaxPhase);\n        runRenderPhase(gl, attn.scaledVectorsPhase);\n        runRenderPhase(gl, attn.proj.linearPhase);\n        gl.flush();\n        runRenderPhase(gl, attn.add.addPhase);\n        runRenderPhase(gl, ln_2.aggPhase);\n        runRenderPhase(gl, ln_2.applyPhase);\n        runRenderPhase(gl, mlp.fcLayer.linearPhase);\n        runRenderPhase(gl, mlp.geluPhase);\n        runRenderPhase(gl, mlp.projLayer.linearPhase);\n        runRenderPhase(gl, mlp.addLayer.addPhase);\n\n        gl.flush();\n        validate(`block${blockId}`, mlp.addLayer.addPhase);\n    }\n\n    runRenderPhase(gl, ln_f.aggPhase);\n    runRenderPhase(gl, ln_f.applyPhase);\n    runRenderPhase(gl, lm_head.linearPhase);\n\n    gl.flush();\n\n    runRenderPhase(gl, softmaxFinal.aggPhase);\n    runRenderPhase(gl, softmaxFinal.softmaxPhase);\n\n    function validate(name: string, phase: IRenderPhase) {\n        if (!validationData) {\n            return;\n        }\n        let expected = validationData[name].toFloat32Array();\n        let dataFromGpu = new Float32Array(expected.length);\n        readFromRenderPhase(gl, phase, 0, dataFromGpu);\n        let isEqual = arraysEqual(dataFromGpu, expected);\n        if (!isEqual) {\n            logArr('expected', expected);\n            logArr('actual', dataFromGpu);\n        }\n        allValid = allValid && isEqual;\n        console.log(name, isEqual);\n    }\n\n    if (validationData) {\n        setTimeout(() => {\n            validate('x', add.addPhase);\n\n            for (let blockId = 0; blockId < blocks.length; blockId++) {\n                validate(`block${blockId}`, blocks[blockId].mlp.addLayer.addPhase);\n            }\n\n            validate('lm_head', lm_head.linearPhase);\n\n            validate('probs', softmaxFinal.softmaxPhase);\n\n            if (!allValid) {\n                console.error('VALIDATION FAILED');\n            }\n        }, 200);\n    }\n\n    if (!validationData) {\n        gptModel.readbackSync = createSyncObject(renderState);\n        gl.flush();\n    }\n\n    console.log(`---- done running GPT model drawCount = ${RenderPhaseStats.bindAndDrawCount} ----`);\n}\n\nexport function loopModelOutputToInput(renderState: IRenderState, model: IGpuGptModel) {\n    let gl = model.gl;\n\n    gl.useProgram(model.copyOutputToInput.copyPhase.program.program);\n    gl.uniform1i(model.copyOutputToInput.copyPhase.program.locs['u_targetTIdx'], model.inputLen);\n    runRenderPhase(gl, model.copyOutputToInput.copyPhase);\n\n    model.inputLen++;\n}\n\nexport function readModelResultsBackWhenReady(model: IGpuGptModel) {\n    if (model.readbackSync && model.readbackSync.isReady) {\n        console.log('sync is ready after', model.readbackSync.elapsedMs.toFixed(1), 'ms');\n        readModelResultsBack(model);\n        model.readbackSync = null;\n    }\n}\n\nexport function readModelResultsBack(model: IGpuGptModel) {\n\n    let { gl, shape: { B, T, C, vocabSize } } = model;\n    let size = B * T * vocabSize;\n\n    if (!model.resultBuf || model.resultBuf.length !== size) {\n        model.resultBuf = new Float32Array(size);\n    }\n\n    readFromRenderPhase(gl, model.softmaxFinal.softmaxPhase, 0, model.resultBuf);\n\n    let sortedBuf = new Float32Array(T * vocabSize * 2);\n    for (let t = 0; t < T; t++) {\n        let options = [...model.resultBuf.slice(t * vocabSize, (t + 1) * vocabSize)].map((v, i) => ({ v, i }));\n        options.sort((a, b) => b.v - a.v);\n        for (let i = 0; i < options.length; i++) {\n            sortedBuf[(t * vocabSize + i) * 2 + 0] = options[i].i;\n            sortedBuf[(t * vocabSize + i) * 2 + 1] = options[i].v;\n        }\n    }\n    model.sortedBuf = sortedBuf;\n}\n\nfunction cleanupGptModel(gl: WebGL2RenderingContext, model: IGpuGptModel) {\n    // @TODO: need a way of collecting all resources:\n    // - texture buffers\n    // - render phases\n}\n\nexport const basicVertexShader = /*glsl*/`#version 300 es\nprecision highp float;\nlayout(location = 0) in vec2 a_position;\nvoid main() {\n    gl_Position = vec4(a_position, 0, 1);\n}\n`;\n\nexport interface IEmbedLayerLink {\n    weight: IBufferTex;\n    output: IBufferTex;\n}\n\nexport interface ILinearLayerLink {\n    weight: IBufferTex;\n    bias: IBufferTex | null;\n    output: IBufferTex;\n}\n\nexport interface ILayerNormLayerLink {\n    normAgg: IBufferTex;\n    normWeight: IBufferTex;\n    normBias: IBufferTex;\n    output: IBufferTex;\n}\n\nexport interface ISoftmaxLayerLink {\n    agg: IBufferTex;\n    output: IBufferTex;\n}\n\nexport interface IAddLayerLink {\n    output: IBufferTex;\n}\n\nexport interface IBlockLayerLink {\n    output: IBufferTex;\n    ln_1: ILayerNormLayerLink;\n    ln_2: ILayerNormLayerLink;\n    attn: IAttentionLayerLink;\n    mlp: IMlpLayerLink;\n}\n\nexport interface IAttentionLayerLink {\n    qkvWeight: IBufferTex;\n    qkvBias: IBufferTex;\n    qkvOutput: IBufferTex;\n    attnMatrix: IBufferTex;\n    attnMatrixAgg: IBufferTex;\n    attnMatrixSoftmax: IBufferTex;\n    scaledVectors: IBufferTex;\n    proj: ILinearLayerLink;\n    add: IAddLayerLink;\n    output: IBufferTex;\n}\n\nexport interface IMlpLayerLink {\n    fcLayer: ILinearLayerLink;\n    mlpGelu: IBufferTex;\n    projLayer: ILinearLayerLink;\n    addLayer: IAddLayerLink;\n    output: IBufferTex;\n}\n\nexport interface IGptModelLink {\n    gl: WebGL2RenderingContext;\n    inputBuf: Float32Array;\n    inputTokens: IBufferTex;\n    vocabEmbed: IEmbedLayerLink;\n    posEmbed: IEmbedLayerLink;\n    add: IAddLayerLink;\n    blocks: IBlockLayerLink[],\n    ln_f: ILayerNormLayerLink;\n    lm_head: ILinearLayerLink;\n    softmaxFinal: ISoftmaxLayerLink;\n    shape: IModelShape;\n    output: IBufferTex;\n    resultBuf: Float32Array | null;\n    sortedBuf: Float32Array | null;\n    inputLen: number;\n}\n\nexport interface IGpuGptModel extends IGptModelLink {\n    vocabEmbed: IGpuEmbeddingLayer;\n    posEmbed: IGpuEmbeddingLayer;\n    add: IGpuAddLayer;\n    ln_f: IGpuLayerNormLayer;\n    lm_head: IGpuLinearLayer;\n    softmaxFinal: IGpuSoftmaxLayer;\n    blocks: IGpuGptBlockLayer[];\n\n    copyOutputToInput: { copyPhase: IRenderPhase };\n    readbackSync: ISyncObject | null;\n}\n\nexport function createGptModel(shaderManager: IShaderManager, model: ITensorSet, B: number): IGpuGptModel {\n    let gl = shaderManager.gl;\n    let prefix = 'transformer';\n\n    let config = model.config;\n\n    let C = config.n_embd;\n    let nHeads = config.n_head;\n    let T = config.block_size;\n    let nBlocks = config.n_layer;\n    let vocabSize = config.vocab_size;\n    let A = C / nHeads; // n elements in each Q, K, V vector, i.e. what we project down to\n\n    let shape: IModelShape = { B, C, nHeads, T, A, nBlocks, vocabSize };\n    let layerBuilder: ILayerBuilder = { gl, model, shape, shaderManager };\n\n    let inputBuf = new Float32Array(B * T);\n    let inputTokens = createBufferTex(gl, 1, B * T, 1);\n\n    // not ideal to have to create one for each batch, but works for now\n    let posArr = new Float32Array(B * T);\n    for (let i = 0; i < B; i++) {\n        for (let j = 0; j < T; j++) {\n            posArr[i * T + j] = j;\n        }\n    }\n    let pos = createBufferTex(gl, 1, B * T, 1);\n    writeToBufferTex(gl, pos, posArr);\n\n    let vocabEmbed = createEmbeddingLayer(layerBuilder, prefix + '.wte', vocabSize, C, inputTokens);\n    let posEmbed = createEmbeddingLayer(layerBuilder, prefix + '.wpe', T, C, pos);\n    let add = createAddLayer(layerBuilder, vocabEmbed.output, posEmbed.output); // add has shape (C, B * T)\n\n    let blocks = [];\n    let x = add.output;\n    for (let i = 0; i < nBlocks; i++) {\n        let block = createBlockLayer(layerBuilder, prefix + '.h.' + i, x);\n        blocks.push(block);\n        x = block.output;\n    }\n\n    let ln_f = createLayerNorm(layerBuilder, prefix + '.ln_f', x);\n    let lm_head = createLinearLayer(layerBuilder, 'lm_head', C, vocabSize, ln_f.output, undefined, false);\n\n    let softmaxFinal = createSoftmaxLayer(layerBuilder, lm_head.output);\n\n    let copyOutputToInput = createCopyOutputToInputLayer(layerBuilder, softmaxFinal.output, inputTokens);\n\n    ensureShadersReady(shaderManager);\n\n    return {\n        gl,\n        inputBuf,\n        inputTokens,\n        vocabEmbed,\n        posEmbed,\n        add,\n        blocks,\n        ln_f,\n        lm_head,\n        shape,\n        softmaxFinal,\n        copyOutputToInput,\n        output: softmaxFinal.output,\n        inputLen: 6,\n        resultBuf: null as Float32Array | null,\n        sortedBuf: null as Float32Array | null,\n        readbackSync: null as ISyncObject | null,\n    };\n}\n\nexport interface IGpuGptBlockLayer extends IBlockLayerLink {\n    ln_1: IGpuLayerNormLayer;\n    ln_2: IGpuLayerNormLayer;\n    attn: IGpuAttnLayer;\n    mlp: IGpuMlpLayer;\n}\n\nfunction createBlockLayer(layerBuilder: ILayerBuilder, prefix: string, input: IBufferTex): IGpuGptBlockLayer {\n    let ln_1 = createLayerNorm(layerBuilder, prefix + '.ln_1', input);\n    let attn = createAttnLayer(layerBuilder, prefix + '.attn', ln_1.output, input);\n    let ln_2 = createLayerNorm(layerBuilder, prefix + '.ln_2', attn.output);\n    let mlp = createMLP(layerBuilder, prefix + '.mlp', ln_2.output, attn.output);\n\n    return {\n        attn,\n        ln_1,\n        ln_2,\n        mlp,\n        output: mlp.output,\n    };\n}\n\nexport interface IGpuAttnLayer extends IAttentionLayerLink {\n    qkvPhase: IRenderPhase;\n    selfAttendPhase: IRenderPhase;\n    attnMatrixAggPhase: IRenderPhase;\n    attnMatrixSoftmaxPhase: IRenderPhase;\n    scaledVectorsPhase: IRenderPhase;\n    proj: IGpuLinearLayer;\n    add: IGpuAddLayer;\n}\n\nfunction createAttnLayer(layerBuilder: ILayerBuilder, prefix: string, input: IBufferTex, residual: IBufferTex): IGpuAttnLayer {\n    let { gl, model, shape: { B, T, C, nHeads, A }, shaderManager } = layerBuilder;\n\n    // move the 1st dim to the end, i.e. the QKV split will be packed into RGB tex channels\n    let tAttnWeight = model[prefix + '.c_attn.weight'].view([3, nHeads, A, C]).permute(1, 2, 3, 0);\n    let tAttnBias = model[prefix + '.c_attn.bias'].view([3, nHeads, A]).permute(1, 2, 0);\n\n    // weights\n    let qkvWeight         = createBufferTex(gl, C, nHeads * A, 3);\n    let qkvBias           = createBufferTex(gl, 1, nHeads * A, 3);\n\n    // inputs; buffers; outputs\n    let qkvOutput         = createBufferTex(gl, A, B * nHeads * T, 4); // 4 channels required for color-renderable\n    let attnMatrix        = createBufferTex(gl, T, B * nHeads * T, 1);\n    let attnMatrixAgg     = createBufferTex(gl, 1, B * nHeads * T, 2);\n    let attnMatrixSoftmax = createBufferTex(gl, T, B * nHeads * T, 1);\n    let scaledVectors     = createBufferTex(gl, nHeads * A, B * T, 1);\n\n    writeToBufferTex(gl, qkvWeight, tAttnWeight.toFloat32Array());\n    writeToBufferTex(gl, qkvBias, tAttnBias.toFloat32Array());\n\n    let qkvProg = createShaderProgram(shaderManager, 'qkv', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D attnInput; // (B, T)         (C)\n        uniform sampler2D qkvWeight; // (nHeads, A)    (C) [3]\n        uniform sampler2D qkvBias;   // (nHeads, A)    (1) [3]\n        out vec4 qkvOutput;          // (B, nHeads, T) (A)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            int headIdx = pos.y / ${T};\n            int tIdx = pos.y % ${T};\n            int bIdx = headIdx / ${nHeads};\n            headIdx = headIdx % ${nHeads};\n\n            vec3 a = texelFetch(qkvBias, ivec2(0, headIdx * ${A} + pos.x), 0).rgb;\n            for (int i = 0; i < ${C}; i++) {\n                float inVal = texelFetch(attnInput, ivec2(i, tIdx + bIdx * ${T}    ), 0).r;\n                vec3 qkvW   = texelFetch(qkvWeight,  ivec2(i, headIdx * ${A} + pos.x), 0).rgb;\n                a += inVal * qkvW;\n            }\n\n            qkvOutput = vec4(a, 1);\n        }\n    `);\n\n    let selfAttendProg = createShaderProgram(shaderManager, 'selfAttend', basicVertexShader, /* glsl */`#version 300 es\n        precision highp float;\n        uniform sampler2D qkvOutput; // (B, nHeads, T) (A)\n        out float attnMatrix;        // (B, nHeads, T) (T)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int tIdxK = pos.x;\n            int tIdxQ = pos.y % ${T};\n            int yOffset = pos.y - tIdxQ;\n\n            if (tIdxK > tIdxQ) { // # forward attention only\n                discard;\n            }\n\n            float a = 0.0;\n            for (int i = 0; i < ${A}; i++) {\n                float q = texelFetch(qkvOutput, ivec2(i, yOffset + tIdxQ), 0).r;\n                float k = texelFetch(qkvOutput, ivec2(i, yOffset + tIdxK), 0).g;\n                a += q * k;\n            }\n\n            attnMatrix = a / sqrt(float(${A}));\n        }\n    `);\n\n    let attnMatrixAggProg = createShaderProgram(shaderManager, 'attnMatrixAgg', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D attnMatrix; // (B, nHeads, T) (T)\n        out vec2 attnMatrixAgg;       // (B, nHeads, T) (1) [2]\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int tIdxY = pos.y % ${T};\n\n            // Pass 1 finds the max\n            float m = 0.0;\n            for (int i = 0; i <= tIdxY; i++) {\n                float p = texelFetch(attnMatrix, ivec2(i, pos.y), 0).r;\n                m = max(m, p);\n            }\n\n            // Pass 2 finds the exp sum (shifted by max)\n            float a = 0.0;\n            for (int i = 0; i <= tIdxY; i++) {\n                float p = texelFetch(attnMatrix, ivec2(i, pos.y), 0).r;\n                a += exp(p - m);\n            }\n\n            // Store sufficient information to compute/apply the softmax\n            attnMatrixAgg = vec2(1.0 / a, m);\n        }\n    `);\n\n    let attnMatrixSoftmaxProg = createShaderProgram(shaderManager, 'attnMatrixSoftmax', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D attnMatrix;    // (B, nHeads, T) (T)\n        uniform sampler2D attnMatrixAgg; // (B, nHeads, T) (1) [2]\n        out float attnMatrixSoftmax;     // (B, nHeads, T) (T)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int tIdxX = pos.x;\n            int tIdxY = pos.y % ${T};\n\n            if (tIdxX > tIdxY) { // # forward attention only\n                attnMatrixSoftmax = 0.0;\n                discard;\n            }\n\n            vec2 agg = texelFetch(attnMatrixAgg, ivec2(0, pos.y), 0).rg;\n            float expSumInv = agg.r;\n            float maxVal = agg.g;\n\n            float p = texelFetch(attnMatrix, pos, 0).r;\n            attnMatrixSoftmax = exp(p - maxVal) * expSumInv;\n        }\n    `);\n\n    let scaledVectorsProg = createShaderProgram(shaderManager, 'scaledVectors', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D qkvOutput;         // (B, nHeads, T) (A)\n        uniform sampler2D attnMatrixSoftmax; // (B, nHeads, T) (T)\n        out float scaledVectors;             // (B, T)         (A * nHeads)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int aIdx = pos.x % ${A};\n            int headIdx = pos.x / ${A};\n\n            int tIdxY = pos.y % ${T};\n            int bIdx = pos.y / ${T};\n\n            int yOffset = bIdx * ${T} * ${nHeads} + headIdx * ${T};\n\n            float res = 0.0;\n            for (int i = 0; i <= tIdxY; i++) {\n                float sm = texelFetch(attnMatrixSoftmax, ivec2(i, yOffset + tIdxY), 0).r;\n                float v = texelFetch(qkvOutput, ivec2(aIdx, yOffset + i), 0).b;\n                res += sm * v;\n            }\n\n            scaledVectors = res;\n        }\n    `);\n\n    if (!qkvProg || !selfAttendProg || !attnMatrixAggProg || !attnMatrixSoftmaxProg || !scaledVectorsProg) {\n        throw new Error(\"Failed to create shader program\");\n    }\n\n    let qkvPhase = createRenderPhase(gl, qkvProg, [qkvOutput], [input, qkvWeight, qkvBias], ['attnInput', 'qkvWeight', 'qkvBias']);\n    let selfAttendPhase = createRenderPhase(gl, selfAttendProg, [attnMatrix], [qkvOutput], ['qkvOutput']);\n    let attnMatrixAggPhase = createRenderPhase(gl, attnMatrixAggProg, [attnMatrixAgg], [attnMatrix], ['attnMatrix']);\n    let attnMatrixSoftmaxPhase = createRenderPhase(gl, attnMatrixSoftmaxProg, [attnMatrixSoftmax], [attnMatrix, attnMatrixAgg], ['attnMatrix', 'attnMatrixAgg']); // Could skip?\n    let scaledVectorsPhase = createRenderPhase(gl, scaledVectorsProg, [scaledVectors], [qkvOutput, attnMatrixSoftmax], ['qkvOutput', 'attnMatrixSoftmax']);\n    let proj = createLinearLayer(layerBuilder, prefix + '.c_proj', C, C, scaledVectors);\n    let add = createAddLayer(layerBuilder, proj.output, residual);\n\n    return {\n        qkvWeight,\n        qkvBias,\n        qkvOutput,\n        attnMatrix,\n        attnMatrixAgg,\n        attnMatrixSoftmax,\n        scaledVectors,\n        qkvPhase,\n        selfAttendPhase,\n        attnMatrixAggPhase,\n        attnMatrixSoftmaxPhase,\n        scaledVectorsPhase,\n        proj,\n        add,\n        output: add.output,\n    };\n}\n\nexport interface IGpuMlpLayer extends IMlpLayerLink {\n    fcLayer: IGpuLinearLayer;\n    geluPhase: IRenderPhase;\n    projLayer: IGpuLinearLayer;\n    addLayer: IGpuAddLayer;\n}\n\nfunction createMLP(layerBuilder: ILayerBuilder, prefix: string, input: IBufferTex, residual: IBufferTex): IGpuMlpLayer {\n    let { gl, shape: { B, T, C }, shaderManager } = layerBuilder;\n\n    // operating memory\n    let mlpGelu = createBufferTex(gl, C * 4, B * T, 1); // (B, T) (4C)\n\n    let geluProg = createShaderProgram(shaderManager, 'mlpGelu', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D geluInput;  // (B, T) (C * 4)\n        out float geluOutput; // (B, T) (C * 4)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            float x = texelFetch(geluInput, pos, 0).r;\n            geluOutput = x * 0.5 * (1.0 + tanh(sqrt(2.0 / 3.14159265358) * (x + 0.044715 * x * x * x)));\n        }\n    `)!;\n\n    let fcLayer = createLinearLayer(layerBuilder, prefix + '.c_fc', C, C * 4, input);\n    let geluPhase = createRenderPhase(gl, geluProg, [mlpGelu], [fcLayer.output], ['geluInput']);\n    let projLayer = createLinearLayer(layerBuilder, prefix + '.c_proj', C * 4, C, mlpGelu);\n    let addLayer = createAddLayer(layerBuilder, projLayer.output, residual);\n\n    return {\n        fcLayer,\n        mlpGelu,\n        geluPhase,\n        projLayer,\n        addLayer,\n        output: addLayer.output,\n    };\n}\n\nexport interface IGpuLayerNormLayer extends ILayerNormLayerLink {\n    aggPhase: IRenderPhase;\n    applyPhase: IRenderPhase;\n}\n\nfunction createLayerNorm(layerBuilder: ILayerBuilder, layerPrefix: string, input: IBufferTex): IGpuLayerNormLayer {\n    let { gl, model, shape: { B, T, C }, shaderManager } = layerBuilder;\n\n    let tWeight = model[layerPrefix + '.weight'];\n    let tBias = model[layerPrefix + '.bias'];\n\n    // weights\n    let normWeight = createBufferTex(gl, 1, C, 1); // (C) (1)\n    let normBias   = createBufferTex(gl, 1, C, 1); // (C) (1)\n\n    // operating memory\n    let normAgg = createBufferTex(gl, 1, B * T, 2); // (B, T) (1) [2]\n    let output  = createBufferTex(gl, C, B * T, 1); // (B, T) (C)\n\n    writeToBufferTex(gl, normWeight, tWeight.toFloat32Array());\n    writeToBufferTex(gl, normBias, tBias.toFloat32Array());\n\n    let normEps = 1e-5;\n\n    let normAggProg = createShaderProgram(shaderManager, 'normAgg', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D normInput; // (B, T) (C)\n        out vec2 normAgg;            // (B, T) (1) [2]\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            // Use Welford's algorithm to compute mean and variance\n            float mean = 0.0;\n            float M2 = 0.0;\n            for (int i = 0; i < ${C}; i++) {\n                float x = texelFetch(normInput, ivec2(i, pos.y), 0).r;\n                float delta = x - mean;\n                mean += delta / float(i + 1);\n                M2 += delta * (x - mean);\n            }\n\n            normAgg = vec2(mean, 1.0 / sqrt(M2 / float(${C}) + ${normEps}));\n        }\n    `)!;\n\n    let normApply = createShaderProgram(shaderManager, 'normApply', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D normInput;  // (B, T) (C)\n        uniform sampler2D normAgg;    // (B, T) (1) [2]\n        uniform sampler2D normWeight; // (C)    (1)\n        uniform sampler2D normBias;   // (C)    (1)\n        out float normOutput;         // (B, T) (C)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            vec2 agg = texelFetch(normAgg, ivec2(0, pos.y), 0).rg;\n            float mean = agg.r;\n            float stdInv = agg.g;\n\n            float x = texelFetch(normInput, pos, 0).r;\n\n            float weight = texelFetch(normWeight, ivec2(0, pos.x), 0).r;\n            float bias   = texelFetch(normBias,   ivec2(0, pos.x), 0).r;\n\n            normOutput = (x - mean) * stdInv * weight + bias;\n        }\n    `)!;\n\n    let aggPhase = createRenderPhase(gl, normAggProg, [normAgg], [input], ['normInput']);\n    let applyPhase = createRenderPhase(gl, normApply, [output],\n        [input, normAgg, normWeight, normBias],\n        ['normInput', 'normAgg', 'normWeight', 'normBias']);\n\n    return {\n        normAgg,\n        normWeight,\n        normBias,\n        aggPhase,\n        applyPhase,\n        output,\n    };\n}\n\n\nexport interface IGpuLinearLayer extends ILinearLayerLink {\n    linearPhase: IRenderPhase;\n}\n\nfunction createLinearLayer(layerBuilder: ILayerBuilder, prefix: string, nIn: number, nOut: number, input: IBufferTex, residual?: IBufferTex, bias?: boolean): IGpuLinearLayer {\n    let { gl, model, shape: { B, T }, shaderManager } = layerBuilder;\n\n    bias = bias ?? true;\n\n    let tWeight = model[prefix + '.weight'];\n    let tBias = bias ? model[prefix + '.bias'] : null;\n\n    // weights\n    let linearWeight = createBufferTex(gl, nIn, nOut, 1); // (nOut) (nIn)\n    let linearBias   = bias ? createBufferTex(gl, 1, nOut, 1) : null; // (nOut) (1)\n\n    // operating memory\n    let output = createBufferTex(gl, nOut, B * T, 1); // (B, T) (nOut)\n\n    writeToBufferTex(gl, linearWeight, tWeight.buffer);\n    tBias && linearBias && writeToBufferTex(gl, linearBias, tBias.buffer);\n\n    let linearProg = createShaderProgram(shaderManager, 'linear', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;          //    y     x\n        uniform sampler2D linearInput;  // (B, T) (nIn)\n        uniform sampler2D linearWeight; // (nOut) (nIn)\n        ${bias ? 'uniform sampler2D linearBias;' : ''}   // (nOut) (1)\n        ${residual ? 'uniform sampler2D linearResidual;' : ''}\n        out float linearOutput;         // (B, T) (nOut)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            float res = ${bias ? 'texelFetch(linearBias, ivec2(0, pos.x), 0).r' : '0.0'};\n            for (int i = 0; i < ${nIn}; i++) {\n                float x = texelFetch(linearInput, ivec2(i, pos.y), 0).r;\n                float w = texelFetch(linearWeight, ivec2(i, pos.x), 0).r;\n                res += x * w;\n            }\n\n            ${residual ? 'res += texelFetch(linearResidual, pos, 0).r;' : ''}\n            linearOutput = res;\n        }\n    `)!;\n\n    let linearPhase = createRenderPhase(gl, linearProg, [output],\n        [input, linearWeight, linearBias, residual].filter(nonNil),\n        ['linearInput', 'linearWeight', bias ? 'linearBias' : null, residual ? 'linearResidual' : null].filter(nonNil));\n\n    return {\n        weight: linearWeight,\n        bias: linearBias,\n        linearPhase,\n        output,\n    };\n}\n\nexport interface IGpuEmbeddingLayer extends IEmbedLayerLink {\n    phase: IRenderPhase;\n}\n\nfunction createEmbeddingLayer(layerBuilder: ILayerBuilder, prefix: string, nEmbed: number, nDims: number, input: IBufferTex): IGpuEmbeddingLayer {\n    let { gl, model, shape: { B, T }, shaderManager } = layerBuilder;\n\n    let tWeight = model[prefix + '.weight'];\n\n    // weights\n    let weight = createBufferTex(gl, nDims, nEmbed, 1); // (nEmbed) (nDims)\n\n    // operating memory\n    let output = createBufferTex(gl, nDims, B * T, 1); // (B, T) (nDims)\n\n    writeToBufferTex(gl, weight, tWeight.buffer);\n\n    let embedProg = createShaderProgram(shaderManager, 'embed', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;          //    y     x\n        uniform sampler2D embedInput;  // (B, T)   (1)\n        uniform sampler2D embedWeight; // (nEmbed) (nDims)\n        out float embedOutput;         // (B, T)   (nDims)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            int y = int(texelFetch(embedInput, ivec2(0, pos.y), 0).r);\n            float res = texelFetch(embedWeight, ivec2(pos.x, y), 0).r;\n\n            embedOutput = res;\n        }\n    `)!;\n\n    let phase = createRenderPhase(gl, embedProg, [output], [input, weight], ['embedInput', 'embedWeight']);\n\n    return {\n        weight,\n        phase,\n        output,\n    };\n}\n\nexport interface IGpuAddLayer extends IAddLayerLink {\n    addPhase: IRenderPhase;\n}\n\nfunction createAddLayer(layerBuilder: ILayerBuilder, inputA: IBufferTex, inputB: IBufferTex): IGpuAddLayer {\n    let { gl, shape: { B, T, C }, shaderManager } = layerBuilder;\n\n    // operating memory\n    let output = createBufferTex(gl, C, B * T, 1); // (B, T) (C)\n\n    let addProg = createShaderProgram(shaderManager, 'add', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;     //    y    x\n        uniform sampler2D inputA;  // (B, T) (C)\n        uniform sampler2D inputB;  // (B, T) (C)\n        out float addOutput;       // (B, T) (C)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            float a = texelFetch(inputA, pos, 0).r;\n            float b = texelFetch(inputB, pos, 0).r;\n            addOutput = a + b;\n        }\n    `)!;\n\n    let addPhase = createRenderPhase(gl, addProg, [output], [inputA, inputB], ['inputA', 'inputB']);\n\n    return {\n        addPhase,\n        output,\n    };\n}\n\nexport interface IGpuSoftmaxLayer extends ISoftmaxLayerLink {\n    bufs: IBufferTex[];\n    progs: IProgram[];\n    phases: IRenderPhase[];\n    aggPhase: IRenderPhase;\n    softmaxPhase: IRenderPhase;\n}\n\nfunction createSoftmaxLayer(layerBuilder: ILayerBuilder, input: IBufferTex): IGpuSoftmaxLayer {\n    let { gl, shape: { B, T, C, vocabSize }, shaderManager } = layerBuilder;\n\n    // operating memory\n    let agg    = createBufferTex(gl,         1, B * T, 2);\n    let output = createBufferTex(gl, vocabSize, B * T, 1);\n\n    let softmaxAggProg = createShaderProgram(shaderManager, 'softmaxAgg', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;       //    y      x\n        uniform sampler2D smInput;   // (B, T) (nVocab)\n        out vec2 smAgg;              // (B)    (nVocab) [2]\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int tIdxY = pos.y % ${T};\n\n            // Pass 1 finds the max\n            float m = 0.0;\n            for (int i = 0; i < ${vocabSize}; i++) {\n                float p = texelFetch(smInput, ivec2(i, pos.y), 0).r;\n                m = max(m, p);\n            }\n\n            // Pass 2 finds the exp sum (shifted by max)\n            float a = 0.0;\n            for (int i = 0; i < ${vocabSize}; i++) {\n                float p = texelFetch(smInput, ivec2(i, pos.y), 0).r;\n                a += exp(p - m);\n            }\n\n            // Store sufficient information to compute/apply the softmax\n            smAgg = vec2(1.0 / a, m);\n        }\n    `)!;\n\n    let softmaxProg = createShaderProgram(shaderManager, 'softmax', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D smInput;    // (B, T) (nVocab)\n        uniform sampler2D smAgg;      // (B)    (nVocab) [2]\n        out float smOutput;           // (B, T) (nVocab)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n            int tIdxX = pos.x;\n            int tIdxY = pos.y % ${T};\n\n            vec2 agg = texelFetch(smAgg, ivec2(0, pos.y), 0).rg;\n            float expSumInv = agg.r;\n            float maxVal = agg.g;\n\n            float p = texelFetch(smInput, pos, 0).r;\n            smOutput = exp(p - maxVal) * expSumInv;\n        }\n    `)!;\n\n    let aggPhase = createRenderPhase(gl, softmaxAggProg, [agg], [input], ['smInput']);\n    let softmaxPhase = createRenderPhase(gl, softmaxProg, [output], [input, agg], ['smInput', 'smAgg']);\n\n    return {\n        bufs: [agg, output],\n        progs: [softmaxAggProg, softmaxProg],\n        phases: [aggPhase, softmaxPhase],\n        agg,\n        aggPhase,\n        softmaxPhase,\n        output,\n    };\n}\n\nfunction createCopyOutputToInputLayer(layerBuilder: ILayerBuilder, prevOutput: IBufferTex, currInput: IBufferTex) {\n    let { gl, shape: { T, vocabSize }, shaderManager } = layerBuilder;\n\n    let copyProg = createShaderProgram(shaderManager, 'copy', basicVertexShader, /*glsl*/`#version 300 es\n        precision highp float;         //    y    x\n        uniform sampler2D prevOutput;  // (B, T) (n_vocab)\n        uniform int u_targetTIdx;\n        out float currInput;           // (B, T) (1)\n\n        void main() {\n            ivec2 pos = ivec2(gl_FragCoord.xy);\n\n            int tIdx = pos.y % ${T};\n\n            if (tIdx != u_targetTIdx) {\n                discard;\n            }\n\n            int maxVocabI = 0;\n            float maxVocabP = 0.0;\n            for (int i = 0; i < ${vocabSize}; i++) {\n                float p = texelFetch(prevOutput, ivec2(i, pos.y), 0).r;\n                if (p > maxVocabP) {\n                    maxVocabP = p;\n                    maxVocabI = i;\n                }\n            }\n\n            currInput = float(maxVocabI);\n        }\n    `)!;\n\n    let copyPhase = createRenderPhase(gl, copyProg, [currInput], [prevOutput], ['prevOutput']);\n\n    return {\n        copyPhase,\n    };\n}\n","import { clamp } from \"./data\";\n\nfunction xmur3(str: string) {\n    for(var i = 0, h = 1779033703 ^ str.length; i < str.length; i++)\n        h = Math.imul(h ^ str.charCodeAt(i), 3432918353),\n        h = h << 13 | h >>> 19;\n    return function() {\n        h = Math.imul(h ^ h >>> 16, 2246822507),\n        h = Math.imul(h ^ h >>> 13, 3266489909);\n        return (h ^= h >>> 16) >>> 0;\n    }\n}\n\nfunction sfc32(a: number, b: number, c: number, d: number) {\n    return function() {\n      a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0;\n      var t = (a + b) | 0;\n      a = b ^ b >>> 9;\n      b = c + (c << 3) | 0;\n      c = (c << 21 | c >>> 11);\n      d = d + 1 | 0;\n      t = t + d | 0;\n      c = c + t | 0;\n      return (t >>> 0) / 4294967296;\n    }\n}\n\nexport type UniformDistGenerator = () => number;\n\nfunction randomGen(seed?: string): UniformDistGenerator {\n    let seeder = xmur3(seed ?? Math.random().toString());\n    return sfc32(seeder(), seeder(), seeder(), seeder());\n}\n\nexport class Random {\n    constructor(seed?: number) {\n        this.random = randomGen(seed?.toString());\n    }\n\n    random: UniformDistGenerator;\n\n    normal = () => {\n        let x = this.random();\n        let y = this.random();\n        return Math.sqrt(-2 * Math.log(x)) * Math.cos(2 * Math.PI * y);\n    }\n\n    randint(min: number, max: number): number {\n        return clamp(Math.floor(this.random() * (max - min) + min), min, max - 1);\n    }\n}\n\n","import { base64ToArrayBuffer } from \"./data\";\n\nexport interface ITensorJson {\n    shape: number[];\n    dtype: string; // 'torch.float32', 'torch.int32', etc\n    data: string // base64 encoded (using python's base64.b64encode)\n}\n\n// more gpt related than tensor related\nexport type ITensorSet = Record<string, TensorF32> & { 'config': IGptModelConfig };\n\nexport interface IGptModelConfig {\n    model_type: string;\n    n_layer: number;\n    n_head: number;\n    n_embd: number;\n\n    vocab_size: number;\n    block_size: number;\n\n    B?: number;\n}\n\n// Just support float32 for now, cuz we're lazy\nexport class TensorF32 {\n    isContiguous: boolean;\n    constructor(\n        public readonly shape: number[],\n        public readonly buffer: Float32Array,\n        public readonly stride: number[] = [],\n    ) {\n        let totalEls = shape.reduce((a, b) => a * b, 1);\n        if (totalEls > buffer.length) {\n            throw new Error(`Shape ${shape.join(', ')} requires ${totalEls} buffer, but buffer has size ${buffer.length}`);\n        }\n\n        let strideContiguous = new Array(shape.length);\n        let s = 1;\n        for (let i = shape.length - 1; i >= 0; i--) {\n            strideContiguous[i] = s;\n            s *= shape[i];\n        }\n\n        if (stride.length === 0) {\n            this.stride = strideContiguous;\n        } else if (stride.length !== shape.length) {\n            throw new Error(`Stride length ${stride.length} does not match shape length ${shape.length}`);\n        }\n\n        this.isContiguous = true;\n        for (let i = 0; i < stride.length; i++) {\n            if (stride[i] !== strideContiguous[i]) {\n                this.isContiguous = false;\n                break;\n            }\n        }\n    }\n\n    view(shape: number[]) {\n        let size = shape.reduce((a, b) => a * b, 1);\n        let existingSize = this.shape.reduce((a, b) => a * b, 1);\n        if (size !== existingSize) {\n            throw new Error(`Invalid reshape: new size ${size} (${shape.join(', ')}) does not match existing size ${existingSize} (${this.shape.join(', ')})`);\n        }\n        if (!this.isContiguous) {\n            throw new Error(`Cannot view non-contiguous tensor (or at least, there are potential cases where it would work, but we don't support them yet)`);\n        }\n        return new TensorF32(shape, this.buffer);\n    }\n\n    transpose(a: number, b: number) {\n        if (a < 0 || a >= this.shape.length || b < 0 || b >= this.shape.length || a === b) {\n            throw new Error(`Invalid transpose indices: ${a}, ${b} over shape ${this.shape.join(', ')}`);\n        }\n        let shape = [...this.shape];\n        let stride = [...this.stride];\n        let temp = shape[a]; shape[a] = shape[b]; shape[b] = temp;\n        let temp2 = stride[a]; stride[a] = stride[b]; stride[b] = temp2;\n        return new TensorF32(shape, this.buffer, stride);\n    }\n\n    permute(...axes: number[]) {\n        let setItems = new Set(new Array(this.shape.length).fill(0).map((_, i) => i));\n        axes.forEach(a => setItems.delete(a));\n        if (axes.length !== this.shape.length || setItems.size !== 0) {\n            throw new Error(`Invalid permute axes: ${axes.join(', ')} over shape ${this.shape.join(', ')}`);\n        }\n\n        let shape = axes.map(a => this.shape[a]);\n        let stride = axes.map(a => this.stride[a]);\n        return new TensorF32(shape, this.buffer, stride);\n    }\n\n    g(index: number[]) {\n        return this.buffer[this.indexToOffset(index)];\n    }\n\n    s(index: number[], a: number) {\n        this.buffer[this.indexToOffset(index)] = a;\n    }\n\n    indexToOffset(index: number[]) {\n        if (index.length !== this.shape.length) {\n            throw new Error(`Index length ${index.length} does not match shape length ${this.shape.length}`);\n        }\n        let offset = 0;\n        for (let i = 0; i < index.length; i++) {\n            if (index[i] >= this.shape[i]) {\n                throw new Error(`Index ${index[i]} out of bounds for shape ${this.shape[i]}`);\n            }\n            offset += index[i] * this.stride[i];\n        }\n        return offset;\n    }\n\n    *indexIterator(): Generator<number[]> {\n        // returns an iterator that returns the index of each element, where the index is an array\n        let index = new Array(this.shape.length).fill(0);\n        while (true) {\n            yield index;\n            let i = this.shape.length - 1;\n            while (i >= 0) {\n                index[i]++;\n                if (index[i] < this.shape[i]) {\n                    break;\n                }\n                index[i] = 0;\n                i--;\n            }\n            if (i < 0) {\n                break;\n            }\n        }\n    }\n\n    contiguous() {\n        if (this.isContiguous) {\n            return this;\n        }\n        return new TensorF32(this.shape, this.toFloat32Array());\n    }\n\n    // always returns a copy of a contiguous array\n    toFloat32Array() {\n        let size = this.shape.reduce((a, b) => a * b, 1);\n        let array = new Float32Array(size);\n\n        if (this.isContiguous) {\n            array.set(this.buffer);\n        } else {\n            let index = new Array(this.shape.length).fill(0);\n            let destIdx = 0;\n            let offset = 0;\n            while (true) {\n                array[destIdx++] = this.buffer[offset];\n                let i = this.shape.length - 1;\n                while (i >= 0) {\n                    index[i]++;\n                    offset += this.stride[i];\n                    if (index[i] < this.shape[i]) {\n                        break;\n                    }\n                    offset -= index[i] * this.stride[i];\n                    index[i] = 0;\n                    i--;\n                }\n                if (i < 0) {\n                    break;\n                }\n            }\n        }\n        return array;\n    }\n\n    static fromJson(obj: ITensorJson) {\n        if (!obj.shape || !obj.dtype || !obj.data) {\n            console.error('Invalid tensor json', obj);\n            throw new Error('Invalid tensor json');\n        }\n        if (obj.dtype !== 'torch.float32') {\n            console.error('Invalid tensor dtype', obj);\n            throw new Error('Invalid tensor dtype');\n        }\n        let buf = base64ToArrayBuffer(obj.data);\n        let array = new Float32Array(buf);\n        return new TensorF32(obj.shape, array);\n    }\n\n    copyFrom(source: TensorF32) {\n        if (source.shape.length !== this.shape.length || !source.contiguous || !this.contiguous) {\n            throw new Error(`Invalid copy: source shape length ${source.shape.length} does not match target shape length ${this.shape.length}`);\n        }\n        for (let i = 0; i < this.shape.length; i++) {\n            if (source.shape[i] !== this.shape[i]) {\n                throw new Error(`Invalid copy: source shape ${source.shape[i]} does not match target shape ${this.shape[i]}`);\n            }\n        }\n        this.buffer.set(source.buffer);\n    }\n}\n\nfunction test() {\n    let tensor = new TensorF32([2, 3], new Float32Array([1, 2, 3, 4, 5, 6]));\n\n    // expected output: [0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2]\n    for (let index of tensor.indexIterator()) {\n        console.log(index, tensor.g(index));\n    }\n}\n\n// test();\n","import { Vec3 } from \"./vector\";\n\n/* Cubic bezier curve defined by 4 control points.  */\n\nexport function bezierCubic(p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3, t: number) {\n    let t2 = t * t;\n    let t3 = t2 * t;\n\n    let mt = 1 - t;\n    let mt2 = mt * mt;\n    let mt3 = mt2 * mt;\n\n    let a = mt3;\n    let b = 3 * mt2 * t;\n    let c = 3 * mt * t2;\n    let d = t3;\n\n    return new Vec3(\n        a * p0.x + b * p1.x + c * p2.x + d * p3.x,\n        a * p0.y + b * p1.y + c * p2.y + d * p3.y,\n        a * p0.z + b * p1.z + c * p2.z + d * p3.z,\n    );\n}\n\nexport function bezierCubicMid(p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3) {\n    // t = 0.5\n    return new Vec3(\n        0.125 * (p0.x + p3.x) + 0.375 * (p1.x + p2.x),\n        0.125 * (p0.y + p3.y) + 0.375 * (p1.y + p2.y),\n        0.125 * (p0.z + p3.z) + 0.375 * (p1.z + p2.z),\n    );\n}\n\nexport interface IBezierQueueItem {\n    p0: Vec3;\n    p1: Vec3;\n    p2: Vec3;\n    p3: Vec3;\n}\n\nlet _cacheRes = new Float32Array(1024 * 3);\n\nexport function bezierCurveBuild(p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3, threshold: number) {\n    let res = _cacheRes;\n    let resOff = 0;\n\n    let queue: IBezierQueueItem[] = [];\n    function push(p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3) {\n        queue.push({ p0, p1, p2, p3 });\n    }\n    push(p0, p1, p2, p3);\n    p3.writeToBuf(res, resOff);\n    resOff += 3;\n    let iter = 0;\n\n    while (queue.length > 0) {\n        let { p0, p1, p2, p3 } = queue.pop()!;\n        // let mid = bezierCubicMid(p0, p1, p2, p3);\n        // // dist from midpoint to the line between p0 and p3 (using projection)\n        // let v = p3.sub(p0);\n        // let w = mid.sub(p0);\n        // let a = v.dot(w) / v.dot(v);\n        // let dist = w.mulAdd(v, -a).len();\n        // let ratio = dist / v.len();\n\n        let q0 = p0.mid(p1);\n        let q1 = p1.mid(p2);\n        let q2 = p2.mid(p3);\n        let r0 = q0.mid(q1);\n        let r1 = q1.mid(q2);\n        let s0 = r0.mid(r1); // = mid\n\n        let d03 = p3.sub(p0);\n        let d31 = p1.sub(p3);\n        let d32 = p2.sub(p3);\n        let d2a = Math.abs(d31.y * d03.z - d31.z * d03.y);\n        let d2b = Math.abs(d32.y * d03.z - d32.z * d03.y);\n\n        let needsSubdivion = ((d2a + d2b) * (d2a + d2b) > threshold * d03.lenSq());\n\n        // let len = p1.distSq(mid);\n        if (needsSubdivion) {\n            push(p0, q0, r0, s0);\n            push(s0, r1, q2, p3);\n        } else {\n            if (resOff + 6 > res.length) {\n                let newRes = new Float32Array(res.length * 2);\n                newRes.set(res);\n                res = newRes;\n            }\n            p0.writeToBuf(res, resOff);\n            resOff += 3;\n        }\n        iter++;\n    }\n\n    _cacheRes = res;\n    return res.slice(0, resOff);\n}\n\nexport function bezierBoundingBoxCoarse(p0: Vec3, p1: Vec3, p2: Vec3, p3: Vec3) {\n    let min = new Vec3(\n        Math.min(p0.x, p1.x, p2.x, p3.x),\n        Math.min(p0.y, p1.y, p2.y, p3.y),\n        Math.min(p0.z, p1.z, p2.z, p3.z),\n    );\n    let max = new Vec3(\n        Math.max(p0.x, p1.x, p2.x, p3.x),\n        Math.max(p0.y, p1.y, p2.y, p3.y),\n        Math.max(p0.z, p1.z, p2.z, p3.z),\n    );\n    return { min, max };\n}\n\n","\n/* Arrow Design:\n\nThis is a flat, rectangular, ribbon-like pathway with lines down the edges.\n\nIt has a defined width. The ribbon might have some motion animation when I write the shader for it.\n\nThe sides will have lines to border the transparent ribbon.\n\nWe define a start, end, width, and \"normal\". The normal is perpendicular to the direction of the arrow,\nand the normal lies within all parts of the ribbon.\n\nThe ribbon can bend, subject to the normal. The ribbon always starts in-plane. We'll have to do some\ncurve generation to make the ribbon bend. (this probably requires a 3rd degree bezier curve)\n\nThe arrow head is fairly flat, and is a triangle. We define the depth of the arrow head, and the\nwidth. Not sure if the width should be a constant, or proportional to the width/length of the arrow.\n\nArrows will also have padding between blocks.\n\nSome special arrows bend at the start in the plane of the ribbon, where they diverge from a vertical arrow.\n\nThis should be able to be implemented just with lines & tris. Depth buf will be interesting.\n*/\n\nimport { IBlkDef, IGptModelLayout } from \"../GptModelLayout\";\nimport { addLine, drawLineSegs, ILineOpts, makeLineOpts } from \"../render/lineRender\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { addPrimitiveRestart, addQuad, addVert } from \"../render/triRender\";\nimport { bezierCurveBuild } from \"@/src/utils/bezier\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Vec3, Vec3Buf, Vec4 } from \"@/src/utils/vector\";\n\nexport function drawAllArrows(state: IRenderState, layout: IGptModelLayout) {\n\n    let pad = 2.0;\n    let prevResid = layout.residual0;\n    let residWidth = 6;\n    let weightColor = Vec4.fromHexColor('#3333aa');\n    let dataColor = Vec4.fromHexColor('#33aa33');\n\n    drawVertArrow(layout.idxObj, layout.residual0);\n    drawHorizArrow(layout.tokEmbedObj, layout.residual0);\n    drawArrowBetween(layout.posEmbedObj, BlockPos.Left, layout.residual0, BlockPos.Right);\n\n    for (let i = 0; i < 3; i++) { //layout.blocks.length; i++) {\n        let block = layout.blocks[i];\n        drawVertArrow(prevResid, block.attnResidual);\n        drawArrowResidSplit(prevResid, block.ln1.lnResid);\n        drawArrowResidSplit(prevResid, block.ln1.lnAgg2, 2);\n        drawVertArrow(block.ln1.lnAgg2, block.ln1.lnResid, 2);\n\n        // let headIdx = 0;\n        for (let head of block.heads) {\n            drawArrowBetween(block.ln1.lnResid, BlockPos.Left, head.qBlock, BlockPos.Right);\n            drawArrowBetween(block.ln1.lnResid, BlockPos.Left, head.kBlock, BlockPos.Right);\n            drawArrowBetween(block.ln1.lnResid, BlockPos.Left, head.vBlock, BlockPos.Right);\n\n            drawHorizArrow(head.qBiasBlock, head.qWeightBlock);\n            drawHorizArrow(head.kBiasBlock, head.kWeightBlock);\n            drawHorizArrow(head.vBiasBlock, head.vWeightBlock);\n\n            drawHorizArrow(head.qWeightBlock, head.qBlock);\n            drawHorizArrow(head.kWeightBlock, head.kBlock);\n            drawHorizArrow(head.vWeightBlock, head.vBlock);\n\n            drawArrowBotToSide(head.qBlock, head.attnMtx, 0, undefined, head.qBlock.y !== head.kBlock.y);\n            drawArrowBotToSide(head.kBlock, head.attnMtx, 0, undefined, head.kBlock.y !== head.qBlock.y);\n            drawArrowBotToSide(head.vBlock, head.vOutBlock, 0, undefined, head.vBlock.y !== head.kBlock.y);\n\n            drawArrowBetween(head.attnMtx, BlockPos.Left, head.attnMtxAgg2, BlockPos.Right);\n            drawArrowBetween(head.attnMtxAgg1, BlockPos.Left, head.attnMtxSm, BlockPos.Right);\n            drawArrowBetween(head.attnMtxSm, BlockPos.Bot, head.vOutBlock, BlockPos.Left);\n\n            drawArrowBetween(head.vOutBlock, BlockPos.Bot, block.attnOut, BlockPos.Top);\n            // drawArrowBotToSide(head.vOutBlock, block.attnOut, headIdx * head.vOutBlock.cy, undefined, true);\n            // headIdx += 1;\n        }\n\n        drawVertArrow(block.attnResidual, block.mlpResidual);\n        drawHorizArrow(block.attnOut, block.attnResidual);\n\n        drawHorizArrow(block.projBias, block.projWeight);\n        drawHorizArrow(block.projWeight, block.attnOut);\n\n        drawHorizArrow(block.ln1.lnMu, block.ln1.lnSigma);\n        drawHorizArrow(block.ln1.lnSigma, block.ln1.lnResid);\n\n        drawArrowResidSplit(block.attnResidual, block.ln2.lnAgg2, 2);\n        drawVertArrow(block.ln2.lnAgg2, block.ln2.lnResid, 2);\n        drawHorizArrow(block.ln2.lnMu, block.ln2.lnSigma);\n        drawHorizArrow(block.ln2.lnSigma, block.ln2.lnResid);\n\n        drawArrowResidSplit(block.attnResidual, block.ln2.lnResid);\n        drawArrowBetween(block.ln2.lnResid, BlockPos.Bot, block.mlpFc, BlockPos.Right);\n\n        drawVertArrow(block.mlpFcBias, block.mlpFcWeight);\n        drawVertArrow(block.mlpFcWeight, block.mlpFc, 12);\n        drawVertArrow(block.mlpFc, block.mlpAct, 12);\n        drawHorizArrow(block.mlpProjBias, block.mlpProjWeight);\n        drawHorizArrow(block.mlpProjWeight, block.mlpResult);\n        drawHorizArrow(block.mlpResult, block.mlpResidual);\n        drawArrowBetween(block.mlpAct, BlockPos.Right, block.mlpResult, BlockPos.Top);\n\n        prevResid = block.mlpResidual;\n    }\n\n    drawArrowResidSplit(prevResid, layout.ln_f.lnAgg2, 2);\n    drawArrowBetween(prevResid, BlockPos.Bot, layout.ln_f.lnResid, BlockPos.Right);\n    drawVertArrow(layout.ln_f.lnAgg2, layout.ln_f.lnResid);\n    drawHorizArrow(layout.ln_f.lnMu, layout.ln_f.lnSigma);\n    drawHorizArrow(layout.ln_f.lnSigma, layout.ln_f.lnResid);\n\n    if (layout.logitsTransposed) {\n        drawArrowBetween(layout.ln_f.lnResid, BlockPos.Bot, layout.logits, BlockPos.Right);\n        drawVertArrow(layout.lmHeadWeight, layout.logits);\n\n        drawVertArrow(layout.logits, layout.logitsSoftmax);\n        drawHorizArrow(layout.logits, layout.logitsAgg1, 2);\n        drawArrowBetween(layout.logitsAgg2, BlockPos.Bot, layout.logitsSoftmax, BlockPos.Right, 2);\n    } else {\n        drawVertArrow(layout.ln_f.lnResid, layout.logits);\n        drawHorizArrow(layout.lmHeadWeight, layout.logits);\n        drawVertArrow(layout.logits, layout.logitsAgg2);\n        drawVertArrow(layout.logitsAgg1, layout.logitsSoftmax);\n    }\n\n    function blkColor(src: IBlkDef) {\n        return src.t === 'w' ? weightColor : dataColor;\n    }\n\n    function drawVertArrow(src: IBlkDef, dest: IBlkDef, width: number = 6) {\n        drawArrowBetween(src, BlockPos.Bot, dest, BlockPos.Top, width);\n    }\n\n    function drawHorizArrow(src: IBlkDef, dest: IBlkDef, width: number = 6) {\n        drawArrowBetween(src, BlockPos.Right, dest, BlockPos.Left, width);\n    }\n\n    function blockPos(block: IBlkDef, pos: BlockPos) {\n        let z = block.z + block.dz / 2;\n        switch (pos) {\n            case BlockPos.Left: return new Vec3(block.x - pad, block.y + block.dy / 2, z);\n            case BlockPos.Right: return new Vec3(block.x + block.dx + pad, block.y + block.dy / 2, z);\n            case BlockPos.Top: return new Vec3(block.x + block.dx / 2, block.y - pad, z);\n            case BlockPos.Bot: return new Vec3(block.x + block.dx / 2, block.y + block.dy + pad, z);\n        }\n    }\n\n    function drawArrowResidSplit(src: IBlkDef, dest: IBlkDef, width: number = 6) {\n        let start = blockPos(src, BlockPos.Bot);\n        let end = blockPos(dest, BlockPos.Right);\n\n        let opacity = Math.min(src.opacity, dest.opacity);\n        if (opacity === 0) {\n            return;\n        }\n\n        let normal = new Vec3(0, 0, 1);\n        let color = blkColor(src).mul(opacity);\n\n        let mid1 = new Vec3(start.x - residWidth / 2, end.y);\n        drawArrow(state, mid1, end, width, normal, color, true);\n    }\n\n    function drawArrowBotToSide(src: IBlkDef, dest: IBlkDef, offset: number, width: number = 6, forceOffset: boolean = false) {\n        let start = blockPos(src, BlockPos.Bot);\n        let left = start.z > dest.z + dest.dz / 2;\n        let end = new Vec3(dest.x + dest.dx / 2, dest.y + layout.cell * (offset + 0.5), left ? dest.z + dest.dz / 2 + pad : dest.z - pad);\n\n        let opacity = Math.min(src.opacity, dest.opacity);\n        if (opacity === 0) {\n            return;\n        }\n\n\n        let normal = new Vec3(0, 0, 1);\n        let color = blkColor(src).mul(opacity);\n        let endDir = new Vec3(0, 0, left ? -1 : 1);\n\n        let areClose = Math.abs(start.z - (dest.z + dest.dz / 2)) < 1.0;\n        if (areClose && !forceOffset) {\n            endDir = undefined!;\n            end = blockPos(dest, BlockPos.Top);\n        }\n\n        drawArrow(state, start, end, width, normal, color, true, CornerMode.None, endDir);\n    }\n    function drawArrowBetween(src: IBlkDef, srcPos: BlockPos, dest: IBlkDef, destPos: BlockPos, width: number = 6) {\n        let start = blockPos(src, srcPos);\n        let end = blockPos(dest, destPos);\n\n        let opacity = Math.min(src.opacity, dest.opacity);\n        if (opacity === 0) {\n            return;\n        }\n\n        let normal = new Vec3(0, 0, 1);\n        let color = blkColor(src).mul(opacity);\n\n        if (srcPos === BlockPos.Left && destPos === BlockPos.Right) {\n            start.y = end.y;\n        }\n\n        if (srcPos === BlockPos.Right && destPos === BlockPos.Top) {\n            // dogleg right => down\n            let mid0 = new Vec3(end.x - width / 2, start.y, start.z);\n            let mid1 = new Vec3(end.x, start.y + width / 2, end.z);\n\n            drawArrow(state, start, mid0, width, normal, color, false);\n            drawArrow(state, mid1, end, width, normal, color, true, CornerMode.Left);\n\n        } else if (srcPos === BlockPos.Bot && destPos === BlockPos.Right) {\n            // dogleg down => right\n            let mid0 = new Vec3(start.x, end.y - width / 2, end.z);\n            let mid1 = new Vec3(start.x - width / 2, end.y, end.z);\n\n            drawArrow(state, start, mid0, width, normal, color, false);\n            drawArrow(state, mid1, end, width, normal, color, true, CornerMode.Left);\n\n        } else if (srcPos === BlockPos.Bot && destPos === BlockPos.Left) {\n            // dogleg down => left\n            let mid0 = new Vec3(start.x, end.y - width / 2, end.z);\n            let mid1 = new Vec3(start.x + width / 2, end.y, end.z);\n\n            drawArrow(state, start, mid0, width, normal, color, false, CornerMode.None, new Vec3(0, 1, 0));\n            drawArrow(state, mid1, end, width, normal, color, true, CornerMode.Right);\n\n        } else {\n\n            drawArrow(state, start, end, width, normal, color, true);\n        }\n    }\n}\n\nexport enum BlockPos {\n    Left,\n    Right,\n    Top,\n    Bot,\n}\n\nexport enum CornerMode {\n    None,\n    Left,\n    Right,\n}\n\nexport interface IEndDir {\n    dir: Vec3;\n}\n\nlet _bezierLineBuf = new Float32Array(4 * 3);\nexport function drawArrow(state: IRenderState, start: Vec3, end: Vec3, width: number, normal: Vec3, color: Vec4, drawHead: boolean = true, drawCorner: CornerMode = CornerMode.None, endDir?: Vec3) {\n\n    let dir = end.sub(start);\n    dir.z = 0.0;\n    dir = dir.normalize();\n\n    let len = end.sub(start).len();\n    let headExtra = 3.0;\n    let headDepth = drawHead ? Math.min(len * 0.7, headExtra * 1.0) : 0;\n    let mtx = new Mat4f();\n\n    let side = Vec3.cross(dir, normal).mul(-1).normalize();\n    normal = Vec3.cross(side, dir).normalize();\n\n    mtx[0] = side.x;\n    mtx[1] = side.y;\n    mtx[2] = side.z;\n    mtx[4] = dir.x;\n    mtx[5] = dir.y;\n    mtx[6] = dir.z;\n    mtx[8] = normal.x;\n    mtx[9] = normal.y;\n    mtx[10] = normal.z;\n    // mtx[14] = start.z;\n\n    start = mtx.mulVec3Proj(start);\n    end = mtx.mulVec3Proj(end);\n\n    let borderColor = color.mul(0.8);\n    let ribbonColor = color.mul(0.3);\n\n    let opts: IArrowOpts = {\n        width,\n        borderColor,\n        ribbonColor,\n        headDepth,\n        headExtra,\n        lineThick: 1.2,\n        mtx,\n    };\n\n    endDir = endDir ? mtx.mulVec3ProjVec(endDir) : undefined;\n\n    // matrix is constructed such that the ribbons are always in the x-y plane, and going from -y to +y\n    // The ribbon will be curved if it is not in the x-y plane, but the start and end remain tangent to the plane\n\n    function drawBezierRibbon() {\n        let dist = Math.max(headDepth, Math.abs(start.y - end.y - headDepth) / 2);\n        let p0 = new Vec3(start.x, start.y               , start.z);\n        let p1 = new Vec3(start.x, start.y + dist        , start.z);\n        let p2 = new Vec3(end.x, end.y - headDepth - dist, end.z);\n        let p3 = new Vec3(end.x, end.y - headDepth       , end.z);\n        if (endDir) {\n            p2 = end.mulAdd(endDir, -headDepth - dist);\n            p3 = end.mulAdd(endDir, -headDepth);\n        }\n        let steps = bezierCurveBuild(p0, p1, p2, p3, 0.1);\n        let nPts = steps.length / 3;\n\n        let headNPts = drawHead ? 3 : 0;\n        let nFloats = (nPts * 2 + headNPts) * 3;\n        if (_bezierLineBuf.length < nFloats) {\n            _bezierLineBuf = new Float32Array(nFloats);\n        }\n        let arrowLine = _bezierLineBuf.subarray(0, nFloats);\n\n        for (let i = 0; i < nPts - 1; i++) {\n            let p0 = new Vec3(steps[i*3+0], steps[i*3+1], steps[i*3+2]);\n            let p1 = new Vec3(steps[i*3+3], steps[i*3+4], steps[i*3+5]);\n            drawArrowSeg(state, p0, p1, opts);\n        }\n\n        let arrowStartIdx = nPts;\n        let arrowEndIdx = arrowStartIdx + headNPts;\n        for (let i = 0; i < nPts; i++) {\n            let j = arrowEndIdx + i;\n            arrowLine[j*3+0] = steps[i*3+0] + opts.width / 2;\n            arrowLine[j*3+1] = steps[i*3+1];\n            arrowLine[j*3+2] = steps[i*3+2];\n            let k = nPts - i - 1;\n            arrowLine[k*3+0] = steps[i*3+0] - opts.width / 2;\n            arrowLine[k*3+1] = steps[i*3+1];\n            arrowLine[k*3+2] = steps[i*3+2];\n        }\n\n        if (drawHead) {\n            let headExtra = 3.0;\n            endDir = endDir ?? new Vec3(0, 1, 0);\n            let endA = end.mulAdd(endDir, -headDepth);\n            let i = arrowStartIdx;\n            arrowLine[i*3+0] = endA.x - opts.width / 2 - headExtra;\n            arrowLine[i*3+1] = endA.y;\n            arrowLine[i*3+2] = endA.z;\n            i += 1;\n            arrowLine[i*3+0] = end.x;\n            arrowLine[i*3+1] = end.y;\n            arrowLine[i*3+2] = end.z;\n            i += 1;\n            arrowLine[i*3+0] = endA.x + opts.width / 2 + headExtra;\n            arrowLine[i*3+1] = endA.y;\n            arrowLine[i*3+2] = endA.z;\n        }\n\n        let lineOpts = makeLineOpts({ thick: opts.lineThick, mtx: opts.mtx, color: opts.borderColor });\n        drawLineSegs(state.lineRender, arrowLine, lineOpts);\n    }\n\n    if (Math.abs(start.z - end.z) > 0.01 || endDir) {\n        drawBezierRibbon();\n\n    } else {\n        drawArrowSeg(state, start, end.sub(new Vec3(0, headDepth)), opts);\n    }\n\n    if (drawCorner !== CornerMode.None) {\n        drawArrowCorner(state, start.sub(new Vec3(0, width/2)), drawCorner, opts);\n    }\n    if (drawHead) {\n        endDir = endDir ?? new Vec3(0, 1, 0);\n        drawArrowHead(state, end.mulAdd(endDir, -headDepth), end, opts);\n    }\n}\n\ninterface IArrowOpts {\n    width: number;\n    headExtra: number;\n    headDepth: number;\n    borderColor: Vec4;\n    ribbonColor: Vec4;\n    lineThick: number;\n    mtx: Mat4f;\n}\n\n// Inner loop of bezier curve, so make this fast\nlet _segTl = new Vec3();\nlet _segBr = new Vec3();\nlet _segBl = new Vec3();\nlet _segTr = new Vec3();\nexport function drawArrowSeg(state: IRenderState, start: Vec3, end: Vec3, opts: IArrowOpts) {\n    _segTl.x = start.x - opts.width/2;\n    _segTl.y = start.y;\n    _segTl.z = start.z;\n\n    _segBr.x = end.x + opts.width/2;\n    _segBr.y = end.y;\n    _segBr.z = end.z;\n\n    addQuad(state.triRender, _segTl, _segBr, opts.ribbonColor, opts.mtx);\n\n    // _segBl.x = _segTl.x;\n    // _segBl.y = _segBr.y;\n    // _segBl.z = _segBr.z;\n\n    // _segTr.x = _segBr.x;\n    // _segTr.y = _segTl.y;\n    // _segTr.z = _segTl.z;\n\n    // let n = undefined;\n    // let thick = opts.lineThick;\n    // addLine(state.lineRender, thick, opts.borderColor, _segTl, _segBl, n, opts.mtx);\n    // addLine(state.lineRender, thick, opts.borderColor, _segTr, _segBr, n, opts.mtx);\n}\n\nlet _headTl = new Vec3();\nlet _headTr = new Vec3();\nlet _headBr = new Vec3();\nlet _headLeft = new Vec3();\nlet _headRight = new Vec3();\nlet _headTip = new Vec3();\nlet _headN = new Vec3(0, 0, 1);\nexport function drawArrowHead(state: IRenderState, a: Vec3, b: Vec3, opts: IArrowOpts) {\n    let headExtra = 3.0;\n\n    _headTl.copy_(a);\n    _headTl.x -= opts.width/2;\n    _headTr.copy_(a);\n    _headTr.x += opts.width/2;\n    _headBr.copy_(b);\n    _headBr.x += opts.width/2;\n    _headLeft.copy_(a);\n    _headLeft.x = _headTl.x - headExtra;\n    _headRight.copy_(a);\n    _headRight.x = _headBr.x + headExtra;\n    _headTip.copy_(b);\n    _headTip.x = _headTl.x + opts.width / 2;\n\n    addVert(state.triRender, _headLeft, opts.ribbonColor, _headN, opts.mtx);\n    addVert(state.triRender, _headTip, opts.ribbonColor, _headN, opts.mtx);\n    addVert(state.triRender, _headRight, opts.ribbonColor, _headN, opts.mtx);\n    addPrimitiveRestart(state.triRender);\n\n    // let thick = opts.lineThick;\n    // addLine(state.lineRender, thick, opts.borderColor, _headTl, _headLeft, undefined, opts.mtx);\n    // addLine(state.lineRender, thick, opts.borderColor, _headTip, _headLeft, undefined, opts.mtx);\n    // addLine(state.lineRender, thick, opts.borderColor, _headTip, _headRight, undefined, opts.mtx);\n    // addLine(state.lineRender, thick, opts.borderColor, _headTr, _headRight, undefined, opts.mtx);\n}\n\nlet _cornerPivot = new Vec3();\nlet _cornerN = new Vec3(0, 0, 1);\nlet _cornerCurrP = new Vec3();\nlet _cornerPrevP = new Vec3();\nexport function drawArrowCorner(state: IRenderState, center: Vec3, mode: CornerMode, opts: IArrowOpts) {\n\n    // coming from the left (-x), and going downwards (+y)\n    let mul = mode === CornerMode.Left ? 1 : -1;\n\n    _cornerPivot.x = center.x + opts.width / 2 * mul;\n    _cornerPivot.y = center.y + opts.width / 2;\n    _cornerPivot.z = center.z;\n\n    _cornerCurrP.z = center.z;\n    _cornerPrevP.z = center.z;\n    let count = 8;\n\n    for (let i = 0; i < count; i++) {\n        let theta = i / (count - 1) * Math.PI / 2;\n        let c = opts.width * Math.cos(theta) * mul;\n        let s = opts.width * Math.sin(theta);\n        _cornerCurrP.x = _cornerPivot.x - c;\n        _cornerCurrP.y = _cornerPivot.y - s;\n\n        addVert(state.triRender, _cornerCurrP, opts.ribbonColor, _cornerN, opts.mtx);\n        addVert(state.triRender, _cornerPivot, opts.ribbonColor, _cornerN, opts.mtx);\n\n        if (i > 0) {\n            // addLine(state.lineRender, opts.lineThick, opts.borderColor, _cornerPrevP, _cornerCurrP, undefined, opts.mtx);\n        }\n        let tmp = _cornerPrevP;\n        _cornerPrevP = _cornerCurrP;\n        _cornerCurrP = tmp;\n    }\n\n    addPrimitiveRestart(state.triRender);\n}\n","import { TextAlignHoriz, TextAlignVert } from \"../Annotations\";\nimport { IGptModelLayout } from \"../GptModelLayout\";\nimport { measureTextWidth, writeTextToBuffer } from \"../render/fontRender\";\nimport { addLine } from \"../render/lineRender\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\n\nexport function drawBlockLabels(state: IRenderState, layout: IGptModelLayout) {\n\n    // probably should limit this to specific blocks (defined by walkthrough)\n    // can configure this on the blocks themselves, or the layout object\n    // either way, this runs after the walkthrough, for positioning, and the walkthrough\n    // needs to configure this is some way\n\n    let baseColor = new Vec4(0.4, 0.4, 0.4, 1.0);\n\n    {\n        let color = baseColor.mul(layout.embedLabel.visible);\n        let tl = new Vec3(layout.tokEmbedObj.x - layout.margin * 2, layout.tokEmbedObj.y, 0);\n        let br = new Vec3(layout.tokEmbedObj.x - layout.margin * 2, layout.tokEmbedObj.y + layout.tokEmbedObj.dy, 0);\n        drawSectionLabel(state, \"Embedding\", tl, br, { color, fontSize: 6, pad: 4 });\n    }\n\n    let transformerIdx = 0;\n    for (let block of layout.blocks) {\n        let blockTop = block.ln1.lnResid.y - layout.margin / 2;\n        let blockBottom = block.mlpResult.y + block.mlpResult.dy + layout.margin / 2;\n        let mlpLeft = block.mlpProjBias.x - layout.margin * 3;\n        let headLeft = block.projBias.x - layout.margin;\n        let attnLabelLeft = headLeft - layout.margin * 3;\n        let attnLeft = lerp(headLeft, mlpLeft, 0.6);\n\n        let attnProjTop = block.attnOut.y - layout.margin / 2;\n        let attnProjBot = block.attnOut.y + block.attnOut.dy + layout.margin / 2;\n        let mlpTop = block.mlpFcBias.y - layout.margin / 2;\n\n        let blockLeft = mlpLeft - layout.margin * 6;\n\n        {\n            let color = baseColor.mul(block.mlpResidual.opacity * block.transformerLabel.visible);\n            let tl = new Vec3(blockLeft, blockTop, 0);\n            let br = new Vec3(blockLeft, blockBottom, 0);\n            drawSectionLabel(state, `Transformer ${transformerIdx}`, tl, br, { color, fontSize: 26 });\n        }\n\n        {\n            let color = baseColor.mul(block.attnResidual.opacity * block.selfAttendLabel.visible);\n            let tl = new Vec3(attnLeft, blockTop, 0);\n            let br = new Vec3(attnLeft, attnProjBot, 0);\n            drawSectionLabel(state, `Self-attention`, tl, br, { color, fontSize: 12 });\n        }\n\n        {\n            let color = baseColor.mul(block.mlpAct.opacity * block.mlpLabel.visible);\n            let tl = new Vec3(mlpLeft, mlpTop, 0);\n            let br = new Vec3(mlpLeft, blockBottom, 0);\n            drawSectionLabel(state, `MLP`, tl, br, { color, fontSize: 12 });\n        }\n\n        {\n            let color = baseColor.mul(block.attnOut.opacity * block.projLabel.visible);\n            let tl = new Vec3(attnLabelLeft, attnProjTop, 0);\n            let br = new Vec3(attnLabelLeft, attnProjBot, 0);\n            drawSectionLabel(state, `Projection`, tl, br, { color, fontSize: 10 });\n        }\n\n        let headIdx = 0;\n        for (let head of block.heads) {\n\n            {\n                let color = baseColor.mul(head.attnMtx.opacity * head.headLabel.visible);\n                let tl = new Vec3(attnLabelLeft, head.vBlock.y, head.vBlock.z + head.vBlock.dz / 2);\n                let br = new Vec3(attnLabelLeft, head.qBlock.y + head.qBlock.dy, head.qBlock.z + head.qBlock.dz / 2);\n                if (head.qBlock.y !== head.vBlock.y) {\n                    tl = new Vec3(attnLabelLeft, head.vBlock.y, head.vOutBlock.z + head.vOutBlock.dz / 2);\n                    br = new Vec3(attnLabelLeft, head.vOutBlock.y + head.vOutBlock.dy, head.vOutBlock.z + head.vOutBlock.dz / 2);\n                }\n\n                drawSectionLabel(state, `Head ${headIdx}`, tl, br, { color, fontSize: 10 });\n            }\n\n\n            {\n                let color = baseColor.mul(head.qBlock.opacity * head.qLabel.visible);\n                let tl = new Vec3(headLeft, head.qBlock.y, head.qBlock.z + head.qBlock.dz / 2);\n                let br = new Vec3(headLeft, head.qBlock.y + head.qBlock.dy, head.qBlock.z + head.qBlock.dz / 2);\n                drawSectionLabel(state, `Q`, tl, br, { color, fontSize: 6, pad: 4 });\n            }\n\n            {\n                let color = baseColor.mul(head.kBlock.opacity * head.kLabel.visible);\n                let tl = new Vec3(headLeft, head.kBlock.y, head.kBlock.z + head.kBlock.dz / 2);\n                let br = new Vec3(headLeft, head.kBlock.y + head.kBlock.dy, head.kBlock.z + head.kBlock.dz / 2);\n                drawSectionLabel(state, `K`, tl, br, { color, fontSize: 6, pad: 4 });\n            }\n\n            {\n                let color = baseColor.mul(head.vBlock.opacity * head.vLabel.visible);\n                let tl = new Vec3(headLeft, head.vBlock.y, head.vBlock.z + head.vBlock.dz / 2);\n                let br = new Vec3(headLeft, head.vBlock.y + head.vBlock.dy, head.vBlock.z + head.vBlock.dz / 2);\n                drawSectionLabel(state, `V`, tl, br, { color, fontSize: 6, pad: 4 });\n            }\n\n            headIdx++;\n        }\n\n        transformerIdx++;\n    }\n\n}\n\nexport interface ILabelOpts {\n    color: Vec4;\n    fontSize: number;\n    textAlign?: TextAlignHoriz;\n    textAlignV?: TextAlignVert;\n    pad?: number;\n}\n\nfunction drawSectionLabel(state: IRenderState, text: string, tl: Vec3, br: Vec3, opts: ILabelOpts) {\n    let mtx = new Mat4f();\n    mtx[14] = (tl.z + br.z) / 2;\n\n    let color = opts.color;\n    let fontScale = opts.fontSize;\n    let pad = opts.pad ?? 10;\n\n    let textColor = color;\n    let lineColor = color.mul(0.4);\n\n    let tw = measureTextWidth(state.modelFontBuf, text, fontScale);\n\n    writeTextToBuffer(state.modelFontBuf, text, textColor, tl.x - tw - 2 * pad, (tl.y + br.y) / 2 - fontScale / 2, fontScale, mtx);\n\n    let p0 = new Vec3(tl.x, tl.y, (tl.z + br.z) / 2);\n    let p1 = new Vec3(br.x, br.y, (tl.z + br.z) / 2);\n\n    if (tl.z != br.z) {\n        p0 = new Vec3(tl.x, (tl.y + br.y) / 2, tl.z);\n        p1 = new Vec3(tl.x, (tl.y + br.y) / 2, br.z);\n    }\n\n    let inward = new Vec3(1, 0, 0);\n\n    addLine(state.lineRender, 1.0, lineColor, p0.mulAdd(inward, -pad), p1.mulAdd(inward, -pad), undefined);\n\n    addLine(state.lineRender, 1.0, lineColor, p0.mulAdd(inward, -pad), p0, undefined);\n    addLine(state.lineRender, 1.0, lineColor, p1.mulAdd(inward, -pad), p1, undefined);\n\n}\n","import { IBlkDef, IModelLayout } from \"../GptModelLayout\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { bindFloatAttribs, createFloatBuffer, createShaderProgram, ensureFloatBufferSize, IGLContext, resetFloatBufferMap, uploadFloatBuffer } from \"@/src/utils/shader\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { Colors } from \"../walkthrough/WalkthroughTools\";\nimport { modelViewUboText, UboBindings } from \"./sharedRender\";\n\n\nexport type IBlockRender = ReturnType<typeof initBlockRender>;\n\nexport function initBlockRender(ctx: IGLContext | null) {\n    if (!ctx) {\n        return null!;\n    }\n    let gl = ctx.gl;\n\n    let blockUboText = /*glsl*/`\n    layout (std140) uniform BlockUbo {\n        uniform vec3 u_offset;\n        uniform vec3 u_size;\n        uniform vec3 u_nCells;\n        uniform mat4 u_localPosMtx;\n        uniform vec4 u_baseColor;\n        uniform float u_highlight;\n    };`;\n\n    let blockAccessUboText = /*glsl*/`\n    layout (std140) uniform BlockAccessUbo {\n        layout(row_major) uniform mat4x2 u_accessMtx;\n        uniform float u_accessTexChannel;\n        uniform float u_accessTexScale;\n    };`;\n\n    let numBlocks = 1024;\n    let blockSize = (1 + 1 + 1 + 4 + 1 + 1) * 4 * 4;\n    let blockUbo = createFloatBuffer(gl, gl.UNIFORM_BUFFER, gl.createBuffer()!, numBlocks, blockSize, null);\n\n    let blockAccessSize = (2 + 1 + 1 + 1) * 4 * 4;\n    let blockAccessUbo = createFloatBuffer(gl, gl.UNIFORM_BUFFER, gl.createBuffer()!, numBlocks, blockAccessSize, null);\n\n    // non-instanced rendering VAO\n    let cubeGeom = genCubeGeom(gl);\n\n    // instanced rendering VAO\n    let instancedVao = gl.createVertexArray()!;\n    gl.bindVertexArray(instancedVao);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, cubeGeom.vbo);\n    bindFloatAttribs(gl, cubeGeom.vbo, {}, [\n        { name: 'a_position', size: 3 },\n        { name: 'a_normal', size: 3 },\n    ]);\n\n    let instancedVbo = gl.createBuffer()!;\n    let instancedStrideBytes = bindFloatAttribs(gl, instancedVbo, { locOffset: 2, divisor: 1 }, [\n        { name: 'a_offset', size: 4 },\n        { name: 'a_size', size: 4 },\n        { name: 'a_nCells', size: 4 },\n        { name: 'a_localPosMtx0', size: 4 },\n        { name: 'a_localPosMtx1', size: 4 },\n        { name: 'a_localPosMtx2', size: 4 },\n        { name: 'a_localPosMtx3', size: 4 },\n        { name: 'a_baseColor', size: 4 },\n        { name: 'a_highlight', size: 1 },\n    ]);\n\n    let instancedFloatBuf = createFloatBuffer(gl, gl.ARRAY_BUFFER, instancedVbo, 1024, instancedStrideBytes, null);\n\n    // Create a dummy texture to bind to the access texture slot. Some drivers (e.g. my phone) will complain if we don't.\n    let dummyTexture = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D, dummyTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0]));\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    function createVertShader(instanced: boolean) {\n        return /*glsl*/`#version 300 es\n        precision highp float;\n\n        ${modelViewUboText}\n\n        ${instanced ? '' : blockUboText}\n\n        ${blockAccessUboText}\n\n        layout(location = 0) in vec3 a_position;\n        layout(location = 1) in vec3 a_normal;\n        out vec3 v_normal;\n        out vec3 v_modelPos;\n        out vec3 v_blockPos;\n        out vec2 v_accessPos;\n        out vec3 v_cubePos;\n\n        ${instanced ? `\n            layout(location = 2) in vec4 a_offset;\n            layout(location = 3) in vec4 a_size;\n            layout(location = 4) in vec4 a_nCells;\n            layout(location = 5) in vec4 a_localPosMtx0;\n            layout(location = 6) in vec4 a_localPosMtx1;\n            layout(location = 7) in vec4 a_localPosMtx2;\n            layout(location = 8) in vec4 a_localPosMtx3;\n            layout(location = 9) in vec4 a_baseColor;\n            layout(location = 10) in float a_highlight;\n\n            out vec4 u_baseColor;\n            out float u_highlight;\n        ` : ''}\n\n        void main() {\n            ${instanced ? `\n                vec3 u_offset = a_offset.xyz;\n                vec3 u_size = a_size.xyz;\n                vec3 u_nCells = a_nCells.xyz;\n                mat4 u_localPosMtx = mat4(a_localPosMtx0, a_localPosMtx1, a_localPosMtx2, a_localPosMtx3);\n                u_baseColor = a_baseColor;\n                u_highlight = a_highlight;\n            ` : ''}\n\n            vec3 localPos = (u_localPosMtx * vec4(a_position, 1.0)).xyz;\n            vec3 model_pos = a_position * u_size + u_offset;\n            gl_Position = u_view * u_model * vec4(model_pos, 1);\n            v_normal = a_normal;\n            v_modelPos = model_pos;\n            v_blockPos = localPos * u_nCells;\n            v_accessPos = u_accessMtx * vec4(v_blockPos, 1.0);\n            v_cubePos = localPos;\n            ${instanced ? ` ` : ''}\n        }`;\n    }\n\n    function createFragShader(instanced: boolean) {\n        return /*glsl*/`#version 300 es\n        precision highp float;\n        in vec3 v_normal;\n        out vec4 o_color;\n        in vec3 v_blockPos;\n        in vec3 v_cubePos;\n        in vec3 v_modelPos;\n        in vec2 v_accessPos;\n        uniform vec3 u_camPos; // in model space\n\n        ${instanced ? `\n            in vec4 u_baseColor;\n            in float u_highlight;\n        ` : blockUboText}\n\n        ${blockAccessUboText}\n\n        uniform sampler2D u_accessSampler;\n\n        void main() {\n            ivec3 blockPos = ivec3(v_blockPos - v_normal * 0.1);\n\n            bool cellDark = (blockPos.x + blockPos.y + blockPos.z) % 2 == 0;\n\n            float maxDist = 4000.0;\n            float minDist = 600.0;\n            float dist = distance(u_camPos, v_modelPos);\n            float t = clamp((dist - minDist) / (maxDist - minDist), 0.0, 1.0);\n\n            vec3 baseColor = mix(u_baseColor.rgb, vec3(0.5, 0.5, 0.5), 0.5);\n            if (cellDark) {\n                baseColor *= mix(0.9, 1.0, t);\n            }\n\n            if (u_accessTexScale > 0.0 && dist < maxDist) { // have access texture\n                vec3 texBaseColor = mix(baseColor, vec3(0.5, 0.5, 0.5), 0.8);\n\n                vec3 d = fract(v_blockPos) - 0.5;\n                float r2 = 0.3*0.3;\n                bool insideX = d.y * d.y + d.z * d.z < r2;\n                bool insideY = d.x * d.x + d.z * d.z < r2;\n                bool insideZ = d.x * d.x + d.y * d.y < r2;\n                bool insideAny = insideX || insideY || insideZ;\n\n                if (insideAny) {\n                    ivec2 accessPos = ivec2(u_accessMtx * vec4(blockPos, 1.0));\n                    vec4 valVec = texelFetch(u_accessSampler, accessPos, 0) * u_accessTexScale;\n                    float val = u_accessTexChannel == 0.0 ? valVec.r : u_accessTexChannel == 1.0 ? valVec.g : valVec.b;\n\n                    float weight = clamp(abs(val), 0.0, 1.0);\n\n                    vec3 negColor = vec3(0.0, 0.0, 0.0);\n                    vec3 posColor = u_baseColor.rgb; // vec3(0.0, 1.0, 0.0);\n                    vec3 zeroColor = vec3(0.5, 0.5, 0.5);\n                    texBaseColor = mix(mix(zeroColor, negColor, weight), mix(zeroColor, posColor, weight), step(0.0, val));\n                }\n\n                baseColor = mix(texBaseColor, baseColor, t);\n            }\n\n            if (true) {\n                vec3 block16 = v_blockPos / 16.0;\n                vec3 pxPerBlock16 = 1.0 / fwidth(block16);\n                float strength16 = min(min(pxPerBlock16.x, pxPerBlock16.y), pxPerBlock16.z);\n                vec3 colorEdge = vec3(1.0, 1.0, 1.0);\n                vec3 color16 = vec3(1.0, 1.0, 1.0) * 0.7;\n                vec3 color256 = vec3(1.0, 1.0, 1.0);\n\n                // if we're zoomed out enough, show 256 & (256 * 16) grid lines\n                // the 16 grid lines are faded out by this point (fade out between 10px -> 1px)\n                if (strength16 < 2.0) {\n                    block16 = block16 / 16.0;\n                    pxPerBlock16 = 1.0 / fwidth(block16);\n                    strength16 = min(min(pxPerBlock16.x, pxPerBlock16.y), pxPerBlock16.z);\n                    color16 = color256;\n                    // orange\n                    color256 = vec3(1.0, 0.7, 0.4);\n                }\n\n                float visibility16 = smoothstep(2.0, 10.0, strength16); // below 10px between lines, fade out\n                vec3 block16Grid = 1.0 - abs(fract(block16 - 0.5) - 0.5) * pxPerBlock16;\n                float line16 = max(max(block16Grid.x, block16Grid.y), block16Grid.z) * visibility16;\n\n                vec3 block256 = block16 / 16.0;\n                vec3 block256Grid = 1.0 - abs(fract(block256 - 0.5) - 0.5) / fwidth(block256);\n                float line256 = max(max(block256Grid.x, block256Grid.y), block256Grid.z);\n\n                vec3 cube = v_cubePos - v_normal * 0.1;\n                vec3 cubeGrid = 1.0 - abs(fract(cube - 0.5) - 0.5) / fwidth(cube);\n                float lineCube = max(max(cubeGrid.x, cubeGrid.y), cubeGrid.z);\n\n                float bestPxPerBlock = min(min(pxPerBlock16.x, pxPerBlock16.y), pxPerBlock16.z);\n                float edgeWeight = smoothstep(0.0, 1.0, max(max(line16, lineCube), line256));\n                vec3 color = lineCube > 0.0 ? colorEdge : (line256 > 0.0 ? color256 : color16);\n                baseColor = mix(baseColor, color, edgeWeight);\n            }\n\n            vec3 color = mix(baseColor * 0.7, u_baseColor.rgb, u_highlight);\n\n            o_color = vec4(color, 1) * u_baseColor.a;\n        }`;\n    }\n\n    let shader = createShaderProgram(ctx, 'block', createVertShader(false), createFragShader(false),\n        ['u_camPos', 'u_accessSampler'],\n        { uboBindings: { 'ModelViewUbo': UboBindings.ModelView, 'BlockUbo': UboBindings.Block, 'BlockAccessUbo': UboBindings.BlockAccess } })!;\n\n    let instancedShader = createShaderProgram(ctx, 'block-instanced', createVertShader(true), createFragShader(true),\n        ['u_camPos', 'u_accessSampler'],\n        { uboBindings: { 'ModelViewUbo': UboBindings.ModelView, 'BlockAccessUbo': UboBindings.BlockAccess } })!;\n\n    let simpleShader = createShaderProgram(ctx, 'block-simple', /*glsl*/`#version 300 es\n        precision highp float;\n        ${modelViewUboText}\n        uniform vec3 u_size;\n        uniform vec3 u_offset;\n\n        layout(location = 0) in vec3 a_position;\n        void main() {\n            vec3 model_pos = a_position * u_size + u_offset;\n            gl_Position = u_view * u_model * vec4(model_pos, 1);\n        }\n    `, /*glsl*/`#version 300 es\n        precision highp float;\n        out vec4 o_color;\n        uniform vec4 u_baseColor;\n\n        void main() {\n            o_color = u_baseColor;\n        }\n    `, [\n        'u_size', 'u_offset', 'u_baseColor',\n    ], { uboBindings: { 'ModelViewUbo': UboBindings.ModelView } })!;\n\n    return {\n        gl,\n        cubeGeom,\n        shader,\n        simpleShader,\n        blockUbo,\n        blockAccessUbo,\n        dummyTexture,\n\n        /* specific to instanced rendering of the blocks. */\n        instancedShader,\n        instancedVao,\n        instancedFloatBuf,\n        instancedDataStale: true,\n        instancedNumBlocks: 0,\n    };\n}\n\n\nexport interface IGeom {\n    name: string;\n    vao: WebGLVertexArrayObject;\n    vbo: WebGLBuffer;\n    type: number; // gl.TRIANGLES etc\n    numVerts: number;\n}\n\nexport function genCubeGeom(gl: WebGL2RenderingContext): IGeom {\n    let faceVerts = [-1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, -1];\n\n    let faces = [\n        new Mat4f(),\n        Mat4f.fromAxisAngle(new Vec3(1, 0), Math.PI / 2),\n        Mat4f.fromAxisAngle(new Vec3(1, 0), Math.PI),\n        Mat4f.fromAxisAngle(new Vec3(1, 0), -Math.PI / 2),\n        Mat4f.fromAxisAngle(new Vec3(0, 1), Math.PI / 2),\n        Mat4f.fromAxisAngle(new Vec3(0, 1), -Math.PI / 2),\n    ];\n\n    // top left front is (0, 0, 0), bottom right back is (1, 1, 1)\n    let transform = Mat4f.fromTranslation(new Vec3(0.5, 0.5, 0.5)).mul(Mat4f.fromScale(new Vec3(.5, .5, .5)));\n    let arr = new Float32Array(6 * 6 * 3 * 2);\n    let j = 0;\n    for (let faceMtx of faces) {\n        for (let i = 0; i < 6; i++) {\n            let v = transform.mulVec3Proj(faceMtx.mulVec3Proj(new Vec3(faceVerts[i*2], faceVerts[i*2+1], -1)));\n            let n = faceMtx.mulVec3Proj(new Vec3(0, 0, -1));\n            arr[j++] = Math.round(v.x);\n            arr[j++] = Math.round(v.y);\n            arr[j++] = Math.round(v.z);\n            arr[j++] = n.x;\n            arr[j++] = n.y;\n            arr[j++] = n.z;\n        }\n    }\n\n    let vao = gl.createVertexArray()!;\n    gl.bindVertexArray(vao);\n    let vbo = gl.createBuffer()!;\n    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, arr, gl.STATIC_DRAW);\n\n    bindFloatAttribs(gl, vbo, {}, [\n        { name: 'a_position', size: 3 },\n        { name: 'a_normal', size: 3 },\n    ]);\n\n    return { name: 'cube', vao, vbo, type: gl.TRIANGLES, numVerts: 36 };\n}\n\nexport function renderBlocksSimple(blockRender: IBlockRender, cubes: IBlkDef[]) {\n    let gl = blockRender.gl;\n    if (!blockRender.simpleShader.ready) {\n        return;\n    }\n    let locs = blockRender.simpleShader.locs;\n    let geom = blockRender.cubeGeom;\n    gl.useProgram(blockRender.simpleShader.program);\n    gl.bindVertexArray(geom.vao);\n\n    for (let cube of cubes) {\n        gl.uniform3f(locs.u_size, cube.dx, cube.dy, cube.dz);\n        gl.uniform3f(locs.u_offset, cube.x, cube.y, cube.z);\n        let baseColor = (cube.t === 'w' ? new Vec4(0.3, 0.3, 1.0, 1) : new Vec4(0.4, 0.8, 0.4, 1)).mul(cube.highlight);\n        gl.uniform4f(locs.u_baseColor, baseColor.x, baseColor.y, baseColor.z, baseColor.w);\n        gl.drawArrays(geom.type, 0, geom.numVerts);\n    }\n}\n\nexport function renderAllBlocks(blockRender: IBlockRender, layout: IModelLayout, modelMtx: Mat4f, camPos: Vec3, lightPosArr: Float32Array, lightColorArr: Float32Array) {\n    let gl = blockRender.gl;\n    let locs = blockRender.shader.locs;\n    let geom = blockRender.cubeGeom;\n\n    if (!blockRender.shader.ready) {\n        return;\n    }\n\n    gl.useProgram(blockRender.shader.program);\n\n    let camPosModel = modelMtx.mulVec3Proj(camPos);\n    gl.uniform3f(locs.u_camPos, camPosModel.x, camPosModel.y, camPosModel.z);\n\n    gl.uniform1i(locs.u_accessSampler, 0);\n    gl.enable(gl.BLEND);\n    gl.enable(gl.CULL_FACE);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindVertexArray(geom.vao);\n\n    let cubes: IBlkDef[] = [];\n    let transparentCubes: IBlkDef[] = [];\n    function addCube(c: IBlkDef) {\n        if (c.subs) {\n            c.subs.forEach(addCube);\n        } else {\n            if (c.opacity < 0.8 && c.opacity > 0) {\n                transparentCubes.push(c);\n            } else if (c.opacity > 0.0) {\n                cubes.push(c);\n            }\n        }\n    }\n    layout.cubes.forEach(addCube);\n    let allCubes = [...cubes, ...transparentCubes];\n    let firstTransparent = cubes.length;\n\n    let blockUbo = blockRender.blockUbo.localBufs[0];\n    let blockAccessUbo = blockRender.blockAccessUbo.localBufs[0];\n\n    {\n        resetFloatBufferMap(blockRender.blockUbo);\n        ensureFloatBufferSize(blockUbo, cubes.length);\n        let blockBuf = blockUbo.buf;\n        for (let cube of allCubes) {\n            let baseOff = blockUbo.usedEls * blockUbo.strideFloats;\n            blockBuf[baseOff + 0] = cube.x;\n            blockBuf[baseOff + 1] = cube.y;\n            blockBuf[baseOff + 2] = cube.z;\n\n            blockBuf[baseOff + 4] = cube.dx;\n            blockBuf[baseOff + 5] = cube.dy;\n            blockBuf[baseOff + 6] = cube.dz;\n\n            blockBuf[baseOff + 8] = cube.cx;\n            blockBuf[baseOff + 9] = cube.cy;\n            blockBuf[baseOff + 10] = cube.cz;\n\n            blockBuf.set(cube.localMtx ?? new Mat4f(), baseOff + 12);\n\n            let color = (cube.t === 'w' ? Colors.Weights : cube.t === 'i' ? Colors.Intermediates : Colors.Aggregates);\n            let baseColor = new Vec4(color.x, color.y, color.z, cube.opacity);\n            baseColor.writeToBuf(blockBuf, baseOff + 28);\n\n            blockBuf[baseOff + 32] = cube.highlight;\n\n            blockUbo.usedEls += 1;\n        }\n        uploadFloatBuffer(gl, blockRender.blockUbo);\n    }\n\n    {\n        resetFloatBufferMap(blockRender.blockAccessUbo);\n        ensureFloatBufferSize(blockAccessUbo, cubes.length);\n        let blockBuf = blockAccessUbo.buf;\n        for  (let cube of allCubes) {\n            let baseOff = blockAccessUbo.usedEls * blockAccessUbo.strideFloats;\n            if (cube.access && cube.access.disable !== true) {\n                blockBuf.set(cube.access.mat.slice(0, 8), baseOff);\n                let c = cube.access.channel;\n\n                blockBuf[baseOff + 8] = c === 'r' ? 0.0 : c === 'g' ? 1.0 : c === 'b' ? 2.0 : 3.0;\n                blockBuf[baseOff + 9] = cube.access.scale;\n            } else {\n                blockBuf[baseOff + 9] = 0.0;\n            }\n            blockAccessUbo.usedEls += 1;\n        }\n        uploadFloatBuffer(gl, blockRender.blockAccessUbo);\n    }\n\n    let prevHasAccess = true;\n    let idx = 0;\n    for (let cube of allCubes) {\n        if (idx === firstTransparent) {\n            gl.depthMask(false);\n        }\n\n        gl.bindBufferRange(gl.UNIFORM_BUFFER, UboBindings.Block, blockRender.blockUbo.buf, idx * blockUbo.strideBytes, blockUbo.strideBytes);\n\n        let hasAccess = !!cube.access && cube.access.disable !== true;\n        if (prevHasAccess || hasAccess) {\n            gl.bindBufferRange(gl.UNIFORM_BUFFER, UboBindings.BlockAccess, blockRender.blockAccessUbo.buf, idx * blockAccessUbo.strideBytes, blockAccessUbo.strideBytes);\n            gl.bindTexture(gl.TEXTURE_2D, hasAccess && cube.access ? cube.access.src.texture : blockRender.dummyTexture);\n            prevHasAccess = hasAccess;\n        }\n\n        gl.drawArrays(geom.type, 0, geom.numVerts);\n        idx++;\n    }\n\n    gl.depthMask(true);\n}\n\n\nexport function renderAllBlocksInstanced(blockRender: IBlockRender, layout: IModelLayout, modelMtx: Mat4f, camPos: Vec3) {\n    if (!blockRender.instancedShader.ready) {\n        return;\n    }\n\n    let gl = blockRender.gl;\n    let locs = blockRender.instancedShader.locs;\n    let blockAccessUbo = blockRender.blockAccessUbo.localBufs[0];\n    gl.useProgram(blockRender.instancedShader.program);\n\n    let modelMtxInv = modelMtx.invert();\n    let camPosModel = modelMtxInv.mulVec3Proj(camPos);\n    gl.uniform3f(locs.u_camPos, camPosModel.x, camPosModel.y, camPosModel.z);\n\n    gl.uniform1i(locs.u_accessSampler, 0);\n    gl.enable(gl.BLEND);\n    gl.enable(gl.CULL_FACE);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, blockRender.dummyTexture);\n\n    gl.bindVertexArray(blockRender.instancedVao);\n\n    if (blockRender.instancedDataStale) {\n        blockRender.instancedDataStale = false;\n\n        {\n            resetFloatBufferMap(blockRender.instancedFloatBuf);\n            let vboBuf = blockRender.instancedFloatBuf.localBufs[0];\n            ensureFloatBufferSize(vboBuf, layout.cubes.length);\n            let buf = vboBuf.buf;\n\n            for (let cube of layout.cubes) {\n                if (cube.small) {\n                    continue;\n                }\n\n                let baseOff = vboBuf.usedEls * vboBuf.strideFloats;\n                buf[baseOff + 0] = cube.x;\n                buf[baseOff + 1] = cube.y;\n                buf[baseOff + 2] = cube.z;\n\n                buf[baseOff + 4] = cube.dx;\n                buf[baseOff + 5] = cube.dy;\n                buf[baseOff + 6] = cube.dz;\n\n                buf[baseOff + 8] = cube.cx;\n                buf[baseOff + 9] = cube.cy;\n                buf[baseOff + 10] = cube.cz;\n\n                buf.set(cube.localMtx ?? new Mat4f(), baseOff + 12);\n\n                let color = (cube.t === 'w' ? Colors.Weights : cube.t === 'i' ? Colors.Intermediates : Colors.Aggregates);\n                let baseColor = new Vec4(color.x, color.y, color.z, cube.opacity);\n                baseColor.writeToBuf(buf, baseOff + 28);\n\n                buf[baseOff + 32] = cube.highlight;\n\n                vboBuf.usedEls += 1;\n            }\n            uploadFloatBuffer(gl, blockRender.instancedFloatBuf);\n            blockRender.instancedNumBlocks = vboBuf.usedEls;\n        }\n\n        {\n            resetFloatBufferMap(blockRender.blockAccessUbo);\n            ensureFloatBufferSize(blockAccessUbo, 1);\n            let blockBuf = blockAccessUbo.buf;\n            blockBuf[0 + 9] = 0.0;\n            blockAccessUbo.usedEls += 1;\n            uploadFloatBuffer(gl, blockRender.blockAccessUbo);\n        }\n    }\n\n    gl.bindBufferRange(gl.UNIFORM_BUFFER, UboBindings.BlockAccess, blockRender.blockAccessUbo.buf, 0, blockAccessUbo.strideBytes);\n    gl.drawArraysInstanced(blockRender.cubeGeom.type, 0, blockRender.cubeGeom.numVerts, blockRender.instancedNumBlocks);\n\n    gl.depthMask(true);\n}\n","import { createShaderProgram, IGLContext } from \"@/src/utils/shader\";\nimport { Dim, Vec3 } from \"@/src/utils/vector\";\nimport { UboBindings } from \"./sharedRender\";\n\nexport type IBlurRender = ReturnType<typeof initBlurRender>;\n\nexport function initBlurRender(ctx: IGLContext, quadVao: WebGLVertexArrayObject) {\n    let gl = ctx.gl;\n\n    // have a pair of framebuffers to ping-pong between\n    // we'll render to a half-size buffer to save memory/compute\n\n    // will need a few different shaders to draw our buffers, since most things (like text or blocks)\n    // have unusual drawing behaviour (wait text is OK)\n\n    // Draw all our targets to a buffer.\n    // Blur it to another buffer.\n    // Blur it in the other dir to yet another buffer.\n    // Ping-pong between 2 & 3 as desired\n    // Draw the final result to the screen, subtracting the original from the blurred result, since\n    // we're after the outline of the original objects.\n    // Composite that directly onto the output buffer.\n    // We want our blurred colors to participate in the depth test\n\n\n    // For respecting the depth buffer:\n    //  - Render the object to our buffer, with a depth test (no write)\n    //  - Render an expanded version of the object to our buffer, with a depth test (no write)\n    //    - Write to the stencil buffer\n    //  - Now do the blur, applying the stencil test\n    let w = Math.max(gl.canvas.width, 1);\n    let h = Math.max(gl.canvas.height, 1);\n\n    // let stencilRenderBuf = gl.createRenderbuffer();\n    // gl.bindRenderbuffer(gl.RENDERBUFFER, stencilRenderBuf);\n    // gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, w, h);\n\n    let initialFbo = gl.createFramebuffer()!;\n    let initialTex = gl.createTexture()!;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, initialFbo);\n    gl.bindTexture(gl.TEXTURE_2D, initialTex);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, initialTex, 0);\n\n    // gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, stencilRenderBuf); // sharing the stencil buffer\n    // gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n    // also attach depth buffer of primary scene fbo\n\n    function createBlurFbo() {\n        let fbo = gl.createFramebuffer()!;\n        let tex = gl.createTexture()!;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n        gl.bindTexture(gl.TEXTURE_2D, tex);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, w, h, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);\n        // gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.RENDERBUFFER, stencilRenderBuf); // sharing the stencil buffer\n        // gl.drawBuffers([gl.COLOR_ATTACHMENT0]);\n\n        {\n            let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n            if (status !== gl.FRAMEBUFFER_COMPLETE) {\n                console.log(`Blur framebuffer not complete: ${status.toString(16)}`);\n            }\n        }\n\n        return { fbo, tex };\n    }\n\n    let blurFbos = [createBlurFbo(), createBlurFbo()];\n\n    let radiusPx = 4;\n    let blurPixelStride = 2;\n\n    // create ubo for blur shader, which are the [0..4] weights for the 5 samples (to the right of the center pixel & including)\n    let blurWeights = new Float32Array((radiusPx * 2 + 1) * 4);\n    let blurWeightsSum = 0;\n    let blurSigma = radiusPx / 2;\n    for (let i = -radiusPx; i <= radiusPx; i++) {\n        let x = i / blurSigma;\n        let w = Math.exp(-x * x * 0.5);\n        let wIdx = i + radiusPx;\n        blurWeights[wIdx * 4] = w;\n        blurWeightsSum += w;\n    }\n    for (let i = 0; i < radiusPx * 2 + 1; i++) {\n        blurWeights[i * 4] /= blurWeightsSum;\n    }\n\n    let blurUbo = gl.createBuffer();\n    gl.bindBuffer(gl.UNIFORM_BUFFER, blurUbo);\n    gl.bufferData(gl.UNIFORM_BUFFER, blurWeights.buffer, gl.STATIC_DRAW);\n    gl.bindBufferBase(gl.UNIFORM_BUFFER, UboBindings.blur, blurUbo);\n\n    function createBlurShader(name: string, dim: Dim) {\n        return createShaderProgram(ctx.shaderManager, name, /*glsl*/`#version 300 es\n            precision highp float;\n            layout(location = 0) in vec2 a_position;\n            void main() {\n                gl_Position = vec4(a_position, 0, 1);\n            }\n        `, /*glsl*/`#version 300 es\n            precision highp float;\n\n            layout(std140) uniform BlurWeights {\n                float weights[${radiusPx * 2 + 1}];\n            };\n\n            uniform sampler2D u_texture;\n            out vec4 o_color;\n\n            void main() {\n                ivec2 pos = ivec2(gl_FragCoord.xy);\n                vec4 color = vec4(0);\n                vec4 center = texelFetch(u_texture, pos, 0);\n                for (int i = -${radiusPx}; i <= ${radiusPx}; i++) {\n                    int wId = i + ${radiusPx};\n                    color += texelFetch(u_texture, pos + ivec2(${dim === Dim.X ? 'i, 0' : '0, i'}) * ${blurPixelStride}, 0) * weights[wId];\n                }\n                o_color = max(color, center);\n            }\n        `, ['u_texture'], { uboBindings: { 'BlurWeights': UboBindings.blur } })!;\n    }\n\n    let horizShader = createBlurShader(\"blurHoriz\", Dim.X);\n    let vertShader = createBlurShader(\"blurVert\", Dim.Y);\n\n    let overlayShader = createShaderProgram(ctx.shaderManager, \"blurOverlay\", /*glsl*/`#version 300 es\n            precision highp float;\n            layout(location = 0) in vec2 a_position;\n            out vec2 v_uv;\n            void main() {\n                gl_Position = vec4(a_position, 0, 1);\n                v_uv = a_position * 0.5 + 0.5;\n            }\n        `, /*glsl*/`#version 300 es\n            precision highp float;\n            uniform sampler2D u_texture;\n            uniform sampler2D u_initTexture;\n            in vec2 v_uv;\n            out vec4 o_color;\n\n            void main() {\n                ivec2 pos = ivec2(gl_FragCoord.xy);\n                vec4 blurColor = texture(u_texture, v_uv);\n                // vec4 initColor = texture(u_initTexture, v_uv);\n\n                vec4 base = vec4(0.9, 0.9, 0.9, 0.1);\n                // if (blurColor.a == 0.0) {\n                //     blurColor = vec4(0.1, 0.1, 0.1, 1.0);\n                // }\n                o_color = blurColor; // + initColor * (1.0 - blurColor.a);\n                // o_color = initColor;\n            }\n        `, ['u_texture'])!;\n\n    return {\n        gl,\n        quadVao,\n        // stencilRenderBuf,\n        initialFbo,\n        initialTex,\n        blurFbos,\n        horizShader,\n        vertShader,\n        overlayShader,\n        currViewSize: new Vec3(0, 0),\n        blurFactor: 0.3,\n    };\n}\n\nexport function setupBlurTarget(blur: IBlurRender) {\n    let gl = blur.gl;\n    let w = gl.canvas.width;\n    let h = gl.canvas.height;\n    let blurW = Math.floor(w * blur.blurFactor);\n    let blurH = Math.floor(h * blur.blurFactor);\n\n    if (blur.currViewSize.x !== w || blur.currViewSize.y !== h) {\n        // gl.bindRenderbuffer(gl.RENDERBUFFER, blur.stencilRenderBuf);\n        // gl.renderbufferStorage(gl.RENDERBUFFER, gl.STENCIL_INDEX8, blurW, blurH);\n\n        gl.bindTexture(gl.TEXTURE_2D, blur.initialTex);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, blurW, blurH, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        for (let fbo of blur.blurFbos) {\n            gl.bindTexture(gl.TEXTURE_2D, fbo.tex);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, blurW, blurH, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        }\n\n        blur.currViewSize = new Vec3(w, h);\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, blur.initialFbo);\n    gl.viewport(0, 0, blurW, blurH);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n}\n\nexport function renderBlur(blur: IBlurRender, destFbo: WebGLFramebuffer | null) {\n    let gl = blur.gl;\n    let w = gl.canvas.width;\n    let h = gl.canvas.height;\n    let blurW = Math.floor(w * blur.blurFactor);\n    let blurH = Math.floor(h * blur.blurFactor);\n    gl.bindVertexArray(blur.quadVao);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.BLEND);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.STENCIL_TEST);\n\n    gl.activeTexture(gl.TEXTURE0);\n\n    { // initial -> blurFbos[0] (horizontal pass)\n        gl.bindTexture(gl.TEXTURE_2D, blur.initialTex);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, blur.blurFbos[0].fbo);\n        gl.viewport(0, 0, blurW, blurH);\n\n        gl.useProgram(blur.horizShader.program);\n        gl.uniform1i(blur.horizShader.locs.u_texture, 0);\n\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n    }\n\n    { // blurFbos[0] -> blurFbos[1] (vertical pass)\n        gl.bindTexture(gl.TEXTURE_2D, blur.blurFbos[0].tex);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, blur.blurFbos[1].fbo);\n        gl.viewport(0, 0, blurW, blurH);\n\n        gl.useProgram(blur.vertShader.program);\n        gl.uniform1i(blur.vertShader.locs.u_texture, 0);\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n    }\n\n    { // blurFbos[1] -> destFbo (overlay)\n        gl.enable(gl.BLEND);\n        gl.viewport(0, 0, w, h);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, destFbo);\n        gl.bindTexture(gl.TEXTURE_2D, blur.blurFbos[1].tex);\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, blur.initialTex);\n\n        gl.useProgram(blur.overlayShader.program);\n        gl.uniform1i(blur.overlayShader.locs.u_texture, 0);\n        // gl.uniform1i(blur.overlayShader.locs.u_initTexture, 1);\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n    }\n}\n","import { IGLContext } from \"@/src/utils/shader\";\n\nexport interface IQueryManager {\n    ctx: IGLContext;\n    queries: Map<string, IQuery>;\n    TIME_ELAPSED_EXT: number;\n}\n\nexport interface IQuery {\n    query: WebGLQuery;\n    hasRun: boolean;\n    hasStarted: boolean;\n}\n\nexport function createQueryManager(ctx: IGLContext): IQueryManager {\n\n    return {\n        ctx,\n        queries: new Map(),\n        TIME_ELAPSED_EXT: ctx.ext.disjointTimerQuery?.TIME_ELAPSED_EXT!,\n    };\n}\n\nexport function beginQueryAndGetPrevMs(manager: IQueryManager, name: string): number | null {\n    if (!manager.ctx.ext.disjointTimerQuery) {\n        return null;\n    }\n\n    let existing = manager.queries.get(name);\n    if (!existing) {\n        let query = manager.ctx.gl.createQuery()!;\n        manager.queries.set(name, existing = { query, hasRun: false, hasStarted: false });\n    }\n\n    let resultAvailable = false\n    if (existing.hasRun) {\n        resultAvailable = manager.ctx.gl.getQueryParameter(existing.query, manager.ctx.gl.QUERY_RESULT_AVAILABLE);\n    }\n\n    let resultMs: number | null = null;\n\n    if (resultAvailable) {\n        let timeElapsed = manager.ctx.gl.getQueryParameter(existing.query, manager.ctx.gl.QUERY_RESULT);\n        resultMs = timeElapsed / 1000000;\n    }\n\n    if (!existing.hasRun || resultAvailable) {\n        manager.ctx.gl.beginQuery(manager.TIME_ELAPSED_EXT, existing.query);\n        existing.hasRun = true;\n        existing.hasStarted = true;\n    }\n\n    return resultMs;\n}\n\nexport function endQuery(manager: IQueryManager, name: string) {\n    if (!manager.ctx.ext.disjointTimerQuery) {\n        return;\n    }\n    let existing = manager.queries.get(name);\n    if (existing && existing.hasRun && existing.hasStarted) {\n        manager.ctx.gl.endQuery(manager.TIME_ELAPSED_EXT);\n        existing.hasStarted = false;\n    }\n}\n","import { createFontBuffers, IFontAtlas, IFontAtlasData, IFontBuffers, measureTextWidth, renderAllText, resetFontBuffers, setupFontAtlas, uploadAllText, writeTextToBuffer } from \"./fontRender\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { createShaderManager, ensureShadersReady, IGLContext } from \"@/src/utils/shader\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { IBlockRender, initBlockRender, renderAllBlocks, renderAllBlocksInstanced, renderBlocksSimple } from \"./blockRender\";\nimport { initBlurRender, renderBlur, setupBlurTarget } from \"./blurRender\";\nimport { createLineRender, renderAllLines, resetLineRender, uploadAllLines } from \"./lineRender\";\nimport { renderAllThreads, initThreadRender } from \"./threadRender\";\nimport { initSharedRender, RenderPhase, writeModelViewUbo } from \"./sharedRender\";\nimport { cameraToMatrixView } from \"../Camera\";\nimport { initTriRender, renderAllTris, resetTriRender, uploadAllTris } from \"./triRender\";\nimport { createQueryManager, IQueryManager } from \"./queryManager\";\nimport { IProgramState } from \"../Program\";\nimport { ISyncObject } from \"./syncObjects\";\n\nexport interface IRenderView {\n    time: number;\n    dt: number;\n    markDirty: () => void;\n}\n\nexport interface IRenderState {\n    gl: WebGL2RenderingContext;\n    canvasEl: HTMLCanvasElement;\n    ctx: IGLContext;\n    blockRender: IBlockRender;\n    lineRender: ReturnType<typeof createLineRender>;\n    threadRender: ReturnType<typeof initThreadRender>;\n    blurRender: ReturnType<typeof initBlurRender>;\n    sharedRender: ReturnType<typeof initSharedRender>;\n    triRender: ReturnType<typeof initTriRender>;\n    fontAtlas: IFontAtlas;\n    modelFontBuf: IFontBuffers;\n    quadVao: WebGLVertexArrayObject;\n    queryManager: IQueryManager;\n    syncObjects: ISyncObject[];\n    size: Vec3;\n\n    renderTiming: boolean;\n    lastGpuMs: number;\n    lastJsMs: number;\n}\n\nexport function initRender(canvasEl: HTMLCanvasElement, fontAtlasData: IFontAtlasData): IRenderState | null {\n    // init shaders for various block types\n\n    // console.clear();\n    let gl = canvasEl.getContext(\"webgl2\", { antialias: true })!;\n\n    if (!gl) {\n        return null;\n    }\n\n    let ext: IGLContext['ext'] = {\n        colorBufferFloat: gl.getExtension(\"EXT_color_buffer_float\"),\n        disjointTimerQuery: gl.getExtension('EXT_disjoint_timer_query_webgl2'),\n    };\n\n    if (!ext.colorBufferFloat) {\n        console.log(\"initRender: EXT_color_buffer_float not supported: floating point textures will not work.\");\n    }\n\n    if (!ext.disjointTimerQuery) {\n        console.log(\"initRender: EXT_disjoint_timer_query_webgl2 not supported: GPU timing will not work.\");\n    }\n\n    let shaderManager = createShaderManager(gl);\n\n    let ctx: IGLContext = { gl, shaderManager, ext };\n\n    let quadVbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, quadVbo);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        -1, -1,\n        1, -1,\n        1, 1,\n        -1, 1,\n    ]), gl.STATIC_DRAW);\n\n    let quadVao = gl.createVertexArray()!;\n    gl.bindVertexArray(quadVao);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n\n    let sharedRender = initSharedRender(ctx);\n\n    let fontAtlas = setupFontAtlas(ctx, fontAtlasData);\n\n    let modelFontBuf = createFontBuffers(fontAtlas, sharedRender);\n    let threadRender = initThreadRender(ctx);\n    let lineRender = createLineRender(ctx, sharedRender);\n    let blockRender = initBlockRender(ctx);\n    let triRender = initTriRender(ctx, sharedRender);\n    let blurRender = initBlurRender(ctx, quadVao);\n    let queryManager = createQueryManager(ctx);\n\n    ensureShadersReady(shaderManager);\n\n    return {\n        canvasEl,\n        gl,\n        ctx,\n        blockRender,\n        threadRender,\n        lineRender,\n        blurRender,\n        triRender,\n        sharedRender,\n        fontAtlas,\n        modelFontBuf,\n        quadVao,\n        queryManager,\n        syncObjects: [],\n        size: new Vec3(1, 1),\n        lastGpuMs: 0,\n        lastJsMs: 0,\n        renderTiming: false,\n    };\n}\n\nexport function resetRenderBuffers(args: IRenderState) {\n    resetLineRender(args.lineRender);\n    resetFontBuffers(args.modelFontBuf);\n    resetTriRender(args.triRender);\n}\n\nexport function renderModel(state: IProgramState) {\n    let { layout, render: args, camera } = state;\n    let { gl, blockRender, size } = args;\n\n    let { modelMtx, viewMtx } = camera;\n    let { camPos } = cameraToMatrixView(camera);\n\n    let lightPos = [\n        new Vec3(100, 400, 600),\n        new Vec3(-200, -300, -300),\n        new Vec3(200, -100, 0),\n    ];\n    let lightColor = [\n        new Vec3(1, 0.2, 0.2),\n        new Vec3(1, 0.2, 0.2),\n        new Vec3(1, 0.2, 0.2),\n    ];\n    let lightPosArr = new Float32Array(3 * 3);\n    let lightColorArr = new Float32Array(3 * 3);\n    for (let i = 0; i < 3; i++) {\n        modelMtx.mulVec3Proj(lightPos[i]).writeToBuf(lightPosArr, i * 3);\n        modelMtx.mulVec3Proj(lightColor[i]).writeToBuf(lightColorArr, i * 3);\n    }\n\n\n    /// ------ The render pass ------ ///\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.viewport(0, 0, size.x, size.y);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    gl.enable(gl.DEPTH_TEST);\n    gl.enable(gl.CULL_FACE);\n    gl.cullFace(gl.FRONT);\n\n    gl.frontFace(gl.CW); // our transform has a -ve determinant, so we switch this for correct rendering\n\n    if (args.renderTiming) {\n        let text = `GPU: ${args.lastGpuMs.toFixed(1)}ms JS: ${args.lastJsMs.toFixed(1)}ms`;\n        let w = size.x;\n        let fontSize = 14;\n        args.sharedRender.activePhase = RenderPhase.Overlay2D;\n        let tw = measureTextWidth(args.modelFontBuf, text, fontSize);\n        writeTextToBuffer(args.modelFontBuf, text, new Vec4(0,0,0,1), w - tw - 4, 4, fontSize, new Mat4f());\n    }\n\n    writeModelViewUbo(args.sharedRender, modelMtx, viewMtx);\n\n    {\n        let blurBlocks = layout.cubes.filter(a => a.highlight > 0)\n        setupBlurTarget(args.blurRender);\n        renderBlocksSimple(blockRender, blurBlocks);\n\n        renderBlur(args.blurRender, null);\n    }\n    gl.enable(gl.DEPTH_TEST);\n\n    uploadAllLines(args.lineRender);\n    uploadAllTris(args.triRender);\n    uploadAllText(args.modelFontBuf);\n\n    renderAllBlocks(blockRender, layout, modelMtx, camPos, lightPosArr, lightColorArr);\n\n    args.sharedRender.activePhase = RenderPhase.Opaque;\n\n    for (let example of state.examples) {\n        if (example.enabled && example.layout) {\n            let { modelMtx, viewMtx } = camera;\n            let { camPos } = cameraToMatrixView(camera);\n            var modelMtxLocal = modelMtx.mul(Mat4f.fromTranslation(example.offset));\n            writeModelViewUbo(args.sharedRender, modelMtxLocal, viewMtx);\n            renderAllBlocksInstanced(example.blockRender, example.layout, modelMtxLocal, camPos);\n        }\n    }\n\n    writeModelViewUbo(args.sharedRender, modelMtx, viewMtx);\n\n    renderAllThreads(args.threadRender);\n\n    gl.polygonOffset(-1.0, -2.0);\n\n    let phaseOrder = [RenderPhase.Opaque, RenderPhase.Arrows, RenderPhase.Overlay, RenderPhase.Overlay2D];\n    for (let phase of phaseOrder) {\n\n        if (phase === RenderPhase.Overlay2D) {\n            let w = size.x;\n            let h = size.y;\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            writeModelViewUbo(args.sharedRender, new Mat4f(), Mat4f.fromOrtho(0, w, h, 0, -1, 1));\n        }\n\n        if (phase === RenderPhase.Overlay || phase === RenderPhase.Overlay2D) {\n            gl.enable(gl.POLYGON_OFFSET_FILL);\n        } else {\n            gl.disable(gl.POLYGON_OFFSET_FILL);\n        }\n        renderAllTris(args.triRender, phase);\n        renderAllText(args.modelFontBuf, phase);\n        renderAllLines(args.lineRender, phase);\n    }\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n\n}\n","import { camScaleToScreen } from \"../Camera\";\nimport { IProgramState } from \"../Program\";\nimport { drawText, IFontOpts, measureText } from \"../render/fontRender\";\nimport { RenderPhase } from \"../render/sharedRender\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { drawRoundedRect } from \"./DataFlow\";\n\nexport function drawBlockInfo(state: IProgramState) {\n\n    for (let blk of state.layout.cubes) {\n\n        let blkTopMid = new Vec3(blk.x + blk.dx / 2, blk.y, blk.z + blk.dz / 2);\n\n        let scale = camScaleToScreen(state, blkTopMid);\n\n        scale = Math.min(scale, 1.45);\n        // have a max scale\n\n        let textColor = new Vec4(1, 1, 1, 1).mul(blk.opacity);\n        let bgColor = new Vec4(0, 0, 0, 1).mul(blk.opacity);\n\n        if (blk.opacity === 0 || !blk.name) {\n            continue;\n        }\n\n        // draw text, centered on top of the block\n        let text = blk.name;\n        let mtx = Mat4f.fromTranslation(blkTopMid);\n        let textOpts: IFontOpts = { color: textColor, size: scale * 2.5, mtx };\n        let textW = measureText(state.render.modelFontBuf, text, textOpts);\n\n        let pad = 0.4;\n        state.render.sharedRender.activePhase = RenderPhase.Opaque;\n        drawRoundedRect(state.render, new Vec3(-textW / 2 - pad, -textOpts.size - pad * 2, 0), new Vec3(textW / 2 + pad, 0, 0), bgColor, mtx, scale * 0.4);\n\n        state.render.sharedRender.activePhase = RenderPhase.Overlay;\n        drawText(state.render.modelFontBuf, text, -textW / 2, -textOpts.size - pad, textOpts);\n    }\n}\n","import { IGptModelConfig, TensorF32 } from \"@/src/utils/tensor\";\n\nexport async function loadNativeBindings() {\n\n    let resp = await fetch('/native.wasm');\n    // load wasm file and return the module\n\n    let lineStr = \"\";\n\n    let memory = new WebAssembly.Memory({ initial: 1, maximum: 256 });\n\n    let importObject = {\n        env: {\n            memory,\n        },\n        odin_env: {\n            write: (fd: number, ptr: number, len: number) => {\n                let mem = new Uint8Array(importObject.env.memory.buffer, ptr, len);\n                let strPart = new TextDecoder().decode(mem);\n                let lines = strPart.split('\\n');\n                for (let i = 0; i < lines.length - 1; i++) {\n                    console.log(lineStr + lines[i]);\n                    lineStr = \"\";\n                }\n                lineStr += lines[lines.length - 1];\n            },\n            time_now: () => {\n                return BigInt(Date.now()) * BigInt(1e6);\n            },\n        },\n        odin_dom: {\n            init_event_raw: (ptr: number) => {\n                console.log('ODIN: init_event_raw', ptr);\n            },\n        },\n    };\n\n    let wasmModule = await WebAssembly.instantiateStreaming(resp, importObject);\n\n    let exports = wasmModule.instance.exports as unknown as INativeExports;\n    exports.init_allocator(exports.__heap_base);\n    // let res = exports.add_numbers(4, 5);\n    // let sin = exports.sinf_custom(0.25);\n\n    // console.log(module);\n    // console.log(initRes, res, sin);\n\n    let nativeFuncs = new NativeFunctions(wasmModule, exports, memory);\n\n    // checkNativeFns(exports);\n\n    return nativeFuncs;\n}\n\ninterface INativeExports {\n    __heap_base: number;\n    init_allocator: (heapBase: number) => number;\n    add_numbers: (a: number, b: number) => number;\n    sinf_custom: (a: number) => number;\n    cosf_custom: (a: number) => number;\n    expf_custom: (a: number) => number;\n    wasm_create_model: (B: number, T: number, C: number, n_layers: number, n_heads: number, n_vocab: number) => number;\n    wasm_run_model: (model: number) => number;\n    wasm_get_model_tensor: (model: number, tensor: number, index: number) => number;\n}\n\nexport class NativeFunctions {\n\n    viewBuf: ArrayBuffer;\n    int32View: Int32Array;\n    ptrView: Uint32Array;\n\n    constructor(\n        public module: WebAssembly.WebAssemblyInstantiatedSource,\n        public exports: INativeExports,\n        public memory: WebAssembly.Memory,\n    ) {\n\n        this.viewBuf = memory.buffer;\n        this.int32View = new Int32Array(memory.buffer);\n        this.ptrView = new Uint32Array(memory.buffer);\n    }\n\n    createModel(config: IGptModelConfig) {\n        let model = this.exports.wasm_create_model(config.B ?? 1, config.block_size, config.n_embd, config.n_layer, config.n_head, config.vocab_size)\n        return model;\n    }\n\n    runModel(model: number) {\n        this.exports.wasm_run_model(model);\n    }\n\n    getModelTensor(model: number, tensor: TensorType, index: number = 0) {\n        let ptr = this.exports.wasm_get_model_tensor(model, tensor, index);\n        this.checkViews();\n        let bufNElem = this.int32View[ptr / 4];\n        let ndimsSize = this.int32View[ptr / 4 + 1];\n        let dataPtr = this.ptrView[ptr / 4 + 2];\n        let shapeArrPtr = this.ptrView[ptr / 4 + 3];\n        let strideArrPtr = this.ptrView[ptr / 4 + 4];\n\n        let shape = new Int32Array(this.memory.buffer, shapeArrPtr, ndimsSize);\n        let stride = new Int32Array(this.memory.buffer, strideArrPtr, ndimsSize);\n        let data = new Float32Array(this.memory.buffer, dataPtr, bufNElem);\n\n        return new TensorF32([...shape], data, [...stride]);\n    }\n\n    checkViews() {\n        if (this.viewBuf === this.memory.buffer) {\n            return;\n        }\n\n        this.viewBuf = this.memory.buffer;\n        this.int32View = new Int32Array(this.memory.buffer);\n        this.ptrView = new Uint32Array(this.memory.buffer);\n    }\n}\n\nexport enum TensorType {\n    // weights\n    Wte,\n    Wpe,\n    LmHeadW,\n    AttnQkvW,\n    AttnQkvB,\n    AttnProjW,\n    AttnProjB,\n    MlpW,\n    MlpB,\n    MlpProjW,\n    MlpProjB,\n    Ln1Gamma,\n    Ln1Beta,\n    Ln2Gamma,\n    Ln2Beta,\n    LnFGamma,\n    LnFBeta,\n\n    // intermediate values\n    InputTokens,\n    InputTokenEmbed,\n    InputEmbed,\n\n    Ln1Agg,\n    Ln1Norm,\n    AttnQkv,\n    Attn,\n    AttnSmAgg,\n    AttnSm,\n    AttnVOut,\n    AttnProj,\n    AttnResidual,\n\n    Ln2Agg,\n    Ln2Norm,\n    MlpMlp,\n    MlpAct,\n    MlpProj,\n    MlpResidual,\n\n    LnFAgg,\n    LnFNorm,\n    Logits,\n    LogitsSmAgg,\n    LogitsSm,\n}\n\nfunction checkNativeFns(exports: INativeExports) {\n     checkFn((f) => [Math.sin(f), exports.sinf_custom(f)], 'sinf');\n     checkFn((f) => [Math.cos(f), exports.cosf_custom(f)], 'cosf');\n     checkFn((f) => [Math.exp(f), exports.expf_custom(f)], 'expf');\n}\n\nfunction createTestValues() {\n    let actualTestValues: number[] = [];\n\n    for (let vals in testValues) {\n        // we'll use a range of 100 values either side of each test value\n        let start = testValues[vals];\n        let startI = floatAsInt(start);\n        for (let i = 0; i < 100; i++) {\n            let f = intAsFloat(startI + i);\n            actualTestValues.push(f);\n            let f2 = intAsFloat(startI - i);\n            i > 0 && actualTestValues.push(f2);\n        }\n    }\n\n    for (let i = 0; i < 10000; i++) {\n        actualTestValues.push(-10 + Math.random() * 20);\n    }\n\n    for (let i = 0; i < 10000; i++) {\n        actualTestValues.push(-Math.PI / 4 + Math.random() * Math.PI / 2);\n    }\n\n    return actualTestValues;\n}\n\nfunction checkFn(testFn: (f: number) => [number, number], name: string) {\n    let actualTestValues = createTestValues();\n\n    let arr0 = new Float32Array(1);\n    let arr1 = new Float32Array(1);\n    let arr2 = new Float32Array(1);\n    let maxAbsError = 0;\n    let maxAbsErrorVal = 0;\n    let maxRelError = 0;\n    let maxRelErrorVal = 0;\n    for (let i = 0; i < actualTestValues.length; i++) {\n        arr0[0] = actualTestValues[i];\n\n        let res = testFn(arr0[0]);\n\n        arr1[0] = res[0];\n        arr2[0] = res[1];\n\n        let absError = Math.abs(arr1[0] - arr2[0]);\n        let relError = absError / Math.abs(arr1[0]);\n\n        if (absError > maxAbsError) {\n            maxAbsError = absError;\n            maxAbsErrorVal = arr0[0];\n        }\n        if (relError > maxRelError) {\n            maxRelError = relError;\n            maxRelErrorVal = arr0[0];\n        }\n    }\n\n    console.log(`${name}: max abs error: ${maxAbsError} (at ${maxAbsErrorVal}), max rel error: ${maxRelError} (at ${maxRelErrorVal})`);\n}\n\nfunction floatAsInt(f: number) {\n    let buf = new ArrayBuffer(4);\n    let view = new DataView(buf);\n    view.setFloat32(0, f, true);\n    return view.getInt32(0, true);\n}\n\nfunction intAsFloat(i: number) {\n    let buf = new ArrayBuffer(4);\n    let view = new DataView(buf);\n    view.setInt32(0, i, true);\n    return view.getFloat32(0, true);\n}\n\nconst pi = Math.PI;\nconst piOver2 = pi / 2;\nconst piOver4 = pi / 4;\nconst twoPi = 2 * pi;\nconst threePiOver2 = 3 * pi / 2;\n\nconst testValues = [\n  -10, -pi, -piOver2, -piOver4, -1e-7, -1e-6, 0, 1e-6, 1e-7, piOver4, piOver2, pi, threePiOver2, twoPi, 10\n];\n\n","import { IAddLayerLink, IAttentionLayerLink, IBlockLayerLink, IEmbedLayerLink, IGptModelLink, ILayerNormLayerLink, ILinearLayerLink, IMlpLayerLink, IModelShape, ISoftmaxLayerLink } from \"./GptModel\";\nimport { NativeFunctions, TensorType } from \"./NativeBindings\";\nimport { makeArray } from \"@/src/utils/data\";\nimport { createBufferTex as createBufferTex2, IBufferTex, writeToBufferTex } from \"@/src/utils/renderPhases\";\nimport { IGptModelConfig, ITensorSet, TensorF32 } from \"@/src/utils/tensor\";\n\nfunction createBufferTex(gl: WebGL2RenderingContext, height: number, width: number, channels: number) {\n    return createBufferTex2(gl, width, height, channels);\n}\n\ninterface IWasmLayerBuilder {\n    gl: WebGL2RenderingContext;\n    shape: IModelShape;\n}\n\nexport function createGpuModelForWasm(gl: WebGL2RenderingContext, config: IGptModelConfig): IGptModelLink {\n    let B = 1;\n    let C = config.n_embd;\n    let nHeads = config.n_head;\n    let T = config.block_size;\n    let nBlocks = config.n_layer;\n    let vocabSize = config.vocab_size;\n    let A = C / nHeads; // n elements in each Q, K, V vector, i.e. what we project down to\n\n    let shape: IModelShape = { B, C, nHeads, T, A, nBlocks, vocabSize };\n    let layerBuilder: IWasmLayerBuilder = { gl, shape };\n\n    let inputTokens = createBufferTex(gl, B * T, 1, 1);\n    let softmaxFinal = createSoftmaxLayer(layerBuilder);\n\n    return {\n         gl,\n         add: createAddLayer(layerBuilder),\n         inputBuf: new Float32Array(),\n         inputLen: 6,\n         ln_f: createLayerNormLayer(layerBuilder),\n         inputTokens,\n         lm_head: createLinearLayer(layerBuilder, T, C, vocabSize),\n         blocks: makeArray(nBlocks).map(() => createBlockLayer(layerBuilder)),\n         output: softmaxFinal.output,\n         posEmbed: createEmbedLayer(layerBuilder, inputTokens, T), // fix source?\n         vocabEmbed: createEmbedLayer(layerBuilder, inputTokens, vocabSize),\n         shape: shape,\n         softmaxFinal,\n         resultBuf: null,\n         sortedBuf: null,\n    };\n}\n\nfunction createAddLayer(builder: IWasmLayerBuilder): IAddLayerLink {\n    let { gl, shape: { B, T, C } } = builder;\n\n    return {\n        output: createBufferTex(gl, B * T, C, 1),\n    };\n}\n\nfunction createEmbedLayer(builder: IWasmLayerBuilder, input: IBufferTex, size: number): IEmbedLayerLink {\n    let { gl, shape: { B, T, C } } = builder;\n\n    return {\n        weight: createBufferTex(gl, size, C, 1),\n        output: createBufferTex(gl, B * T, C, 1),\n    };\n}\n\nfunction createLinearLayer(builder: IWasmLayerBuilder, t: number, cIn: number, cOut: number): ILinearLayerLink {\n    let { gl, shape: { B, T } } = builder;\n\n    return {\n        weight: createBufferTex(gl, cOut, cIn, 1),\n        bias: createBufferTex(gl, cOut, 1, 1),\n        output: createBufferTex(gl, B * T, cOut, 1),\n    };\n}\n\nfunction createLayerNormLayer(builder: IWasmLayerBuilder): ILayerNormLayerLink {\n    let { gl, shape: { B, T, C } } = builder;\n\n    return {\n        normWeight: createBufferTex(gl, C, 1, 1),\n        normBias: createBufferTex(gl, C, 1, 1),\n        normAgg: createBufferTex(gl, B * T, 1, 2),\n        output: createBufferTex(gl, B * T, C, 1),\n    };\n}\n\nfunction createSoftmaxLayer(builder: IWasmLayerBuilder): ISoftmaxLayerLink {\n    let { gl, shape: { B, T, vocabSize } } = builder;\n\n    return {\n        agg: createBufferTex(gl, B * T, 1, 2),\n        output: createBufferTex(gl, B * T, vocabSize, 1),\n    };\n}\n\nfunction createBlockLayer(builder: IWasmLayerBuilder): IBlockLayerLink {\n    let mlp = createMlpLayer(builder);\n\n    return {\n        ln_1: createLayerNormLayer(builder),\n        attn: createAttentionLayer(builder),\n        ln_2: createLayerNormLayer(builder),\n        mlp,\n        output: mlp.output,\n    };\n}\n\nfunction createAttentionLayer(builder: IWasmLayerBuilder): IAttentionLayerLink {\n    let { gl, shape: { B, T, C, nHeads, A } } = builder;\n\n    let add = createAddLayer(builder);\n\n    return {\n        qkvWeight:         createBufferTex(gl, 3 * nHeads * A, C, 1),\n        qkvBias:           createBufferTex(gl, 3 * nHeads * A, 1, 1),\n        attnMatrix:        createBufferTex(gl, B * nHeads * T, T, 1),\n        attnMatrixAgg:     createBufferTex(gl, B * nHeads * T, 1, 2),\n        attnMatrixSoftmax: createBufferTex(gl, B * nHeads * T, T, 1),\n        qkvOutput:         createBufferTex(gl, B * T, 3 * nHeads * A, 1),\n        add: createAddLayer(builder),\n        proj: createLinearLayer(builder, T, C, C),\n        scaledVectors: createBufferTex(gl, B * T, nHeads * A, 1),\n        output: add.output,\n    };\n}\n\nfunction createMlpLayer(builder: IWasmLayerBuilder): IMlpLayerLink {\n    let { gl, shape: { B, T, C } } = builder;\n\n    let add = createAddLayer(builder);\n\n    return {\n        fcLayer: createLinearLayer(builder, T, C, C * 4),\n        mlpGelu: createBufferTex(gl, B * T, C * 4, 1),\n        projLayer: createLinearLayer(builder, T, C * 4, C),\n        addLayer: add,\n        output: add.output,\n    };\n}\n\nexport interface IWasmGptModel {\n    native: NativeFunctions;\n    modelPtr: number;\n    lastMemoryBuffer: ArrayBuffer | null; // need to check against this to see if our js copies of the buffers are still valid\n    weightsDirty: boolean;\n    intersDirty: boolean;\n}\n\nexport function constructModel(model: ITensorSet, config: IGptModelConfig, native: NativeFunctions): IWasmGptModel {\n    let nativeModel = native.createModel(config);\n\n    copyFrom('transformer.wte.weight', TensorType.Wte);\n    copyFrom('transformer.wpe.weight', TensorType.Wpe);\n    copyFrom('lm_head.weight', TensorType.LmHeadW);\n    copyWeightBias('transformer.ln_f', TensorType.LnFGamma, TensorType.LnFBeta);\n\n    for (let i = 0; i < config.n_layer; i++) {\n        let layerPrefix = `transformer.h.${i}`;\n\n        copyWeightBias(layerPrefix + '.ln_1', TensorType.Ln1Gamma, TensorType.Ln1Beta, i);\n        copyWeightBias(layerPrefix + '.ln_2', TensorType.Ln2Gamma, TensorType.Ln2Beta, i);\n\n        copyWeightBias(layerPrefix + '.attn.c_attn', TensorType.AttnQkvW, TensorType.AttnQkvB, i);\n        copyWeightBias(layerPrefix + '.attn.c_proj', TensorType.AttnProjW, TensorType.AttnProjB, i);\n\n        copyWeightBias(layerPrefix + '.mlp.c_fc', TensorType.MlpW, TensorType.MlpB, i);\n        copyWeightBias(layerPrefix + '.mlp.c_proj', TensorType.MlpProjW, TensorType.MlpProjB, i);\n    }\n\n    function copyWeightBias(prefix: string, weightType: TensorType, biasType: TensorType, idx: number = 0) {\n        copyFrom(prefix + '.weight', weightType, idx);\n        copyFrom(prefix + '.bias', biasType, idx);\n    }\n\n    function copyFrom(name: string, type: TensorType, idx: number = 0) {\n        let m = model[name];\n        if (!m) {\n            console.log('ERROR: missing tensor name:', name)\n        } else {\n            native.getModelTensor(nativeModel, type, idx).copyFrom(model[name]);\n        }\n    }\n\n    let inputTokens = native.getModelTensor(nativeModel, TensorType.InputTokens);\n\n    inputTokens.buffer.set([2, 1, 0, 1, 1, 2, 0, 0, 0, 0, 0]);\n\n    {\n        let sw = performance.now();\n        native.runModel(nativeModel);\n        console.log('runModel', (performance.now() - sw).toFixed(2) + 'ms');\n    }\n\n    return {\n        native: native,\n        modelPtr: nativeModel,\n        lastMemoryBuffer: null,\n        weightsDirty: true,\n        intersDirty: true,\n    };\n}\n\nexport function stepWasmModel(wasmModel: IWasmGptModel, jsModel: IGptModelLink) {\n    let { native, modelPtr } = wasmModel;\n    let { shape: { B, T, vocabSize } } = jsModel;\n\n    let tIdx = jsModel.inputLen - 1;\n\n    if (!jsModel.sortedBuf || tIdx >= T - 1) {\n        return;\n    }\n\n    let inputTokensTensor = native.getModelTensor(modelPtr, TensorType.InputTokens);\n    for (let b = 0; b < B; b++) {\n        let topSortedIdx = jsModel.sortedBuf![b * T * vocabSize * 2 + tIdx * vocabSize * 2 + 0];\n        // let topSortedValue = jsModel.sortedBuf![b * T * 2 + tIdx * 2 + 1];\n        inputTokensTensor.buffer[b * T + tIdx + 1] = topSortedIdx;\n    }\n\n    jsModel.inputLen += 1;\n\n    native.runModel(modelPtr);\n\n    wasmModel.intersDirty = true;\n\n    syncWasmDataWithJsAndGpu(wasmModel, jsModel);\n}\n\nexport function syncWasmDataWithJsAndGpu(wasmModel: IWasmGptModel, jsModel: IGptModelLink) {\n    let needsSync = wasmModel.weightsDirty || wasmModel.intersDirty;\n\n    if (wasmModel.lastMemoryBuffer !== wasmModel.native.memory.buffer) {\n        wasmModel.lastMemoryBuffer = wasmModel.native.memory.buffer;\n        needsSync = true;\n    }\n\n    if (needsSync) {\n        readLocalBuffersFromWasm(wasmModel, jsModel, wasmModel.intersDirty, wasmModel.weightsDirty);\n        wasmModel.weightsDirty = false;\n        wasmModel.intersDirty = false;\n    }\n}\n\nfunction readLocalBuffersFromWasm(wasmModel: IWasmGptModel, jsModel: IGptModelLink, writeIntersToGpu: boolean = false, writeWeightsToGpu: boolean = false) {\n    readFromWasmToBufferTex(TensorType.Wte, 0, jsModel.vocabEmbed.weight, true);\n    readFromWasmToBufferTex(TensorType.Wpe, 0, jsModel.posEmbed.weight, true);\n\n    readFromWasmToBufferTex(TensorType.InputTokens, 0, jsModel.inputTokens);\n    readFromWasmToBufferTex(TensorType.InputEmbed, 0, jsModel.add.output);\n\n    for (let i = 0; i < jsModel.blocks.length; i++) {\n        let block = jsModel.blocks[i];\n\n        readFromWasmToBufferTex(TensorType.Ln1Gamma, i, block.ln_1.normWeight, true);\n        readFromWasmToBufferTex(TensorType.Ln1Beta, i, block.ln_1.normBias, true);\n        readFromWasmToBufferTex(TensorType.Ln1Agg, i, block.ln_1.normAgg);\n        readFromWasmToBufferTex(TensorType.Ln1Norm, i, block.ln_1.output);\n\n        readFromWasmToBufferTex(TensorType.AttnQkvW, i, block.attn.qkvWeight, true);\n        readFromWasmToBufferTex(TensorType.AttnQkvB, i, block.attn.qkvBias, true);\n\n        readFromWasmToBufferTex(TensorType.AttnQkv, i, block.attn.qkvOutput);\n        readFromWasmToBufferTex(TensorType.Attn, i, block.attn.attnMatrix);\n        // @TODO: attn agg (which we don't have buffers for yet in wasm)\n        readFromWasmToBufferTex(TensorType.AttnSmAgg, i, block.attn.attnMatrixAgg);\n        readFromWasmToBufferTex(TensorType.AttnSm, i, block.attn.attnMatrixSoftmax);\n        readFromWasmToBufferTex(TensorType.AttnVOut, i, block.attn.scaledVectors);\n\n        readFromWasmToBufferTex(TensorType.AttnProjW, i, block.attn.proj.weight, true);\n        readFromWasmToBufferTex(TensorType.AttnProjB, i, block.attn.proj.bias!, true);\n\n        readFromWasmToBufferTex(TensorType.AttnProj, i, block.attn.proj.output);\n        readFromWasmToBufferTex(TensorType.AttnResidual, i, block.attn.output);\n\n        readFromWasmToBufferTex(TensorType.Ln2Gamma, i, block.ln_2.normWeight, true);\n        readFromWasmToBufferTex(TensorType.Ln2Beta, i, block.ln_2.normBias, true);\n        readFromWasmToBufferTex(TensorType.Ln2Agg, i, block.ln_2.normAgg);\n        readFromWasmToBufferTex(TensorType.Ln2Norm, i, block.ln_2.output);\n\n        readFromWasmToBufferTex(TensorType.MlpW, i, block.mlp.fcLayer.weight, true);\n        readFromWasmToBufferTex(TensorType.MlpB, i, block.mlp.fcLayer.bias!, true);\n        readFromWasmToBufferTex(TensorType.MlpProjW, i, block.mlp.projLayer.weight, true);\n        readFromWasmToBufferTex(TensorType.MlpProjB, i, block.mlp.projLayer.bias!, true);\n\n        readFromWasmToBufferTex(TensorType.MlpMlp, i, block.mlp.fcLayer.output);\n        readFromWasmToBufferTex(TensorType.MlpAct, i, block.mlp.mlpGelu);\n        readFromWasmToBufferTex(TensorType.MlpProj, i, block.mlp.projLayer.output);\n        readFromWasmToBufferTex(TensorType.MlpResidual, i, block.mlp.addLayer.output);\n    }\n\n    readFromWasmToBufferTex(TensorType.LnFGamma, 0, jsModel.ln_f.normWeight, true);\n    readFromWasmToBufferTex(TensorType.LnFBeta, 0, jsModel.ln_f.normBias, true);\n    readFromWasmToBufferTex(TensorType.LnFAgg, 0, jsModel.ln_f.normAgg);\n    readFromWasmToBufferTex(TensorType.LnFNorm, 0, jsModel.ln_f.output);\n\n    readFromWasmToBufferTex(TensorType.LmHeadW, 0, jsModel.lm_head.weight, true);\n\n    readFromWasmToBufferTex(TensorType.Logits, 0, jsModel.lm_head.output);\n    readFromWasmToBufferTex(TensorType.LogitsSmAgg, 0, jsModel.softmaxFinal.agg);\n    readFromWasmToBufferTex(TensorType.LogitsSm, 0, jsModel.softmaxFinal.output);\n\n\n    let { T, vocabSize } = jsModel.shape;\n    let resultBuf = jsModel.softmaxFinal.output.localBuffer!;\n    let sortedBuf = new Float32Array(resultBuf.length * 2);\n    for (let t = 0; t < T; t++) {\n        let options = [...resultBuf.slice(t * vocabSize, (t + 1) * vocabSize)].map((v, i) => ({ v, i }));\n        options.sort((a, b) => b.v - a.v);\n        for (let i = 0; i < options.length; i++) {\n            sortedBuf[(t * vocabSize + i) * 2 + 0] = options[i].i;\n            sortedBuf[(t * vocabSize + i) * 2 + 1] = options[i].v;\n        }\n    }\n    jsModel.sortedBuf = sortedBuf;\n\n    function readFromWasmToBufferTex(type: TensorType, idx: number, tex: IBufferTex, isWeight?: boolean) {\n        let t = wasmModel.native.getModelTensor(wasmModel.modelPtr, type, idx);\n        readToBufferTex(`${TensorType[type]}${idx}`, t, tex);\n        let writeToGpu = isWeight ? writeWeightsToGpu : writeIntersToGpu;\n        if (writeToGpu) {\n            writeToBufferTex(jsModel.gl, tex, tex.localBuffer!);\n        }\n    }\n\n    function readToBufferTex(name: string, t: TensorF32, tex: IBufferTex) {\n        let texSize = tex.height * tex.width * tex.channels;\n        if (t.buffer.length !== texSize) {\n            throw new Error(`readToBufferTex: buffer size mismatch for ${name}. ` +\n            `bufferTex: ${texSize} [h: ${tex.height}, w: ${tex.width}, c: ${tex.channels}], ` +\n            `wasmBuffer:  ${t.buffer.length} [${t.shape.join(', ')}]`);\n        }\n        tex.localBuffer = t.buffer;\n    }\n\n}\n\n/*\n\nMini plan: init wasm side, with our model config.\n\ninit gpu side with the above,\nlink k\n\n\n*/\n\n// export function\n","import { genModelViewMatrices, ICamera, ICameraPos, updateCamera } from \"./Camera\";\nimport { drawAllArrows } from \"./components/Arrow\";\nimport { drawBlockLabels } from \"./components/SectionLabels\";\nimport { drawModelCard } from \"./components/ModelCard\";\nimport { IGptModelLink, IGpuGptModel, IModelShape } from \"./GptModel\";\nimport { genGptModelLayout, IBlkDef, IGptModelLayout } from \"./GptModelLayout\";\nimport { drawText, IFontAtlasData, IFontOpts, measureText } from \"./render/fontRender\";\nimport { initRender, IRenderState, IRenderView, renderModel, resetRenderBuffers } from \"./render/modelRender\";\nimport { beginQueryAndGetPrevMs, endQuery } from \"./render/queryManager\";\nimport { SavedState } from \"./SavedState\";\nimport { isNotNil } from \"@/src/utils/data\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { initWalkthrough, runWalkthrough } from \"./walkthrough/Walkthrough\";\nimport { IColorMix } from \"./Annotations\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { runMouseHitTesting } from \"./Interaction\";\nimport { RenderPhase } from \"./render/sharedRender\";\nimport { drawBlockInfo } from \"./components/BlockInfo\";\nimport { NativeFunctions } from \"./NativeBindings\";\nimport { IWasmGptModel, stepWasmModel, syncWasmDataWithJsAndGpu } from \"./GptModelWasm\";\nimport { IMovementInfo, manageMovement } from \"./components/MovementControls\";\nimport { IBlockRender, initBlockRender } from \"./render/blockRender\";\nimport { ILayout } from \"../utils/layout\";\nimport { DimStyle } from \"./walkthrough/WalkthroughTools\";\nimport { Subscriptions } from \"../utils/hooks\";\n\nexport interface IProgramState {\n    native: NativeFunctions | null;\n    wasmGptModel: IWasmGptModel | null;\n    stepModel: boolean;\n    mouse: IMouseState;\n    render: IRenderState;\n    inWalkthrough: boolean;\n    walkthrough: ReturnType<typeof initWalkthrough>;\n    camera: ICamera;\n    htmlSubs: Subscriptions;\n    layout: IGptModelLayout;\n    mainExample: IModelExample;\n    examples: IModelExample[];\n    currExampleId: number;\n    shape: IModelShape;\n    gptGpuModel: IGpuGptModel | null;\n    jsGptModel: IGptModelLink | null;\n    movement: IMovementInfo;\n    display: IDisplayState;\n    pageLayout: ILayout;\n    markDirty: () => void;\n}\n\nexport interface IModelExample {\n    name: string;\n    shape: IModelShape;\n    enabled: boolean;\n    layout?: IGptModelLayout;\n    blockRender: IBlockRender;\n    offset: Vec3;\n    modelCardOffset: Vec3;\n    camera?: ICameraPos;\n}\n\nexport interface IMouseState {\n    mousePos: Vec3;\n}\n\nexport interface IDisplayState {\n    tokenColors: IColorMix | null;\n    tokenIdxColors: IColorMix | null;\n    tokenOutputColors: IColorMix | null;\n    tokenIdxModelOpacity?: number[];\n    topOutputOpacity?: number;\n    lines: string[];\n    hoverTarget: IHoverTarget | null;\n    blkIdxHover: number[] | null;\n    dimHover: DimStyle | null;\n}\n\nexport interface IHoverTarget {\n    subCube: IBlkDef;\n    mainCube: IBlkDef;\n    mainIdx: Vec3;\n}\n\nexport function initProgramState(canvasEl: HTMLCanvasElement, fontAtlasData: IFontAtlasData): IProgramState {\n\n    let render = initRender(canvasEl, fontAtlasData);\n    let walkthrough = initWalkthrough();\n\n    let prevState = SavedState.state;\n    let camera: ICamera = {\n        angle: prevState?.camera.angle ?? new Vec3(296, 16, 13.5),\n        center: prevState?.camera.center ?? new Vec3(-8.4, 0, -481.5),\n        transition: {},\n        modelMtx: new Mat4f(),\n        viewMtx: new Mat4f(),\n        lookAtMtx: new Mat4f(),\n        camPos: new Vec3(),\n        camPosModel: new Vec3(),\n    }\n\n    let shape: IModelShape = {\n        B: 1,\n        T: 11,\n        C: 48,\n        nHeads: 3,\n        A: 48 / 3,\n        nBlocks: 3,\n        vocabSize: 3,\n    };\n\n    let gpt2ShapeSmall: IModelShape = {\n        B: 1,\n        T: 1024,\n        C: 768,\n        nHeads: 12,\n        A: 768 / 12,\n        nBlocks: 12,\n        vocabSize: 50257,\n    };\n\n    let gpt2ShapeLarge: IModelShape = {\n        B: 1,\n        T: 1024,\n        C: 1600,\n        nHeads: 25,\n        A: 1600 / 25,\n        nBlocks: 48,\n        vocabSize: 50257,\n    };\n\n    let gpt3Shape: IModelShape = {\n        B: 1,\n        T: 1024,\n        C: 12288,\n        nHeads: 96,\n        A: 12288 / 96,\n        nBlocks: 96,\n        vocabSize: 50257,\n    };\n\n    function makeCamera(center: Vec3, angle: Vec3): ICameraPos {\n        return { center, angle };\n    }\n\n    let delta = new Vec3(10000, 0, 0);\n\n    return {\n        native: null,\n        wasmGptModel: null,\n        render: render!,\n        inWalkthrough: true,\n        walkthrough,\n        camera,\n        shape: shape,\n        layout: genGptModelLayout(shape),\n        currExampleId: -1,\n        mainExample: {\n            name: 'nano-gpt',\n            enabled: true,\n            shape: shape,\n            offset: new Vec3(),\n            modelCardOffset: new Vec3(),\n            blockRender: null!,\n            camera: makeCamera(new Vec3(42.771, 0.000, -569.287), new Vec3(284.959, 26.501, 12.867)),\n        },\n        examples: [{\n            name: 'GPT-2 (small)',\n            enabled: true,\n            shape: gpt2ShapeSmall,\n            offset: delta.mul(-5),\n            modelCardOffset: delta.mul(-2.0),\n            blockRender: initBlockRender(render?.ctx ?? null),\n            camera: makeCamera(new Vec3(-65141.321, 0.000, -69843.439), new Vec3(224.459, 24.501, 1574.240)),\n        }, {\n            name: 'GPT-2 (XL)',\n            enabled: true,\n            shape: gpt2ShapeLarge,\n            offset: delta.mul(20),\n            modelCardOffset: delta.mul(0.5),\n            blockRender: initBlockRender(render?.ctx ?? null),\n            camera: makeCamera(new Vec3(237902.688, 0.000, -47282.484), new Vec3(311.959, 23.501, 1382.449)),\n        }, {\n            name: 'GPT-3',\n            enabled: false,\n            shape: gpt3Shape,\n            offset: delta.mul(50.0),\n            modelCardOffset: delta.mul(15.0),\n            blockRender: initBlockRender(render?.ctx ?? null),\n            camera: makeCamera(new Vec3(837678.163, 0.000, -485242.286), new Vec3(238.959, 10.501, 12583.939)),\n        }],\n        gptGpuModel: null,\n        jsGptModel: null,\n        stepModel: false,\n        markDirty: () => { },\n        htmlSubs: new Subscriptions(),\n        mouse: {\n            mousePos: new Vec3(),\n        },\n        movement: {\n            action: null,\n            actionHover: null,\n            target: [0, 0],\n            depth: 1,\n            cameraLerp: null,\n         },\n        display: {\n            tokenColors: null,\n            tokenIdxColors: null,\n            tokenOutputColors: null,\n            lines: [],\n            hoverTarget: null,\n            dimHover: null,\n            blkIdxHover: null,\n        },\n        pageLayout: {\n            height: 0,\n            width: 0,\n            isDesktop: true,\n            isPhone: true,\n        }\n    };\n}\n\nexport function runProgram(view: IRenderView, state: IProgramState) {\n    let timer0 = performance.now();\n\n    if (!state.render) {\n        return;\n    }\n\n    resetRenderBuffers(state.render);\n    state.render.sharedRender.activePhase = RenderPhase.Opaque;\n    state.display.lines = [];\n    state.display.hoverTarget = null;\n    state.display.tokenColors = null;\n    state.display.tokenIdxColors = null;\n\n    if (state.wasmGptModel && state.jsGptModel) {\n        syncWasmDataWithJsAndGpu(state.wasmGptModel, state.jsGptModel);\n    }\n\n    if (state.stepModel && state.wasmGptModel && state.jsGptModel) {\n        state.stepModel = false;\n        stepWasmModel(state.wasmGptModel, state.jsGptModel);\n    }\n\n    // generate the base model, incorporating the gpu-side model if available\n    state.layout = genGptModelLayout(state.shape, state.jsGptModel);\n\n    // @TODO: handle different models in the same scene.\n    // Maybe need to copy a lot of different things like the entire render state per model?\n    for (let example of state.examples) {\n        if (example.enabled && !example.layout) {\n            let layout = genGptModelLayout(example.shape, null, example.offset);\n            example.layout = layout;\n        }\n    }\n\n    genModelViewMatrices(state, state.layout!);\n\n    let queryRes = beginQueryAndGetPrevMs(state.render.queryManager, 'render');\n    if (isNotNil(queryRes)) {\n        state.render.lastGpuMs = queryRes;\n    }\n\n    state.render.renderTiming = false; // state.pageLayout.isDesktop;\n\n    // will modify layout; view; render a few things.\n    if (state.inWalkthrough) {\n        runWalkthrough(state, view);\n    }\n\n    updateCamera(state, view);\n\n    drawBlockInfo(state);\n    // these will get modified by the walkthrough (stored where?)\n    drawAllArrows(state.render, state.layout);\n\n    drawModelCard(state, state.layout, 'nano-gpt', new Vec3());\n    // drawTokens(state.render, state.layout, state.display);\n\n    for (let example of state.examples) {\n        if (example.enabled && example.layout) {\n            drawModelCard(state, example.layout, example.name, example.offset.add(example.modelCardOffset));\n        }\n    }\n\n    // manageMovement(state, view);\n    runMouseHitTesting(state);\n    state.render.sharedRender.activePhase = RenderPhase.Opaque;\n    drawBlockLabels(state.render, state.layout);\n\n    let lineNo = 1;\n    let tw = state.render.size.x;\n    state.render.sharedRender.activePhase = RenderPhase.Overlay2D;\n    for (let line of state.display.lines) {\n        let opts: IFontOpts = { color: new Vec4(), size: 14 };\n        let w = measureText(state.render.modelFontBuf, line, opts);\n        drawText(state.render.modelFontBuf, line, tw - w - 4, lineNo * opts.size * 1.3 + 4, opts)\n        lineNo++;\n    }\n\n    // render everything; i.e. here's where we actually do gl draw calls\n    // up until now, we've just been putting data in cpu-side buffers\n    renderModel(state);\n\n    endQuery(state.render.queryManager, 'render');\n    state.render.gl.flush();\n\n    state.render.lastJsMs = performance.now() - timer0;\n}\n","import React, { useState, useCallback } from \"react\";\nimport { IProgramState } from \"./Program\";\nimport { useProgramState } from \"./Sidebar\";\nimport { clamp } from \"@/src/utils/data\";\nimport { useGlobalDrag, useTouchEvents } from \"@/src/utils/pointer\";\nimport { Vec3 } from \"@/src/utils/vector\";\nimport s from './LayerView.module.scss';\n\nexport const CanvasEventSurface: React.FC<{\n    children?: React.ReactNode;\n}> = ({ children }) => {\n    let [eventSurfaceEl, setEventSurfaceEl] = useState<HTMLDivElement | null>(null);\n    let progState = useProgramState();\n\n    let updateRenderState = useCallback((fn: (ps: IProgramState) => void) => {\n        fn(progState);\n        progState.markDirty();\n    }, [progState]);\n\n    function pan(initial: { camAngle: Vec3, camTarget: Vec3 }, dx: number, dy: number) {\n        let camAngle = initial.camAngle;\n        let target = initial.camTarget.clone();\n        target.z = target.z + dy * 0.1 * camAngle.z; // @TODO: clamp to the bounding box of the model\n        let sideMul = Math.sin(camAngle.x * Math.PI / 180) > 0 ? 1 : -1;\n        target.x = target.x + sideMul * dx * 0.1 * camAngle.z;\n\n        updateRenderState(ps => {\n            ps.camera.center = target;\n        });\n    }\n\n    function rotate(initial: { camAngle: Vec3, camTarget: Vec3 }, dx: number, dy: number) {\n        let camAngle = initial.camAngle.clone();\n        let degPerPixel = 0.5;\n        camAngle.x = camAngle.x - dx * degPerPixel;\n        camAngle.y = clamp(camAngle.y + dy * degPerPixel, -87, 87);\n        updateRenderState(ps => {\n            ps.camera.angle = camAngle;\n        });\n    }\n\n    function zoom(initial: { camAngle: Vec3, camTarget: Vec3 }, dy: number) {\n        let camAngle = initial.camAngle.clone();\n        camAngle.z = clamp(camAngle.z / dy, 0.1, 100000);\n        updateRenderState(ps => {\n            ps.camera.angle = camAngle;\n        });\n    }\n\n    let [dragStart, setDragStart] = useGlobalDrag<{ camAngle: Vec3, camTarget: Vec3 }>(function handleMove(ev, ds) {\n        let dx = ev.clientX - ds.clientX;\n        let dy = ev.clientY - ds.clientY;\n\n        if (!ds.shiftKey && !(ds.button === 1 || ds.button === 2)) {\n            pan(ds.data, dx, dy);\n        } else {\n            rotate(ds.data, dx, dy);\n        }\n\n        ev.preventDefault();\n    });\n\n    useTouchEvents(eventSurfaceEl, { camAngle: progState.camera.angle, camTarget: progState.camera.center }, { alwaysSendDragEvent: true },\n        function handle1PointDrag(ev, ds) {\n            let dsTouch0 = ds.touches[0];\n            let evTouch0 = ev.touches[0];\n            let dx = evTouch0.clientX - dsTouch0.clientX;\n            let dy = evTouch0.clientY - dsTouch0.clientY;\n            pan(ds.data, dx, dy);\n            ev.preventDefault();\n    },  function handle2PointDrag(ev, ds) {\n            let dsTouch0 = ds.touches[0];\n            let dsTouch1 = ds.touches[1];\n            let evTouch0 = ev.touches[0];\n            let evTouch1 = ev.touches[1];\n            let dsMidX = (dsTouch0.clientX + dsTouch1.clientX) / 2;\n            let dsMidY = (dsTouch0.clientY + dsTouch1.clientY) / 2;\n            let evMidX = (evTouch0.clientX + evTouch1.clientX) / 2;\n            let evMidY = (evTouch0.clientY + evTouch1.clientY) / 2;\n            let dx = evMidX - dsMidX;\n            let dy = evMidY - dsMidY;\n            let dsDist = Math.sqrt((dsTouch0.clientX - dsTouch1.clientX) ** 2 + (dsTouch0.clientY - dsTouch1.clientY) ** 2);\n            let evDist = Math.sqrt((evTouch0.clientX - evTouch1.clientX) ** 2 + (evTouch0.clientY - evTouch1.clientY) ** 2);\n            rotate(ds.data, dx, dy);\n            // pan(ds.data, dx, dy);\n            zoom(ds.data, evDist / dsDist);\n            ev.preventDefault();\n    });\n\n    function handleMouseDown(ev: React.MouseEvent) {\n        if (progState) {\n            setDragStart(ev, { camAngle: progState.camera.angle, camTarget: progState.camera.center });\n        }\n    }\n\n    function handleMouseMove(ev: React.MouseEvent) {\n        if (progState) {\n            let canvasBcr = progState.render.canvasEl.getBoundingClientRect();\n            let mousePos = new Vec3(ev.clientX - canvasBcr.left, ev.clientY - canvasBcr.top, 0);\n            updateRenderState(ps => {\n                ps.mouse.mousePos = mousePos;\n            });\n        }\n    }\n\n    function handleWheel(ev: React.WheelEvent) {\n        if (progState) {\n            let camAngle = progState.camera.angle;\n            let zoom = clamp(camAngle.z * Math.pow(1.0013, ev.deltaY), 0.01, 100000);\n            updateRenderState(rs => {\n                rs.camera.angle = new Vec3(camAngle.x, camAngle.y, zoom);\n            });\n        }\n        ev.stopPropagation();\n    }\n\n    if (!progState.render) {\n        return null;\n    }\n\n    return <div\n        ref={setEventSurfaceEl}\n        className={s.canvasEventSurface}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onWheel={handleWheel}\n        onContextMenu={ev => ev.preventDefault()}\n        style={{ cursor: dragStart ? 'grabbing' : progState.display.hoverTarget ? 'crosshair' : 'grab' }}\n    >\n        {children}\n    </div>;\n}\n","import { faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faCircleDot, faExpand, faMagnifyingGlassMinus, faMagnifyingGlassPlus, IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { ICameraPos } from \"../Camera\";\nimport { getBlkDimensions, IBlkDef, IBlkLabel, IGptLayerNormLayout, IGptModelLayout } from \"../GptModelLayout\";\nimport { IProgramState } from \"../Program\";\nimport { IRenderView } from \"../render/modelRender\";\nimport { useProgramState } from \"../Sidebar\";\nimport { clamp, isNotNil } from \"@/src/utils/data\";\nimport { lerp } from \"@/src/utils/math\";\nimport { useTouchEvents } from \"@/src/utils/pointer\";\nimport { BoundingBox3d, Vec3 } from \"@/src/utils/vector\";\nimport s from './MovementControls.module.scss';\n\nexport interface ICameraLerp {\n    camInitial: ICameraPos;\n    camFinal: ICameraPos;\n    duration: number;\n    t: number;\n}\n\nexport interface IMovementInfo {\n    action: MovementAction | null;\n    actionHover: MovementAction | null;\n\n    depth: number;\n    target: number[]; // index maps to depth, which maps to the INavLevel tree\n\n    cameraLerp: ICameraLerp | null;\n}\n\nexport enum MovementAction {\n    Up,\n    Down,\n    Left,\n    Right,\n    Focus,\n    In,\n    Out,\n    Expand,\n}\n\n/*\n\ndepth 0: show everything (the entire model)\n\ndepth 1:\n  - Embedding\n  - Transformer 0\n  - Transformer 1\n  - ...\n  - Transformer n\n  - Output\n\ndepth 2:\n  - input tokens\n  - embedding matrices\n\n  - self-attention (this pair each form residual loops)\n  - mlp\n\n  - ln_f\n  - lm_head + softmax\n\ndepth 3:\n  - top blocks\n  - bottom blocks\n\n  - ln1\n  - heads\n  - projection\n  - residual_output block\n\n  - ln2\n  - mlp_fc\n  - mlp_act\n  - mlp_fc2\n  - residual_output block\n\ndepth 4:\n  - lnX blocks\n  - mlp blocks\n  - head0\n  - head1\n  - head2\n\ndepth 5:\n  - self-attention blocks\n\nlet's see what our depths are\nalso have a sort of state machine for what to go between\nthe active target may be tighter than the depth says, so we can return to where we were\n\n\n*/\n\nexport interface INavLevel {\n    name?: string;\n    label?: IBlkLabel;\n    block?: IBlkDef;\n    children?: INavLevel[];\n\n    zoomLimit?: boolean; // if true, we won't zoom in further\n\n    childDir?: \"row\" | \"col\";\n    left?: INavLevel;\n    right?: INavLevel;\n    up?: INavLevel;\n    down?: INavLevel;\n}\n\nexport function getCurrentNavLevel(state: IProgramState, navLevels: INavLevel): { level: INavLevel, parent: INavLevel | null, depth: number, parents: INavLevel[] } | null {\n    let target = state.movement.target;\n    let targetDepth = state.movement.depth;\n\n    let parents: INavLevel[] = [];\n    let prevLevel = null;\n    let currLevel = navLevels;\n\n    // if we encounter an invalid index, we'll just return to the level above\n    let depth = -1;\n    for (let idx of target) {\n        if (depth >= targetDepth) {\n            break;\n        }\n        if (!currLevel || !currLevel.children) {\n            break;\n        }\n        let nextChild = currLevel.children[idx] ?? null;\n        if (!nextChild) {\n            break;\n        }\n\n        parents.push(currLevel);\n        prevLevel = currLevel;\n        currLevel = currLevel.children[idx] ?? null;\n        depth += 1;\n    }\n\n    return { level: currLevel, parent: prevLevel, depth, parents };\n}\n\nexport function manageMovement(state: IProgramState, view: IRenderView) {\n    let navLevels = constructNavLevels(state.layout);\n\n    let current = getCurrentNavLevel(state, navLevels) ?? { level: navLevels, parent: null, depth: 0, parents: [] };\n    let mvmt = state.movement;\n    if (isNotNil(mvmt.action)) {\n\n    }\n\n    mvmt.depth = current.depth;\n\n    if (isNotNil(mvmt.action)) {\n        let prevLevel = current.level;\n        let action = mvmt.action;\n        mvmt.action = null;\n\n        let setAtDepthAndTruncate = (depth: number, idx: number) => {\n            if (mvmt.target.length <= depth) {\n                mvmt.target.push(idx);\n            }\n\n            mvmt.target[depth] = idx;\n\n            if (mvmt.target.length > depth + 1) {\n                mvmt.target = state.movement.target.slice(0, depth + 1);\n            }\n        }\n\n        let setChild = (child: INavLevel | undefined) => {\n            if (child && current.parent) {\n                let idx = current.parent.children!.indexOf(child);\n                if (idx >= 0) {\n                    setAtDepthAndTruncate(current.depth, idx);\n                }\n            }\n        };\n\n        if (action === MovementAction.Left) {\n            setChild(current.level.left);\n        }\n        if (action === MovementAction.Right) {\n            setChild(current.level.right);\n        }\n        if (action === MovementAction.Up) {\n            setChild(current.level.up);\n        }\n        if (action === MovementAction.Down) {\n            setChild(current.level.down);\n        }\n        if (action === MovementAction.In) {\n            // choose the first child, unless there are already set values\n            // (occurs if we've previously zoomed out)\n            if (current.level.children) {\n                while (mvmt.target.length <= current.depth + 1) {\n                    mvmt.target.push(0);\n                }\n                mvmt.depth += 1;\n            }\n        }\n        if (action === MovementAction.Out) {\n            // don't actually delete the last element; just adjust the depth\n            if (mvmt.depth > -1) {\n                mvmt.depth -= 1;\n            }\n        }\n        if (action === MovementAction.Expand) {\n            mvmt.target = [];\n            mvmt.depth = -1;\n        }\n\n        state.markDirty();\n\n        current = getCurrentNavLevel(state, navLevels) ?? { level: navLevels, parent: null, depth: 0, parents: [] };\n\n        if (current.level !== prevLevel || action === MovementAction.Focus) {\n            // capture camera position and store as lerp start\n\n            let zoomLevel = [...current.parents, current.level].find(a => a.zoomLimit) ?? current.level;\n\n            let boxToViewMtx = state.camera.modelMtx;\n            let bb = new BoundingBox3d();\n            iterNavLevels(zoomLevel, (level) => {\n                if (level.block) {\n                    let pos = getBlkDimensions(level.block);\n                    bb.addInPlace(boxToViewMtx.mulVec3Proj(pos.tl))\n                        .addInPlace(boxToViewMtx.mulVec3Proj(pos.br));\n                }\n            });\n\n            // want to get the entire cube in screen, but in leui of that, guess the zoom based on the size\n            let zoomFactor = 110;\n            let zoom = clamp(bb.size().len() / zoomFactor, 0.1, 20);\n\n            let destAngle = new Vec3(289, 18.5, zoom);\n            let destPos = bb.center();\n\n            let camInitial: ICameraPos = { angle: state.camera.angle, center: state.camera.center };\n            let camFinal: ICameraPos = { angle: destAngle, center: destPos };\n\n            let lerpDist = Math.max(camFinal.angle.dist(camInitial.angle), camFinal.center.dist(camInitial.center));\n            let duration = clamp(lerpDist * 1, 200, 2000); // Math.min(lerpDist * 0.1, 1.0);\n            // compute camera target\n            // lerp to target\n            if (lerpDist > 0.01) {\n                mvmt.cameraLerp = { camInitial, camFinal, duration, t: 0 };\n            }\n        }\n        // if we're at a new depth, we need to reset the focus\n    }\n\n    if (current.level) {\n        iterNavLevels(current.level, (level) => {\n            if (level.block) {\n                level.block.highlight = 0.2;\n            }\n        });\n\n        for (let level of [current.level, ...current.parents])\n        if (level.label) {\n            level.label.visible = 1.0;\n        }\n    }\n\n    if (mvmt.cameraLerp) {\n        let lerp = mvmt.cameraLerp;\n        lerp.t += view.dt;\n        if (lerp.t >= lerp.duration) {\n             mvmt.cameraLerp = null;\n             lerp.t = lerp.duration;\n        }\n        let t = lerp.t / lerp.duration;\n        state.camera.angle = lerp.camInitial.angle.lerp(lerp.camFinal.angle, t);\n        state.camera.center = lerp.camInitial.center.lerp(lerp.camFinal.center, t);\n        state.markDirty();\n    }\n\n    // state.display.lines.push('Level: ' + current.level?.name);\n}\n\nfunction constructNavLevels(model: IGptModelLayout) {\n\n    function makeRow(children: INavLevel[]): void {\n        for (let i = 0; i < children.length - 1; i++) {\n            children[i].right = children[i + 1];\n            children[i + 1].left = children[i];\n        }\n    }\n\n    function makeCol(children: INavLevel[]): void {\n        for (let i = 0; i < children.length - 1; i++) {\n            children[i].down = children[i + 1];\n            children[i + 1].up = children[i];\n        }\n    }\n\n    let inputToks: INavLevel = {\n        name: \"Input Tokens\",\n        block: model.idxObj,\n    }\n    let tokenEmbeds: INavLevel = {\n        name: \"Token Embeddings\",\n        block: model.tokEmbedObj,\n    };\n    let inputEmbeds: INavLevel = {\n        name: \"Input Embeddings\",\n        block: model.residual0,\n    };\n    let posEmbeds: INavLevel = {\n        name: \"Position Embeddings\",\n        block: model.posEmbedObj,\n    };\n\n    makeRow([tokenEmbeds, inputEmbeds, posEmbeds]);\n    makeCol([inputToks, tokenEmbeds]);\n    makeCol([inputToks, posEmbeds]);\n    makeCol([inputToks, inputEmbeds]); // this one wins for inputToks->down\n\n    let embeddings: INavLevel = {\n        name: \"Embedding\",\n        label: model.embedLabel,\n        zoomLimit: true,\n        children: [inputToks, tokenEmbeds, inputEmbeds, posEmbeds],\n    };\n\n    function makeLayerNorm(name: string, ln: IGptLayerNormLayout): INavLevel {\n        let agg: INavLevel = { name: \"LN Agg\", block: ln.lnAgg1 };\n        let norm: INavLevel = { name: \"LN Normalized\", block: ln.lnResid };\n        let bias: INavLevel = { name: \"LN Bias\", block: ln.lnSigma };\n        let weight: INavLevel = { name: \"LN Weight\", block: ln.lnMu };\n        makeCol([agg, norm]);\n        makeRow([weight, bias, norm]);\n        return {\n            name: \"Layer Norm\",\n            children: [agg, norm, bias, weight],\n        };\n    }\n\n    let transformers: INavLevel[] = model.blocks.map((block, i) => {\n        let ln1 = makeLayerNorm(\"LN1\", block.ln1);\n\n        function makeHead(head: IGptModelLayout['blocks'][0]['heads'][0], idx: number) {\n\n            let qRow: INavLevel[] = [\n                { name: \"Q Bias\", block: head.qBiasBlock },\n                { name: \"Q Weight\", block: head.qWeightBlock },\n                { name: \"Q Vectors\", block: head.qBlock },\n            ];\n            let kRow: INavLevel[] = [\n                { name: \"K Bias\", block: head.kBiasBlock },\n                { name: \"K Weight\", block: head.kWeightBlock },\n                { name: \"K Vectors\", block: head.kBlock },\n            ];\n\n            let vRow: INavLevel[] = [\n                { name: \"V Bias\", block: head.vBiasBlock },\n                { name: \"V Weight\", block: head.vWeightBlock },\n                { name: \"V Vectors\", block: head.vBlock },\n            ];\n\n            makeRow(qRow);\n            makeRow(kRow);\n            makeRow(vRow);\n\n            let attnSm: INavLevel = { name: \"Attention Softmax\", block: head.attnMtxSm };\n            let attnAgg1: INavLevel = { name: \"Attention Agg 1\", block: head.attnMtxAgg1 };\n            let attnAgg2: INavLevel = { name: \"Attention Agg 2\", block: head.attnMtxAgg2 };\n            let attn: INavLevel = { name: \"Attention Matrix\", block: head.attnMtx };\n            let attnOut: INavLevel = { name: \"Attention Output\", block: head.vOutBlock };\n\n            makeCol([qRow[0], kRow[0], vRow[0], attnSm]);\n            makeCol([qRow[1], kRow[1], vRow[1], attnSm]);\n            makeCol([qRow[2], kRow[2], vRow[2], attn, attnOut]);\n            makeRow([attnSm, attnAgg1, attnAgg2, attn]);\n            attnAgg1.up = vRow[1];\n            attnAgg2.up = vRow[1];\n\n            return {\n                name: \"Head \" + idx,\n                children: [...qRow, ...kRow, ...vRow, attnSm, attnAgg1, attnAgg2, attn, attnOut],\n            };\n        }\n\n        let heads: INavLevel = {\n            name: \"Heads\",\n            childDir: \"row\",\n            children: block.heads.map(makeHead).reverse(), // We'll fill this in later\n        };\n\n        let projection: INavLevel = {\n            name: \"Projection\",\n            children: [\n                { name: \"Projection Bias\", block: block.projBias },\n                { name: \"Projection Weight\", block: block.projWeight },\n                { name: \"Projection Output\", block: block.attnOut },\n            ],\n        };\n\n        let attnOutput: INavLevel = {\n            name: \"Self-Attention Output\",\n            block: block.attnResidual,\n        };\n\n        // forms a square\n        makeCol([heads, projection]);\n        makeCol([ln1, attnOutput]);\n        makeRow([heads, ln1]);\n        makeRow([projection, attnOutput]);\n\n        let selfAttention: INavLevel = {\n            name: \"Self-Attention\",\n            label: block.selfAttendLabel,\n            children: [ln1, heads, projection, attnOutput]\n        };\n\n        let ln2 = makeLayerNorm(\"LN2\", block.ln2);\n        let fc1: INavLevel = {\n            name: \"MLP FC\", // and activation\n            children: [\n                { name: \"FC Bias\", block: block.mlpFcBias },\n                { name: \"FC Weight\", block: block.mlpFcWeight },\n                { name: \"FC Output\", block: block.mlpFc },\n            ],\n        };\n        let act: INavLevel = {\n            name: \"MLP Activation\",\n            block: block.mlpAct,\n        };\n        let fc2: INavLevel = {\n            name: \"MLP Projection\",\n            children: [\n                { name: \"FC Bias\", block: block.mlpProjBias },\n                { name: \"FC Weight\", block: block.mlpProjWeight },\n                { name: \"FC Output\", block: block.mlpResult },\n            ]\n        };\n        let mlpResidual: INavLevel = {\n            name: \"MLP Residual\",\n            block: block.mlpResidual,\n        };\n\n        let mlp: INavLevel = {\n            name: \"MLP\",\n            label: block.mlpLabel,\n            children: [ln2, fc1, act, fc2, mlpResidual],\n        };\n\n        return {\n            name: `Transformer ${i}`,\n            label: block.transformerLabel,\n            childDir: \"col\",\n            children: [selfAttention, mlp],\n        };\n    });\n\n    let outputs: INavLevel = {\n\n    };\n\n    let topLevel: INavLevel = {\n        name: \"nanoGPT\",\n        childDir: \"col\",\n        children: [embeddings, ...transformers, outputs],\n    };\n\n    function updateChildDirs(level: INavLevel) {\n        if (!level.children) {\n            return;\n        }\n        if (level.childDir === \"col\") {\n            makeCol(level.children);\n        } else if (level.childDir === \"row\") {\n            makeRow(level.children);\n        }\n        level.childDir = undefined;\n        level.children.forEach(updateChildDirs);\n    }\n    updateChildDirs(topLevel);\n\n    return topLevel;\n}\n\nexport const MovementControls: React.FC<{}> = () => {\n    let [controlsEl, setControlsEl] = useState<HTMLDivElement | null>(null);\n    let progState = useProgramState();\n\n    // ensure we can handle these touch events locally\n    useTouchEvents(controlsEl, 0, { alwaysSendDragEvent: true }, (ev) => ev.stopImmediatePropagation());\n\n    function handleDir(ev: React.MouseEvent, action: MovementAction) {\n        progState.movement.action = action;\n        progState.markDirty();\n    }\n\n    function makeButton(action: MovementAction, icon: IconDefinition, isArrow: boolean = false) {\n        return <button className={clsx(s.control, isArrow && s.arrow)} onClick={ev => handleDir(ev, action)}><FontAwesomeIcon icon={icon} /></button>;\n    }\n\n    return <div ref={setControlsEl} className={s.controls}>\n        {makeButton(MovementAction.In, faMagnifyingGlassPlus)}\n        {makeButton(MovementAction.Up, faArrowUp, true)}\n        {makeButton(MovementAction.Out, faMagnifyingGlassMinus)}\n\n        {makeButton(MovementAction.Left, faArrowLeft, true)}\n        {makeButton(MovementAction.Focus, faCircleDot)}\n        {makeButton(MovementAction.Right, faArrowRight, true)}\n\n        <div />\n        {makeButton(MovementAction.Down, faArrowDown, true)}\n        {makeButton(MovementAction.Expand, faExpand)}\n    </div>;\n};\n\nfunction iterNavLevels(level: INavLevel, f: (level: INavLevel) => void) {\n    if (level.children) {\n        level.children.forEach(child => iterNavLevels(child, f));\n    }\n    f(level);\n}\n/*\nThe movement controls are a good idea I think. What else do I need to get this to completion?\n\n- Tidy up the DOM/css, make it fit on mobile well, being careful with screen real estate\n- Improve drag controls around the screen, and also make it discoverable\n- Improve attention for the guide, and finish remaining guides\n- Embed within a personal webpage website\n- Fix camera + bugs wrt guides\n- Think about adding blurred lines behind the data-lines (effectively drop shadows)\n    - But will require supporting nice big-width lines to get the glow effect working\n    - Not 100% sure this is possible, but worth trying\n-\n\n*/\n","import { useEffect as useLayoutEffect, useState } from \"react\";\nimport { Vec3 } from \"./vector\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport interface ILayout {\n    width: number;\n    height: number;\n    isDesktop: boolean;\n    isPhone: boolean;\n}\n\nexport function useScreenLayout() {\n    let [layout, setLayout] = useState<ILayout>({ width: 0, height: 0, isDesktop: true, isPhone: false });\n\n    useLayoutEffect(() => {\n        // check the media queries that we use in css land\n        let mediaQuery = window.matchMedia('screen and (max-width: 800px)');\n\n        function handleResize() {\n            setLayout({\n                width: window.innerWidth,\n                height: window.innerHeight,\n                isDesktop: !mediaQuery.matches,\n                isPhone: mediaQuery.matches,\n            });\n        }\n\n        handleResize();\n\n        window.addEventListener('resize', handleResize);\n        mediaQuery.addEventListener('change', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            mediaQuery.removeEventListener('change', handleResize);\n        };\n    }, []);\n\n    return layout;\n}\n\nexport function useResizeChangeHandler(el: HTMLElement | undefined | null, handler: (size: Vec3, bcr: DOMRect) => void) {\n    let handlerRef = useFunctionRef(handler);\n    useLayoutEffect(() => {\n        if (!el) return;\n        function handleResize() {\n            let bcr = el!.getBoundingClientRect();\n            handlerRef.current(new Vec3(bcr.width, bcr.height, 0), bcr);\n        }\n        let observer = new ResizeObserver(handleResize);\n        observer.observe(el);\n        handleResize();\n        return () => observer.disconnect();\n    }, [el, handlerRef]);\n}\n","import clsx from \"clsx\";\nimport React, { useState } from \"react\";\nimport { clamp } from \"./data\";\nimport { useCombinedMouseTouchDrag } from \"./pointer\";\n\nexport const Resizer: React.FC<{\n    id: string;\n    className?: string;\n    vertical?: boolean;\n    defaultFraction?: number;\n    children: React.ReactNode[];\n}> = ({ id, className, children, vertical, defaultFraction }) => {\n\n    let [parentEl, setParentEl] = useState<HTMLElement | null>(null);\n    let [sliderHitEl, setSliderHitEl] = useState<HTMLElement | null>(null);\n    let childrenArr = React.Children.toArray(children).filter(a => a);\n    let firstChild = childrenArr[0] as React.ReactElement;\n    let scndChild = childrenArr[1] as React.ReactElement;\n\n    let [fraction, setFraction] = useState(defaultFraction ?? 0.4);\n\n    let [, setDragStart] = useCombinedMouseTouchDrag(sliderHitEl, () => fraction, (ev, ds, end) => {\n        let parentBcr = parentEl!.getBoundingClientRect();\n        let deltaPx = vertical ? ev.clientY - ds.clientY : ev.clientX - ds.clientX;\n        let fullSizePx = vertical ? parentBcr.height : parentBcr.width;\n        let newFraction = clamp(ds.data + deltaPx / fullSizePx, 0, 1);\n        setFraction(newFraction);\n        ev.preventDefault();\n        ev.stopPropagation();\n    });\n\n    function handleMouseDown(ev: React.MouseEvent) {\n        setDragStart(ev);\n        ev.stopPropagation();\n        ev.preventDefault();\n    }\n\n    let pct = (fraction * 100) + '%';\n    let invPct = ((1 - fraction) * 100) + '%';\n    let hasBothChildren = firstChild && scndChild;\n\n    return <div ref={setParentEl} className={clsx(\"relative flex\", className, vertical ? 'flex-col' : 'flex-row')}>\n        {firstChild && <div className=\"flex flex-initial overflow-hidden\" style={{ flexBasis: hasBothChildren ? pct : '100%' }}>\n            {firstChild}\n        </div>}\n        {scndChild && <div className=\"flex flex-initial overflow-hidden\" style={{ flexBasis: hasBothChildren ? invPct : '100%' }}>\n            {scndChild}\n        </div>}\n        {hasBothChildren && <>\n            <div\n                ref={setSliderHitEl}\n                className={clsx(\"absolute\", vertical ? \"w-full cursor-ns-resize h-4\" : \"h-full cursor-ew-resize w-4\")}\n                style={{ transform: `translate${vertical ? 'Y' : 'X'}(-50%)`, top: vertical ? pct : undefined, left: vertical ? undefined : pct }}\n                onMouseDown={handleMouseDown}>\n            </div>\n            <div\n                className={clsx(\"absolute bg-slate-200 pointer-events-none\", vertical ? \"w-full h-0 border-t\" : \"h-full w-0 border-l\")}\n                style={{ transform: `translate${vertical ? 'Y' : 'X'}(-50%)`, top: vertical ? pct : undefined, left: vertical ? undefined : pct }}>\n            </div>\n        </>}\n    </div>;\n};\n","import React from 'react';\nimport { useProgramState } from '../Sidebar';\nimport clsx from 'clsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExpand, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\nimport { Vec3 } from '@/src/utils/vector';\nimport { Mat4f } from '@/src/utils/matrix';\n\nexport const ModelSelectorToolbar: React.FC<{\n}> = () => {\n    let progState = useProgramState();\n\n    function makeButton(egIndex: number) {\n\n        let example = progState.examples[egIndex] ?? progState.mainExample;\n\n        let isEnabled = example.enabled;\n        let isActive = progState.currExampleId === egIndex;\n\n        function handleClick() {\n            if (!isEnabled) {\n                example.enabled = true;\n            }\n            progState.currExampleId = egIndex;\n            progState.camera.desiredCamera = example.camera;\n            progState.markDirty();\n        }\n\n        return <div className={clsx('m-2 p-2 rounded shadow cursor-pointer hover:bg-blue-300', isActive ? 'bg-blue-200' : 'bg-white')} onClick={handleClick}>\n            {example.name}\n        </div>;\n    }\n\n    function onExpandClick() {\n        let example = progState.examples[progState.currExampleId] ?? progState.mainExample;\n        progState.camera.desiredCamera = example.camera;\n        progState.markDirty();\n    }\n\n    function onMagnifyClick() {\n        let example = progState.examples[progState.currExampleId] ?? progState.mainExample;\n        let layout = example.layout ?? progState.layout;\n\n        // new Vec3(3.347, 48.000, -2.634), new Vec3(270.000, 4.500, 1.199)\n\n        // new Vec3(-1.771, 0.750, -4.470), new Vec3(270.000, 4.500, 0.739)\n\n        let obj = layout.residual0;\n        let modelTarget = new Vec3(obj.x, obj.y, obj.z);\n        let modelMtx = progState.camera.modelMtx.mul(Mat4f.fromTranslation(example.offset))\n\n        let center = modelMtx.mulVec3Proj(modelTarget);\n        let zoom = progState.currExampleId === -1 ? 0.7 : 4;\n        progState.camera.desiredCamera = {\n            center, angle: new Vec3(270, 4.5, zoom),\n        };\n        progState.markDirty();\n\n    }\n\n    return <div className='absolute top-0 left-0 flex flex-col'>\n        <div className='mt-2 ml-2 flex flex-row'>\n            {makeButton(0)}\n            {makeButton(-1)}\n            {makeButton(1)}\n            {makeButton(2)}\n        </div>\n        <div className='ml-2 flex flex-row'>\n            <div className={clsx('m-2 p-2 bg-white min-w-[2rem] flex justify-center rounded shadow cursor-pointer hover:bg-blue-300')} onClick={onExpandClick}>\n                <FontAwesomeIcon icon={faExpand} />\n            </div>\n            <div className={clsx('m-2 p-2 bg-white min-w-[2rem] flex justify-center rounded shadow cursor-pointer hover:bg-blue-300')} onClick={onMagnifyClick}>\n                <FontAwesomeIcon icon={faMagnifyingGlass} />\n            </div>\n        </div>\n    </div>;\n\n};\n","'use client';\n\nimport React, { useContext, useEffect, useLayoutEffect, useState } from 'react';\nimport { IDataAndModel, IModelState, initModel } from './GptModel';\nimport s from './LayerView.module.scss';\nimport { IRenderState, IRenderView } from './render/modelRender';\nimport { fetchFontAtlasData, IFontAtlasData } from './render/fontRender';\nimport { Random } from '@/src/utils/random';\nimport { ITensorSet, TensorF32 } from '@/src/utils/tensor';\nimport { ProgramStateContext, WalkthroughSidebar } from './Sidebar';\nimport { initProgramState, IProgramState, runProgram } from './Program';\nimport { CanvasEventSurface } from './CanvasEventSurface';\nimport { Vec3 } from '@/src/utils/vector';\nimport { loadNativeBindings } from './NativeBindings';\nimport { constructModel, createGpuModelForWasm } from './GptModelWasm';\nimport { MovementAction } from './components/MovementControls';\nimport { useScreenLayout } from '@/src/utils/layout';\nimport { jumpPhase } from './Commentary';\nimport { WelcomePopup } from './WelcomePopup';\nimport { KeyboardManagerContext, KeyboardOrder, useGlobalKeyboard } from '@/src/utils/keyboard';\nimport { Resizer } from '../utils/Resizer';\nimport { ModelSelectorToolbar } from './components/ModelSelectorToolbar';\n\nasync function fetchTensorData(url: string): Promise<ITensorSet> {\n    let resp = await fetch(url);\n    let data = await resp.json();\n    for (let k in data) {\n        if (data[k].shape) {\n            data[k] = TensorF32.fromJson(data[k]);\n        }\n    }\n    return data;\n}\n\nexport function LayerView() {\n    let [canvasEl, setCanvasEl] = useState<HTMLCanvasElement | null>(null);\n    let [dataAndModel, setDataAndModel] = useState<IDataAndModel | null>(null);\n    let [canvasRender, setCanvasRender] = useState<CanvasRender | null>(null);\n    let [fontAtlasData, setFontAtlasData] = useState<IFontAtlasData | null>(null);\n    let layout = useScreenLayout();\n    let keyboardManager = useContext(KeyboardManagerContext);\n\n    function handleCopyCamera(ev: React.MouseEvent) {\n        let camera = canvasRender?.progState.camera;\n        if (!camera) {\n            return;\n        }\n\n        let vecToString = (vec: Vec3) => `new Vec3(${vec.x.toFixed(3)}, ${vec.y.toFixed(3)}, ${vec.z.toFixed(3)})`;\n\n        let cameraStr = `${vecToString(camera.center)}, ${vecToString(camera.angle)}`;\n\n        let el = document.createElement('textarea');\n        el.value = cameraStr;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    useGlobalKeyboard(KeyboardOrder.MainPage, (ev: KeyboardEvent) => {\n        if (!canvasRender?.progState) {\n            return;\n        }\n        let key = ev.key.toLowerCase();\n        let wt = canvasRender.progState.walkthrough;\n        let mvmt = canvasRender.progState.movement;\n        if (ev.key === ' ') {\n            if (wt.time >= wt.phaseLength) {\n                jumpPhase(wt, 1);\n                wt.time = 0;\n            } else {\n                wt.running = !wt.running;\n            }\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'Backspace' || ev.key === 'Delete') {\n            wt.running = false;\n            wt.time = 0;\n            canvasRender.markDirty();\n        }\n\n        if (ev.key === 'ArrowLeft' || key === 'a') {\n            mvmt.action = MovementAction.Left;\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'ArrowRight' || key === 'd') {\n            mvmt.action = MovementAction.Right;\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'ArrowUp' || key === 'w') {\n            mvmt.action = MovementAction.Up;\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'ArrowDown' || key === 's') {\n            mvmt.action = MovementAction.Down;\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'PageUp' || key === 'q') {\n            mvmt.action = MovementAction.In;\n            canvasRender.markDirty();\n        }\n        if (ev.key === 'PageDown' || key === 'e') {\n            mvmt.action = MovementAction.Out;\n            canvasRender.markDirty();\n        }\n        if (key === 'r') {\n            mvmt.action = MovementAction.Expand;\n            canvasRender.markDirty();\n        }\n        if (key === 'f') {\n            mvmt.action = MovementAction.Focus;\n            canvasRender.markDirty();\n        }\n\n        if (ev.key === ' ') {\n            ev.preventDefault();\n        }\n    });\n\n    useEffect(() => {\n        document.addEventListener('keydown', keyboardManager.handleKey);\n        return () => {\n            document.removeEventListener('keydown', keyboardManager.handleKey);\n        };\n    }, [keyboardManager]);\n\n    useEffect(() => {\n        let stale = false;\n        async function getData() {\n            let dataP = fetchTensorData('gpt-nano-sort-t0-partials.json');\n            let modelP = fetchTensorData('gpt-nano-sort-model.json');\n            let nativeBindingsP = loadNativeBindings();\n            let [data, model, native] = await Promise.all([dataP, modelP, nativeBindingsP]);\n            if (stale) return;\n            setDataAndModel({ data, model, native });\n        }\n\n        getData();\n\n        return () => { stale = true; };\n    }, []);\n\n    useEffect(() => {\n        let stale = false;\n        async function getData() {\n            let data = await fetchFontAtlasData();\n            if (stale) return;\n            setFontAtlasData(data);\n        }\n\n        getData();\n\n        return () => { stale = true; };\n    }, []);\n\n    useEffect(() => {\n        if (canvasEl && fontAtlasData) {\n            let canvasRenderLocal = new CanvasRender(canvasEl, null!, fontAtlasData);\n            let resizeObserver = new ResizeObserver(() => {\n                canvasRenderLocal.canvasSizeDirty = true;\n                canvasRenderLocal.markDirty();\n            });\n            let handleWheel = (ev: WheelEvent) => ev.preventDefault();\n            setCanvasRender(canvasRenderLocal);\n            resizeObserver.observe(canvasEl);\n            canvasEl.addEventListener('wheel', handleWheel, { passive: false });\n            return () => {\n                canvasEl!.removeEventListener('wheel', handleWheel);\n                canvasRenderLocal.destroy();\n                resizeObserver.disconnect();\n            };\n        } else {\n            setCanvasRender(null);\n        }\n    }, [canvasEl, fontAtlasData]);\n\n    useEffect(() => {\n        canvasRender?.setData({ dataAndModel });\n    }, [canvasRender, dataAndModel]);\n\n    useLayoutEffect(() => {\n        if (canvasRender) {\n            canvasRender.progState.pageLayout = layout;\n            canvasRender.markDirty();\n        }\n    }, [canvasRender, layout]);\n\n    let sidebar = canvasRender && <div className={s.sidebar}>\n        <ProgramStateContext.Provider value={canvasRender.progState}>\n            <WalkthroughSidebar />\n        </ProgramStateContext.Provider>\n    </div>;\n\n    let mainView = <div className={s.canvasWrap}>\n        <canvas\n            className={s.canvas}\n            ref={setCanvasEl}\n        />\n        {canvasRender && !canvasRender.progState.render && <div className='absolute flex flex-col items-center w-full h-full justify-center'>\n            <div className='text-2xl'>This application requires a WebGL2 capable browser.</div>\n            <div className='text-lg mt-2'>Please try the latest version of Chrome or Firefox.</div>\n        </div>}\n        {/* <div className={s.cursorFollow} style={{ top: pointPos.y, left: pointPos.x }} /> */}\n        {canvasRender && <ProgramStateContext.Provider value={canvasRender.progState}>\n            <CanvasEventSurface>\n                {/* <MovementControls /> */}\n            </CanvasEventSurface>\n            {/* <WelcomePopup /> */}\n            {/* <div className=\"absolute bottom-0 right-0 m-5 bg-white rounded border\">\n                <button className='hover:bg-blue-400' onClick={handleCopyCamera}>\n                    Copy Camera\n                </button>\n            </div> */}\n            <ModelSelectorToolbar />\n        </ProgramStateContext.Provider>}\n    </div>;\n\n    return <div className={s.view}>\n        <Resizer id={\"llm-sidebar\"} className={\"flex-1\"} vertical={!layout.isDesktop} defaultFraction={0.4}>\n            {layout.isDesktop && sidebar}\n            {mainView}\n            {!layout.isDesktop && sidebar}\n        </Resizer>\n    </div>;\n}\n\ninterface ICanvasData {\n    dataAndModel: IDataAndModel | null;\n}\n\nclass CanvasRender {\n    renderState: IRenderState;\n    progState: IProgramState;\n    modelState: IModelState | null = null;\n    random: Random;\n    stopped = false;\n    canvasSizeDirty = true;\n\n    constructor(canvasEl: HTMLCanvasElement, private canvasData: ICanvasData, fontAtlasData: IFontAtlasData) {\n        this.progState = initProgramState(canvasEl, fontAtlasData);\n        this.progState.markDirty = this.markDirty;\n        this.progState.walkthrough.markDirty = this.markDirty;\n        this.renderState = this.progState.render;\n        this.random = new Random(4);\n    }\n\n    destroy() {\n        this.stopped = true;\n    }\n\n    setData(data: ICanvasData) {\n        this.canvasData = data;\n\n        if (data.dataAndModel && !this.progState.gptGpuModel && this.progState.render) {\n            this.progState.gptGpuModel = initModel(this.renderState, data.dataAndModel, 1);\n            this.progState.native = data.dataAndModel.native;\n            this.progState.wasmGptModel = constructModel(data.dataAndModel.model, data.dataAndModel.model.config, data.dataAndModel.native);\n            this.progState.jsGptModel = createGpuModelForWasm(this.renderState.gl, data.dataAndModel.model.config);\n            // initWebGpu();\n            // setModelInputData(this.renderState, this.progState.gptGpuModel, this.random);\n            // runModel(this.renderState, this.progState.gptGpuModel);\n        }\n        this.markDirty();\n    }\n\n    prevTime: number = performance.now();\n    rafHandle: number = 0;\n    isDirty = false;\n    isWaitingForSync = false;\n\n    markDirty = () => {\n        if (!this.canvasData || this.stopped) {\n            return;\n        }\n\n        this.isDirty = true;\n        if (!this.rafHandle) {\n            this.prevTime = performance.now();\n            this.rafHandle = requestAnimationFrame(this.loop);\n        }\n    }\n\n    loop = (time: number) => {\n        if (!(this.isDirty || this.isWaitingForSync) || this.stopped) {\n            this.rafHandle = 0;\n            return;\n        }\n        let wasDirty = this.isDirty;\n\n        this.isDirty = false;\n        this.isWaitingForSync = false;\n\n        let dt = time - this.prevTime;\n        this.prevTime = time;\n        if (dt < 8) dt = 16; // sometimes we get -ve dt due to perf.now() vs requestAnimationFrame() timing, so put to 16ms in that case\n\n        // we separate waitingForSync from dirty, so we don't have to render if we're only waiting for sync\n        this.checkSyncObjects();\n        let prevSyncCount = this.progState.render?.syncObjects.length ?? 0;\n\n        if (wasDirty || this.isDirty) {\n            this.render(time, dt);\n        }\n\n        let newSyncCount = this.progState.render?.syncObjects.length ?? 0;\n        if (newSyncCount !== prevSyncCount) {\n            this.isWaitingForSync = true;\n        }\n\n        this.rafHandle = requestAnimationFrame(this.loop);\n    }\n\n    checkSyncObjects() {\n        if (!this.progState.render) {\n            return;\n        }\n\n        let gl = this.renderState.gl;\n        let objs = this.progState.render.syncObjects;\n        let anyToRemove = false;\n\n        for (let i = 0; i < objs.length; i++) {\n            let obj = objs[i];\n            if (obj.isReady) {\n                anyToRemove = true;\n                continue;\n            }\n            let syncStatus = gl.clientWaitSync(obj.sync, 0, 0);\n            if (syncStatus === gl.TIMEOUT_EXPIRED) {\n                this.isWaitingForSync = true;\n            } else {\n                obj.isReady = true;\n                obj.elapsedMs = performance.now() - obj.startTime;\n                gl.deleteSync(obj.sync);\n                anyToRemove = true;\n            }\n        }\n        if (anyToRemove) {\n            this.progState.render.syncObjects = objs.filter(o => !o.isReady);\n            this.markDirty();\n        }\n    }\n\n    render(time: number, dt: number) {\n        if (!this.progState.render) {\n            return;\n        }\n\n        let canvasEl = this.renderState.canvasEl;\n\n        if (this.canvasSizeDirty) {\n            let bcr = canvasEl.getBoundingClientRect();\n            let scale = window.devicePixelRatio;\n            canvasEl.width = bcr.width * scale;\n            canvasEl.height = bcr.height * scale;\n            this.progState.render.size = new Vec3(bcr.width, bcr.height);\n            this.canvasSizeDirty = false;\n        }\n\n        let view: IRenderView = { time, dt, markDirty: this.markDirty };\n        runProgram(view, this.progState);\n        this.progState.htmlSubs.notify();\n    }\n\n}\n","import React, { useReducer, useState } from 'react';\nimport s from './PhaseTimeline.module.scss';\nimport { useProgramState } from './Sidebar';\nimport { clamp } from '@/src/utils/data';\nimport { useCombinedMouseTouchDrag } from '@/src/utils/pointer';\nimport { eventEndTime, ITimeInfo } from './walkthrough/WalkthroughTools';\n\nexport const PhaseTimeline: React.FC = () => {\n    let progState = useProgramState();\n    let walkthrough = progState.walkthrough;\n    let [baseEl, setBaseEl] = useState<HTMLDivElement | null>(null);\n    let [caretHitEl, setCaretHitEl] = useState<HTMLDivElement | null>(null);\n    let [, refresh] = useReducer((a: any) => a + 1, 0);\n\n    let camera = progState.camera;\n    let totalTime = walkthrough.phaseLength;\n\n    let toFract = (v: number) => clamp(v / totalTime, 0, 1);\n\n    let [dragStart, setDragStart] = useCombinedMouseTouchDrag<number>(caretHitEl, () => walkthrough.time, function handleMove(ev, ds) {\n        let dy = ev.clientY - ds.clientY;\n        let len = baseEl!.clientHeight;\n        walkthrough.time = clamp(ds.data + dy / len * totalTime, 0, totalTime);\n        walkthrough.running = false;\n        ev.preventDefault();\n        ev.stopPropagation();\n        walkthrough.markDirty();\n        refresh();\n    });\n\n    return <div className={s.timelineBase} ref={setBaseEl}>\n        <div className={s.timelineLine} />\n        {walkthrough.times.map((t, i) => {\n            return <div\n                key={i}\n                className={s.timelineEvt}\n                style={{ top: `${toFract(t.start) * 100}%`, height: `${toFract(t.duration) * 100}%` }}>\n                <div className={s.timelineEvtStart} />\n                <div className={s.timelineEvtEnd} />\n            </div>;\n        })}\n        <div className={s.timelineCaret} style={{ top: `${toFract(walkthrough.time) * 100}%` }} />\n        <div ref={setCaretHitEl} className={s.timelineCaretHit} style={{ top: `${toFract(walkthrough.time) * 100}%` }} onMouseDown={(ev) => {\n            ev.preventDefault();\n            ev.stopPropagation();\n            setDragStart(ev);\n        }}/>\n    </div>;\n}\n\n\nexport const PhaseTimelineHoriz: React.FC<{ times: ITimeInfo[] }> = ({ times }) => {\n    let progState = useProgramState();\n    let wt = progState.walkthrough;\n    let [baseEl, setBaseEl] = useState<HTMLDivElement | null>(null);\n    let [caretHitEl, setCaretHitEl] = useState<HTMLDivElement | null>(null);\n    let [, refresh] = useReducer((a: any) => a + 1, 0);\n\n    let timeOffset = times[0].start;\n    let totalTime = eventEndTime(times[times.length - 1]) - times[0].start;\n\n    let inZone = wt.time >= timeOffset && wt.time <= timeOffset + totalTime;\n\n    let toFract = (v: number) => clamp((v - timeOffset) / totalTime, 0, 1);\n\n    let [dragStart, setDragStart] = useCombinedMouseTouchDrag<number>(caretHitEl, () => wt.time, function handleMove(ev, ds) {\n        let dx = ev.clientX - ds.clientX;\n        let len = baseEl!.clientWidth;\n        wt.time = clamp(ds.data + dx / len * totalTime, timeOffset, timeOffset + totalTime);\n        wt.running = false;\n        ev.preventDefault();\n        ev.stopPropagation();\n        wt.markDirty();\n        refresh();\n    });\n\n    let [, setBaseDragStart] = useCombinedMouseTouchDrag<number>(baseEl, () => wt.time, function handleMove(ev, ds) {\n        let len = baseEl!.clientWidth;\n        let xPos = ev.clientX - baseEl!.getBoundingClientRect().left;\n        wt.time = clamp(timeOffset + xPos / len * totalTime, timeOffset, timeOffset + totalTime);\n        wt.running = false;\n        ev.preventDefault();\n        ev.stopPropagation();\n        wt.markDirty();\n        refresh();\n    });\n\n    return <div className={s.timelineBaseHoriz} ref={setBaseEl} onMouseDown={(ev) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n        setBaseDragStart(ev);\n    }}>\n        <div className={s.timelineLineHoriz} />\n        {times.map((t, i) => {\n            return <div\n                key={i}\n                className={s.timelineEvtHoriz}\n                style={{ left: `${toFract(t.start) * 100}%`, width: `${toFract(t.duration) * 100}%` }}>\n                <div className={s.timelineEvtStartHoriz} />\n                <div className={s.timelineEvtEndHoriz} />\n            </div>;\n        })}\n        {inZone && <>\n            <div className={s.timelineCaretHoriz} style={{ left: `${toFract(wt.time) * 100}%` }} />\n            <div className={s.timelineCaretHitHoriz} ref={setCaretHitEl} style={{ left: `${toFract(wt.time) * 100}%` }} onMouseDown={(ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n                setDragStart(ev);\n            }}/>\n        </>}\n    </div>;\n}\n","import { ICamera } from \"./Camera\";\n\nexport interface ISavedState {\n    phase: number;\n    phaseTime: number;\n    camera: ICamera;\n}\n\nexport let SavedState = {\n    state: null as ISavedState | null,\n};\n","import s from './Sidebar.module.scss';\nimport React, { createContext, useContext, useState } from 'react';\nimport clsx from 'clsx';\nimport { IPhaseDef } from './walkthrough/WalkthroughTools';\nimport { PhaseTimeline } from './PhaseTimeline';\nimport { Commentary } from './Commentary';\nimport { IProgramState } from './Program';\nimport { Popup, PopupPos } from '@/src/utils/Portal';\nimport { useSubscriptions } from '../utils/hooks';\n\nexport const WalkthroughSidebar: React.FC = () => {\n    let progState = useProgramState();\n    let walkthrough = progState.walkthrough;\n    let camera = progState.camera;\n    let [menuVisible, setMenuVisible] = useState(false);\n    let [menuButtonEl, setMenuButtonEl] = useState<HTMLElement | null>(null);\n\n    function handlePhaseClick(ev: React.MouseEvent, phase: IPhaseDef) {\n        if (walkthrough.phase !== phase.id) {\n            walkthrough.phase = phase.id;\n            walkthrough.time = 0;\n            walkthrough.running = false;\n            progState.markDirty();\n        }\n        setMenuVisible(false);\n        ev.preventDefault();\n    }\n\n    function stepModel() {\n        console.log('stepping model');\n        progState.stepModel = true;\n        progState.markDirty();\n    }\n\n    let menu = <>\n        <div className={s.topSplit}>\n            <div className={s.toc}>\n                {walkthrough.phaseList.map((group, i) => {\n\n                    return <div key={group.groupId} className={s.phaseGroup}>\n                        <div className={s.phaseGroupTitle}>{group.title}</div>\n\n                        {group.phases.map((phase, j) => {\n                            let active = walkthrough.phase === phase.id;\n\n                            return <div key={phase.id} className={clsx(s.phase, active && s.active)} onClick={ev => handlePhaseClick(ev, phase)}>\n                                <div className={s.phaseTitle}>{phase.title}</div>\n                            </div>;\n                        })}\n                    </div>;\n                })}\n            </div>\n            {/* <div className={s.helpers}>\n                <div className={s.camStats}>\n                    (center, center) =\n                </div>\n                <div className={s.camStats}>\n                    new {camera.center.toString(1)}, new {camera.angle.toString(1)}\n                </div>\n            </div> */}\n        </div>\n    </>;\n\n    return <div className={s.walkthrough}>\n        <div className={s.split}>\n\n            <div className={s.timelineLeft}>\n                <PhaseTimeline />\n            </div>\n\n            <div className={s.content}>\n                {/* <div className={s.menuTopBar}>\n                    <div className={s.menu} ref={setMenuButtonEl} onClick={() => setMenuVisible(a => !a)}>Menu &gt;</div>\n                    {menuVisible && <Popup targetEl={menuButtonEl} placement={PopupPos.BottomLeft} className={s.mainMenu} closeBackdrop onClose={() => setMenuVisible(false)}>\n                        {menu}\n                    </Popup>}\n                    <div onClick={() => stepModel()}>Step</div>\n                </div> */}\n                <Commentary />\n            </div>\n\n        </div>\n    </div>;\n};\n\nexport let ProgramStateContext = createContext<IProgramState>(null!);\n\nexport function useProgramState() {\n    let context = useContext(ProgramStateContext);\n    useSubscriptions(context?.htmlSubs);\n    return context;\n}\n","import { useEffect, useState } from \"react\";\nimport { StateSetter } from \"./data\";\n\nexport function iterLocalStorageEntries(cb: (key: string, value: string | null) => void) {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    if (!ls) {\n        return;\n    }\n\n    for (let i = 0; i < ls.length; i++) {\n        let key = ls.key(i);\n        if (key) {\n            let value = ls.getItem(key);\n            cb(key, value);\n        }\n    }\n}\n\nexport function readFromLocalStorage<T>(key: string): T | undefined {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    let value = ls?.getItem(key);\n    if (value) {\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n            console.error('Failed to parse local storage value:', key, value);\n        }\n    }\n    return undefined;\n}\n\nexport function writeToLocalStorage<T>(key: string, value: T) {\n    let ls = typeof window !== 'undefined' ? window.localStorage : undefined;\n    if (value) {\n        ls?.setItem(key, JSON.stringify(value));\n    } else {\n        ls?.removeItem(key);\n    }\n}\n\nexport function useLocalStorageState<T>(key: string, hydrateFromLS: (a: Partial<T> | undefined) => T): [T, StateSetter<T>] {\n    let [value, setValue] = useState(() => hydrateFromLS(readFromLocalStorage(key)));\n\n    useEffect(() => {\n        writeToLocalStorage(key, value);\n    }, [key, value]);\n\n    return [value, setValue];\n}\n","'use client';\n\nimport clsx from \"clsx\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { assignImm } from \"./data\";\nimport s from './Portal.module.scss';\n\nexport const Portal: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    let [portalEl, setPortalEl] = useState<HTMLElement | null>(null);\n    useLayoutEffect(() => {\n         setPortalEl(document.getElementById('portal-container'));\n    }, []);\n    return portalEl ? createPortal(children, portalEl) : null;\n};\n\n\nexport const FullscreenOverlay: React.FC<{\n    className?: string,\n    onClick?: React.MouseEventHandler,\n    children: React.ReactNode,\n}> = ({ className, onClick, children }) => {\n\n    function handleClick(ev: React.MouseEvent) {\n        ev.stopPropagation();\n        if (ev.target === ev.currentTarget) {\n            onClick?.(ev);\n        }\n    };\n\n    return <Portal>\n\n        <div className={clsx(s.fullscreenOverlay, className)} onClick={handleClick}>\n            {children}\n        </div>\n    </Portal>;\n}\n\nexport const ModalWindow: React.FC<{\n    className?: string,\n    backdropClassName?: string,\n    onBackdropClick?: React.MouseEventHandler,\n    children: React.ReactNode,\n}> = ({ className, backdropClassName, onBackdropClick, children }) => {\n\n    return <FullscreenOverlay className={clsx(s.modalWindowBackdrop, backdropClassName)} onClick={onBackdropClick}>\n        <div className={clsx(s.modalWindow, className)}>\n            {children}\n        </div>\n    </FullscreenOverlay>;\n}\n\nexport enum PopupPos {\n    TopLeft,\n    BottomLeft, // we position the popup below the target, and left-align it\n}\n\nexport const Popup: React.FC<{\n    targetEl: HTMLElement | null,\n    placement: PopupPos,\n    children?: React.ReactNode,\n    className?: string,\n    closeBackdrop?: boolean,\n    offsetX?: number,\n    offsetY?: number,\n    onClose?: () => void,\n}> = ({ targetEl, placement, children, className, closeBackdrop, onClose, offsetX, offsetY }) => {\n    let [popupEl, setPopupEl] = useState<HTMLElement | null>(null);\n    let targetBcr = useWatchElementRect(targetEl, true);\n    let popupBcr = useWatchElementRect(popupEl); // we don't need position info for the popup (would cause an infinite loop)\n\n    let pos = computeTransform(targetBcr, popupBcr, placement);\n\n    let el = <div ref={setPopupEl} className={clsx(s.popup, className)} style={{\n        transform: `translate(${pos.x + (offsetX ?? 0)}px, ${pos.y + (offsetY ?? 0)}px)`,\n        left: 0,\n        top: 0,\n    }}>\n        {children}\n    </div>;\n\n    function handleClick(ev: React.MouseEvent) {\n        // ensure the click was directly on the backdrop & not a child\n        if (ev.target === ev.currentTarget) {\n            onClose?.();\n        }\n    }\n\n    return <Portal>\n        {closeBackdrop ? <div\n            className={s.popupBackdrop}\n            onClick={handleClick}\n            onMouseMove={ev => ev.stopPropagation()}\n            onMouseUp={ev => ev.stopPropagation()}\n            onMouseDown={ev => ev.stopPropagation()}\n        >{el}</div> : el}\n    </Portal>;\n};\n\nfunction computeTransform(targetBcr: DOMRect | null, popupBcr: DOMRect | null, placement: PopupPos) {\n    if (!targetBcr || !popupBcr) {\n        return { x: 0, y: 0 };\n    }\n\n    let x = 0;\n    let y = 0;\n\n    switch (placement) {\n        case PopupPos.BottomLeft:\n            x = targetBcr.x;\n            y = targetBcr.bottom;\n            break;\n        case PopupPos.TopLeft:\n            x = targetBcr.x;\n            y = targetBcr.y - popupBcr.height;\n            break;\n    }\n\n    return { x, y };\n}\n\nexport function useWatchElementRect(el: HTMLElement | null, includePosition = false) {\n    let [bcr, setBcr] = useState<DOMRect | null>(null);\n\n    useLayoutEffect(() => {\n        function handleChange() {\n            let bcr = el ? el.getBoundingClientRect() : null;\n            setBcr(prev => (el && prev) ? assignImm(prev, {\n                x: includePosition ? bcr!.x : 0,\n                y: includePosition ? bcr!.y : 0,\n                width: bcr!.width,\n                height: bcr!.height,\n            }) : bcr);\n        }\n\n        if (el) {\n            let observer = new ResizeObserver(handleChange);\n            observer.observe(el);\n            handleChange();\n            return () => {\n                observer.unobserve(el);\n                setBcr(null);\n            };\n        }\n    }, [el, includePosition]);\n    return bcr;\n}\n","'use client';\n\nimport React from 'react';\nimport { faCircleQuestion } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { createContext, useContext, useEffect } from 'react';\nimport { assignImm } from '@/src/utils/data';\nimport { KeyboardOrder, useGlobalKeyboard } from '@/src/utils/keyboard';\nimport { useLocalStorageState } from '@/src/utils/localstorage';\nimport { ModalWindow } from '@/src/utils/Portal';\nimport s from './WelcomePopup.module.scss';\nimport { TocDiagram } from './components/TocDiagram';\nimport { Subscriptions, useSubscriptions } from '../utils/hooks';\n\ninterface IWelcomePopupLS {\n    visible: boolean;\n}\n\nfunction hydrateWelcomePopupLS(a?: Partial<IWelcomePopupLS>) {\n    return {\n        visible: a?.visible ?? true,\n    };\n}\n\nexport const WelcomePopup: React.FC<{}> = () => {\n    let ctx = useContext(WelcomeContext);\n    useSubscriptions(ctx.subscriptions);\n    let [welcomeState, setWelcomeState] = useLocalStorageState('welcome-popup', hydrateWelcomePopupLS);\n\n    useGlobalKeyboard(KeyboardOrder.Modal, ev => {\n\n        if (ev.key === 'Escape') {\n            hide();\n        }\n\n        ev.stopPropagation();\n    });\n\n    useEffect(() => {\n        if (ctx.forceVisible) {\n            ctx.forceVisible = false;\n            setWelcomeState(a => assignImm(a, { visible: true }));\n        }\n    }, [ctx, setWelcomeState, ctx.forceVisible]);\n\n    function hide() {\n        setWelcomeState(a => assignImm(a, { visible: false }));\n    }\n\n    if (!welcomeState.visible) {\n        return null;\n    }\n\n    return <ModalWindow className={s.modalWindow} backdropClassName={s.modalWindowBackdrop} onBackdropClick={hide}>\n        <div className={s.header}>\n            <div className={s.title}>Welcome!</div>\n        </div>\n        <div className={s.body}>\n            {/* <div className={s.image}>\n                <Image src={IntroImage} alt={\"LLM diagram\"} />\n            </div> */}\n            <div style={{ width: 600, flex: '0 0 auto' }}>\n                <TocDiagram activePhase={null} onEnterPhase={hide} />\n            </div>\n            <div className={s.text}>\n                <p>This is an interactive 3D Visualization of a Large Language Model (LLM),\n                    of the likes that powers GPT-3 & ChatGPT.</p>\n                <p>We show a very small model of the same design, to help you understand how\n                    these models work.</p>\n                <p>As well as being interactive, we provide a walkthrough of the model\n                    showing the step-by-step process of how it works, with every single add, multiply &\n                    math operation described.</p>\n            </div>\n        </div>\n        <div className={s.footer}>\n            <button className={s.button} onClick={hide}>Get Started</button>\n        </div>\n    </ModalWindow>;\n};\n\nclass WelcomeManager {\n    subscriptions = new Subscriptions();\n    forceVisible = false;\n    showWelcomeDialog() {\n        this.forceVisible = true;\n        this.subscriptions.notify();\n    }\n}\n\nlet WelcomeContext = createContext(new WelcomeManager());\n\nexport const InfoButton: React.FC<{}> = () => {\n    let ctx = useContext(WelcomeContext);\n\n    return <div onClick={() => ctx.showWelcomeDialog()} className={s.infoBtn}>\n        <FontAwesomeIcon icon={faCircleQuestion} />\n    </div>;\n};\n","import React from 'react';\nimport { DimStyle, dimStyleColor } from '../walkthrough/WalkthroughTools';\nimport { useProgramState } from '../Sidebar';\nimport { IBlkDef } from '../GptModelLayout';\nimport { isNotNil } from '@/src/utils/data';\n\nexport const DimensionText: React.FC<{\n    dim: DimStyle,\n    children?: React.ReactNode,\n    style?: React.CSSProperties,\n}> = ({ dim, style, children }) => {\n    let state = useProgramState();\n\n    function setHover(isHover: boolean) {\n        state.display.dimHover = isHover ? dim : null;\n        state.markDirty();\n    }\n\n    let isHover = state.display.dimHover === dim;\n\n    return <span\n        style={{ ...style,\n            textShadow: isHover ? `0 0 0.5em ${dimStyleColor(dim).toHexColor()}` : undefined\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        >\n            {children}\n        </span>;\n}\n\n\nexport const BlockText: React.FC<{\n    blk: IBlkDef | IBlkDef[],\n    children?: React.ReactNode,\n    style?: React.CSSProperties,\n}> = ({ blk, style, children }) => {\n    let state = useProgramState();\n    let blkArr = Array.isArray(blk) ? blk : [blk];\n    let firstBlk = blkArr[0];\n    let dimStyle = firstBlk.t === 'i' ? DimStyle.Intermediates : firstBlk.t === \"w\" ? DimStyle.Weights : DimStyle.Aggregates;\n    let color = dimStyleColor(dimStyle).toHexColor();\n\n    function setHover(isHover: boolean) {\n        state.display.blkIdxHover = isHover ? blkArr.map(a => a.idx) : null;\n        state.markDirty();\n    }\n\n    let hoverIdxs = state.display.blkIdxHover ?? [state.display.hoverTarget?.mainCube.idx].filter(isNotNil);\n\n    let isHover = hoverIdxs.length > 0 && hoverIdxs.includes(firstBlk.idx);\n\n    return <span\n        style={{\n            color: color,\n            textShadow: isHover ? `0 0 0.5em ${style?.color ?? color}` : undefined,\n            ...style,\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        >\n            {children}\n        </span>;\n}\n","import { text } from \"stream/consumers\";\nimport { dimProps, TextAlignHoriz } from \"../Annotations\";\nimport { BlKDepSpecial, BlkSpecial, cellPosition, IBlkCellDep, IBlkDef } from \"../GptModelLayout\";\nimport { getDepDotLen, getDepSrcIdx } from \"../Interaction\";\nimport { IProgramState } from \"../Program\";\nimport { drawText, IFontOpts, measureText } from \"../render/fontRender\";\nimport { addLine2, drawLineSegs, makeLineOpts } from \"../render/lineRender\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { RenderPhase } from \"../render/sharedRender\";\nimport { addPrimitiveRestart, addQuad, addVert } from \"../render/triRender\";\nimport { isNotNil } from \"@/src/utils/data\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { BoundingBox3d, Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { Colors, DimStyle, dimStyleColor, dimStyleText, dimStyleTextShort } from \"../walkthrough/WalkthroughTools\";\nimport { drawLineRect } from \"./ModelCard\";\nimport { ITextBlock, sizeBlock, layoutBlock, drawBlock, mkTextBlock, TextBlockType, drawCells, ITextBlockArgs } from \"./TextLayout\";\n\ninterface IDataFlowArgs {\n    state: IProgramState;\n    center: Vec3;\n    blk: IBlkDef;\n    destIdx: Vec3;\n    mtx: Mat4f;\n}\n\nexport function drawDataFlow(state: IProgramState, blk: IBlkDef, destIdx: Vec3, pinIdx?: Vec3) {\n    if (!blk.deps) {\n        return;\n    }\n    let prevPhase = state.render.sharedRender.activePhase;\n    state.render.sharedRender.activePhase = RenderPhase.Overlay2D;\n\n    // the point where we draw the overlay\n    pinIdx = pinIdx ?? destIdx;\n\n    let cellPos = new Vec3(\n        cellPosition(state.layout, blk, Dim.X, pinIdx.x) + state.layout.cell * 0.5,\n        cellPosition(state.layout, blk, Dim.Y, pinIdx.y) + state.layout.cell * 0.5,\n        cellPosition(state.layout, blk, Dim.Z, pinIdx.z) + state.layout.cell * 1.1,\n    );\n\n    let resMtx = new Mat4f();\n\n    let screenPos = projectToScreen(state, cellPos).round_();\n    let center = screenPos.add(new Vec3(0, -50));\n\n    let dataFlowArgs: IDataFlowArgs = {\n        state,\n        center,\n        blk,\n        destIdx,\n        mtx: resMtx,\n    }\n\n    let bb = new BoundingBox3d();\n\n    if (blk.deps.lowerTri && destIdx.x > destIdx.y) {\n        drawZeroSymbol(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.InputEmbed) {\n        bb = drawOLInputEmbed(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.LayerNorm) {\n        bb = drawLayerNorm(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.LayerNormMu) {\n        bb = drawLayerNormMuAgg(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.LayerNormSigma) {\n        bb = drawLayerNormSigmaAgg(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.SoftmaxAggMax) {\n        bb = drawSoftmaxAggMax(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.SoftmaxAggExp) {\n        bb = drawSoftmaxAggExp(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.Softmax) {\n        bb = drawSoftmax(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.Attention) {\n        bb = drawAttention(dataFlowArgs);\n\n    } else if (blk.deps.special === BlKDepSpecial.Gelu) {\n        bb = drawGeluActivation(dataFlowArgs);\n\n    // Standard ones\n    } else if (blk.deps.dot) {\n        bb = drawOLMatrixMul(dataFlowArgs);\n\n    } else if (blk.deps.add && blk.deps.add.length === 2) {\n        bb = drawResidualAdd(dataFlowArgs);\n    }\n\n    if (!bb.empty) {\n        let cellIdxBb = drawCellIndexAndValue(dataFlowArgs, bb);\n        let fullBB = new BoundingBox3d(bb.min, bb.max, cellIdxBb.min, cellIdxBb.max);\n        drawDepArrows(dataFlowArgs, fullBB);\n    }\n\n    state.render.sharedRender.activePhase = prevPhase;\n}\n\nexport function drawOLAddSymbol(args: IDataFlowArgs) {\n    let { state, center, mtx } = args;\n\n    let color = opColor;\n    let innerColor = new Vec4(1.0, 1.0, 1.0, 1).mul(0.6);\n    let width = 1;\n    let radius = 15;\n    drawCircle(state.render, center, radius, width, color, mtx);\n    drawCirclePlane(state.render, center, radius, innerColor, mtx);\n\n    let textOpts: IFontOpts = { color: color, mtx, size: 40 };\n    let tw = measureText(state.render.modelFontBuf, '+', textOpts);\n\n    drawText(state.render.modelFontBuf, '+', center.x - tw / 2, center.y - textOpts.size * 0.5, textOpts);\n}\n\nexport function drawCircle(render: IRenderState, center: Vec3, radius: number, width: number, color: Vec4, mtx: Mat4f) {\n    let nPoints = 30;\n\n    let buf = new Float32Array(nPoints * 3);\n    for (let i = 0; i < nPoints; i++) {\n        let theta = i / nPoints * Math.PI * 2;\n        buf[i * 3 + 0] = center.x + Math.cos(theta) * radius;\n        buf[i * 3 + 1] = center.y + Math.sin(theta) * radius;\n        buf[i * 3 + 2] = center.z;\n    }\n\n    drawLineSegs(render.lineRender, buf, makeLineOpts({ color, n: new Vec3(0, 0, 1), thick: width, closed: true, mtx }))\n}\n\nexport function drawCirclePlane(render: IRenderState, center: Vec3, radius: number, color: Vec4, mtx: Mat4f) {\n    let nPoints = 30;\n    let n = new Vec3(0, 0, 1);\n\n    for (let i = 0; i < nPoints + 1; i++) {\n        let theta = i / nPoints * Math.PI * 2;\n        let p = new Vec3(\n            center.x + Math.cos(theta) * radius,\n            center.y + Math.sin(theta) * radius,\n            center.z,\n        );\n\n        addVert(render.triRender, center, color, n, mtx);\n        addVert(render.triRender, p, color, n, mtx);\n    }\n    addPrimitiveRestart(render.triRender);\n}\n\nfunction projectToScreen(state: IProgramState, modelPos: Vec3) {\n    let model = state.camera.modelMtx;\n    let view = state.camera.viewMtx;\n\n    let ndc = view.mulVec3Proj(model.mulVec3Affine(modelPos));\n\n    return new Vec3(\n        (ndc.x + 1) * 0.5 * state.render.size.x,\n        (1 - ndc.y) * 0.5 * state.render.size.y,\n        0);\n}\n\nlet weightSrcColor = new Vec4(0.4, 0.4, 0.9, 1);\nlet workingSrcColor = new Vec4(0.3, 0.7, 0.3, 1);\n\nlet opColor = new Vec4(0.9, 0.9, 0.9, 1);\nlet backWhiteColor = new Vec4(0.0, 0.0, 0.0, 1).mul(1.0);\nlet nameColor = new Vec4(1.0, 1.0, 1.0, 1);\nlet embedBlockHeight = 30;\nlet tokEmbedBlockWidth = 40;\nlet posEmbedBlockWidth = 35;\n\nexport function drawOLInputEmbed(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n\n    return drawMaths(args, center, mkTextBlock({\n        opts: { color: nameColor, mtx, size: 16 },\n\n        subs: [\n            { type: TextBlockType.Custom, draw: (blk) => drawOLIndexLookup(args, blk.offset), size: new Vec3(tokEmbedBlockWidth, embedBlockHeight) },\n            { text: ' + ' },\n            { type: TextBlockType.Custom, draw: (blk) => drawOLPosEmbedLookup(args, blk.offset), size: new Vec3(posEmbedBlockWidth, embedBlockHeight) },\n        ]\n\n    }), [20, 0, 0, 0]);\n}\n\nexport function getBlockValueAtIdx(blk: IBlkDef, blkIdx: Vec3) {\n    let localBuffer = blk.access?.src.localBuffer;\n    if (!blk.access || !localBuffer) {\n        return null;\n    }\n    let bufferTex = blk.access.src;\n\n    let bufferPos = blk.access.mat.mulVec4(new Vec4(blkIdx.x, blkIdx.y, blkIdx.z, 1));\n\n    let channelIdx = blk.access.channel === 'r' ? 0 : blk.access.channel === 'g' ? 1 : blk.access.channel === 'b' ? 2 : 3;\n\n    let idx = bufferPos.y * bufferTex.width * bufferTex.channels + bufferPos.x * bufferTex.channels + channelIdx;\n\n    return localBuffer[idx];\n}\n\nexport function drawOLIndexLookup(args: IDataFlowArgs, offset: Vec3) {\n    let { state, center, destIdx, mtx } = args;\n    let tokenIdx = getBlockValueAtIdx(state.layout.idxObj, new Vec3(destIdx.x, 0, destIdx.z));\n    let tokenPct = isNotNil(tokenIdx) ? tokenIdx / (state.layout.tokEmbedObj.cx - 1) : 0.3;\n    let heightPct = destIdx.y / (state.layout.residual0.cy - 1);\n\n    let pos = center.add(new Vec3(-35, -20, 0));\n    let color = Colors.Weights;\n\n    // let tl = pos.add(new Vec3(-tokEmbedBlockWidth/2, -embedBlockHeight/2));\n    // let br = pos.add(new Vec3(tokEmbedBlockWidth/2,  embedBlockHeight/2));\n    let tl = offset;\n    let br = tl.add(new Vec3(tokEmbedBlockWidth, embedBlockHeight));\n\n    drawLineRect(state.render, tl, br, makeLineOpts({ color, mtx, n: new Vec3(0, 0, 1), thick: 0.4 }));\n\n    addQuad(state.render.triRender, tl, br, backWhiteColor, mtx);\n\n    let colW = 8;\n    let colTl = new Vec3(tl.x + lerp(0, br.x-tl.x-colW, tokenPct), tl.y);\n    let colBr = new Vec3(colTl.x + colW, br.y);\n\n    let cellTl = new Vec3(colTl.x, colTl.y + lerp(0, br.y-tl.y-colW, heightPct));\n    let cellBr = new Vec3(colBr.x, cellTl.y + colW);\n\n    addQuad(state.render.triRender, colTl, colBr, color.mul(0.3), mtx);\n    addQuad(state.render.triRender, cellTl, cellBr, color, mtx);\n\n    let lineColor = Colors.Intermediates;\n    let lineEndX = colTl.x + colW / 2;\n    let lineEndY = colTl.y - 5;\n    let lineStartX = br.x;\n    let lineHeight = 10;\n\n    let pts = new Float32Array([\n        lineStartX, lineEndY - lineHeight, 0,\n        lineEndX, lineEndY - lineHeight, 0,\n        lineEndX, lineEndY, 0,\n    ]);\n    let lineOpts = makeLineOpts({ color: lineColor, mtx, n: new Vec3(0, 0, 1), thick: 0.5 });\n    drawLineSegs(state.render.lineRender, pts, lineOpts);\n\n    drawCells(state.render, new Vec3(1, 1), new Vec3(lineStartX + 8, lineEndY - lineHeight), new Vec3(7, 7), Colors.Intermediates, mtx);\n}\n\nexport function drawOLPosEmbedLookup(args: IDataFlowArgs, offset: Vec3) {\n    let { state, center, destIdx, mtx } = args;\n    let posPct = destIdx.x / (state.layout.posEmbedObj.cx - 1);\n    let heightPct = destIdx.y / (state.layout.residual0.cy - 1);\n\n    let pos = center.add(new Vec3(35, -20, 0));\n    let color = Colors.Weights;\n\n    // let tl = pos.add(new Vec3(-posEmbedBlockWidth/2, -embedBlockHeight/2));\n    // let br = pos.add(new Vec3(posEmbedBlockWidth/2,  embedBlockHeight/2));\n    let tl = offset;\n    let br = tl.add(new Vec3(tokEmbedBlockWidth, embedBlockHeight));\n\n    drawLineRect(state.render, tl, br, makeLineOpts({ color, mtx, n: new Vec3(0, 0, 1), thick: 0.4 }));\n\n    addQuad(state.render.triRender, tl, br, backWhiteColor, mtx);\n\n    let colW = 8;\n    let colTl = new Vec3(tl.x + lerp(0, br.x-tl.x-colW, posPct), tl.y);\n    let colBr = new Vec3(colTl.x + colW, br.y);\n\n    let cellTl = new Vec3(colTl.x, colTl.y + lerp(0, br.y-tl.y-colW, heightPct));\n    let cellBr = new Vec3(colBr.x, cellTl.y + colW);\n\n    addQuad(state.render.triRender, colTl, colBr, color.mul(0.3), mtx);\n    addQuad(state.render.triRender, cellTl, cellBr, color, mtx);\n\n    let textOpts: IFontOpts = { color: new Vec4(1,1,1,1).mul(0.8), mtx, size: 20 };\n    let tw = measureText(state.render.modelFontBuf, 't', textOpts);\n\n    drawText(state.render.modelFontBuf, 't', (cellTl.x + cellBr.x) / 2 - tw / 2, colTl.y - 3 - textOpts.size, textOpts);\n}\n\n\nexport function drawOLMatrixMul(args: IDataFlowArgs) {\n    let { center, mtx, blk } = args;\n    let fontOpts = { color: opColor, mtx, size: 16 };\n\n    let hasAdd = !!blk.deps!.add;\n    let dotA = blk.deps!.dot![0];\n    let dotB = blk.deps!.dot![1];\n\n    function cellSizeAndColor(dep: IBlkCellDep) {\n        let isRow = dep.srcIdxMtx.g(0, 3) === 1.0;\n        return {\n            cellX: isRow ? 4 : 1,\n            cellY: isRow ? 1 : 4,\n            color: dep.src.t === 'w' ? weightSrcColor : workingSrcColor,\n         };\n    }\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            hasAdd ? { cellX: 1, cellY: 1, color: weightSrcColor } : null,\n            hasAdd ? { text: ' + dot(' } : { text: 'dot(' },\n            cellSizeAndColor(dotA),\n            { text: ',' },\n            cellSizeAndColor(dotB),\n            { text: ')' },\n        ].filter(isNotNil),\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nexport function drawRoundedRect(state: IRenderState, tl: Vec3, br: Vec3, color: Vec4, mtx: Mat4f, radius: number) {\n\n    if (radius === 0) {\n        addQuad(state.triRender, tl, br, color, mtx);\n        return;\n    }\n\n    radius = Math.min(radius, (br.x - tl.x) / 2, (br.y - tl.y) / 2);\n\n    let n = new Vec3(0, 0, 1);\n    let innerQuadTl = tl.add(new Vec3(radius, radius));\n    let innerQuadBr = br.sub(new Vec3(radius, radius));\n\n    // inner quad\n    addQuad(state.triRender, innerQuadTl, innerQuadBr, color, mtx);\n\n    // bottom right starting point\n    addVert(state.triRender, new Vec3(innerQuadBr.x, br.y), color, n, mtx);\n    addVert(state.triRender, new Vec3(innerQuadBr.x, innerQuadBr.y), color, n, mtx);\n\n    for (let cIdx = 0; cIdx < 4; cIdx++) {\n        let pivot = new Vec3(\n            cIdx < 2 ? innerQuadTl.x : innerQuadBr.x,\n            (cIdx + 1) % 4 < 2 ? innerQuadBr.y : innerQuadTl.y,\n        );\n\n        let startTheta = ((cIdx + 1) % 4) * Math.PI / 2;\n\n        // pivot around each of the 4 corners\n        let nRadiusVerts = 6;\n        for (let i = 0; i < nRadiusVerts + 1; i++) {\n            let pt = new Vec3(\n                pivot.x + radius * Math.cos(startTheta + i * Math.PI / nRadiusVerts / 2),\n                pivot.y + radius * Math.sin(startTheta + i * Math.PI / nRadiusVerts / 2),\n            )\n            addVert(state.triRender, pt, color, n, mtx);\n            addVert(state.triRender, pivot, color, n, mtx);\n        }\n    }\n    addPrimitiveRestart(state.triRender);\n}\n\nfunction drawMaths(args: IDataFlowArgs, bottomMiddle: Vec3, textBlk: ITextBlock, pad?: number[] | number) {\n    let { state, mtx } = args;\n\n    let value = getBlockValueAtIdx(args.blk, args.destIdx);\n\n    if (textBlk.type === TextBlockType.Line) {\n        textBlk.subs!.push(\n            mkTextBlock({ text: '  =  ', opts: textBlk.opts }),\n        );\n        if (isNotNil(value)) {\n            textBlk.subs!.push(\n                mkTextBlock({ text: value.toFixed(2), opts: textBlk.opts, size: new Vec3(35, 0), align: TextAlignHoriz.Right }),\n            );\n        }\n    }\n\n    sizeBlock(state.render, textBlk);\n\n    textBlk.offset = new Vec3(bottomMiddle.x - textBlk.size.x / 2, bottomMiddle.y - textBlk.size.y);\n\n    layoutBlock(textBlk);\n\n    let padX = 4;\n    let padY = 4;\n\n    let tl = textBlk.offset.sub(new Vec3(padX + getPad(pad, 2), padY + getPad(pad, 0)));\n    let br = textBlk.offset.add(textBlk.size).add(new Vec3(padX * 2 + getPad(pad, 1), padY + getPad(pad, 3)));\n    drawRoundedRect(state.render, tl, br, backWhiteColor, mtx, 4);\n\n    drawBlock(state.render, textBlk);\n    return new BoundingBox3d(tl, br);\n}\n\nfunction getPad(pad: number[] | number | null | undefined, dir: number) {\n    if (Array.isArray(pad)) {\n        return pad[dir];\n    } else if (typeof pad === 'number') {\n        return pad;\n    }\n    return 0;\n}\n\nfunction drawLayerNormMuAgg(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { text: 'E[', color: workingSrcColor },\n            { cellX: 1, cellY: 3, color: workingSrcColor },\n            { text: ']', color: workingSrcColor },\n\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawLayerNormSigmaAgg(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [{\n            type: TextBlockType.Sqrt,\n            subs: [\n                { type: TextBlockType.Line, subs: [\n                    { text: 'Var[', color: workingSrcColor },\n                    { cellX: 1, cellY: 3, color: workingSrcColor },\n                    { text: ']', color: workingSrcColor },\n                    { text: ' + ε' },\n                ]},\n            ],\n        }],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawLayerNorm(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let blk = mkTextBlock({\n        opts: fontOpts,\n        subs: [{\n            type: TextBlockType.Divide,\n            subs: [\n                { subs: [\n                        { cellX: 1, cellY: 1, color: workingSrcColor },\n                        { text: ' \\— ' },\n                        {\n                            type: TextBlockType.Line,\n                            rectOpts: { color: Colors.Aggregates.mul(0.8), mtx, thick: 1.0, dash: 6 },\n                            subs: [\n                                { text: 'E[', color: workingSrcColor },\n                                { cellX: 1, cellY: 3, color: workingSrcColor },\n                                { text: ']', color: workingSrcColor },\n                            ],\n                        },\n                    ],\n                },\n                {\n                    type: TextBlockType.Line,\n                    rectOpts: { color: Colors.Aggregates.mul(0.8), mtx, thick: 1.0, dash: 6 },\n                    subs: [{\n                        type: TextBlockType.Sqrt,\n                        subs: [\n                            { type: TextBlockType.Line, subs: [\n                                { text: 'Var[', color: workingSrcColor },\n                                { cellX: 1, cellY: 3, color: workingSrcColor },\n                                { text: ']', color: workingSrcColor },\n                                { text: ' + ε' },\n                            ]},\n                        ],\n                    }],\n                }]\n            },\n            { text: '  ‧ ' },\n            { text: 'γ', color: weightSrcColor },\n            { text: ' + ' },\n            { text: 'β', color: weightSrcColor },\n        ],\n    });\n\n    return drawMaths(args, center, blk);\n}\n\nfunction drawResidualAdd(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { cellX: 1, cellY: 1, opts: { ...fontOpts, color: workingSrcColor } },\n            { text: ' + ' },\n            { cellX: 1, cellY: 1, opts: { ...fontOpts, color: workingSrcColor } },\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawZeroSymbol(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { text: '-' },\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawSoftmaxAggMax(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { text: 'max(' },\n            { cellX: 3, cellY: 1, color: workingSrcColor },\n            { text: ')' },\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawSoftmaxAggExp(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { text: 'Σ', opts: { ...fontOpts, size: fontOpts.size * 1.5 } },\n            { text: 'exp(' },\n            { cellX: 1, cellY: 1, color: workingSrcColor },\n            { text: ' - ' },\n            {\n                type: TextBlockType.Line,\n                rectOpts: { color: Colors.Aggregates.mul(0.8), mtx, thick: 1.0, dash: 6 },\n                subs: [\n                    { text: 'max(' },\n                    { cellX: 3, cellY: 1, color: workingSrcColor },\n                    { text: ')' },\n                ],\n            },\n            { text: ')' },\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nfunction drawSoftmax(args: IDataFlowArgs) {\n    let { center, mtx } = args;\n    let fontOpts: IFontOpts = { color: opColor, mtx, size: 16 };\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [{\n            type: TextBlockType.Divide,\n            subs: [{\n                subs: [\n                    { text: 'exp(' },\n                    { cellX: 1, cellY: 1, color: workingSrcColor },\n                    { text: ' - ' },\n                    {\n                        rectOpts: { color: Colors.Aggregates.mul(0.8), mtx, thick: 1.0, dash: 6 },\n                        subs: [\n                            { text: 'max(' },\n                            { cellX: 3, cellY: 1, color: workingSrcColor },\n                            { text: ')' },\n                        ],\n                    },\n                    { text: ')' },\n                ],\n            }, {\n                type: TextBlockType.Line,\n                rectOpts: { color: Colors.Aggregates.mul(0.8), mtx, thick: 1.0, dash: 6 },\n                subs: [\n                    { text: 'Σ', opts: { ...fontOpts, size: fontOpts.size * 1.5 } },\n                    { text: 'exp(' },\n                    { cellX: 1, cellY: 1, color: workingSrcColor },\n                    { text: ' - ' },\n                    {\n                        type: TextBlockType.Line,\n                        subs: [\n                            { text: 'max(' },\n                            { cellX: 3, cellY: 1, color: workingSrcColor },\n                            { text: ')' },\n                        ],\n                    },\n                    { text: ')' },\n                ],\n            }],\n        }],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nexport function drawAttention(args: IDataFlowArgs) {\n    let { center, mtx, blk } = args;\n    let fontOpts = { color: opColor, mtx, size: 16 };\n\n    let dotA = blk.deps!.dot![0];\n    let dotB = blk.deps!.dot![1];\n\n    function cellSizeAndColor(dep: IBlkCellDep) {\n        let isRow = dep.srcIdxMtx.g(0, 3) === 1.0;\n        return {\n            cellX: isRow ? 4 : 1,\n            cellY: isRow ? 1 : 4,\n            color: dep.src.t === 'w' ? weightSrcColor : workingSrcColor,\n         };\n    }\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            { text: 'dot(' },\n            cellSizeAndColor(dotA),\n            { text: ',' },\n            cellSizeAndColor(dotB),\n            { text: ') / ' },\n            {\n                type: TextBlockType.Sqrt,\n                subs: [{ text: 'A' }],\n            },\n        ],\n    });\n\n    return drawMaths(args, center, textBlock);\n}\n\nexport function drawGeluActivation(args: IDataFlowArgs) {\n    let { state, center, mtx, blk, destIdx } = args;\n\n    // ugly\n    // let fontOpts = { color: opColor, mtx, size: 16 };\n    // let textBlk = mkTextBlock({\n    //     opts: fontOpts,\n    //     subs: [\n    //         { text: '0.5' },\n    //         { cellX: 1, cellY: 1, color: workingSrcColor },\n    //         { text: '(1 + tanh(' },\n    //         { type: TextBlockType.Sqrt, subs: [{ text: '2/π' }], },\n    //         { text: '(' },\n    //         { cellX: 1, cellY: 1, color: workingSrcColor },\n    //         { text: ' + 0.044715' },\n    //         { cellX: 1, cellY: 1, color: workingSrcColor },\n    //         { text: '^3)' },\n    //     ],\n    // });\n    // return drawMaths(state, center, mtx, textBlk);\n\n    let geluX = (x: number) => x * 0.5 * (1.0 + Math.tanh(Math.sqrt(2.0 / Math.PI) * (x + 0.044715 * x * x * x)))\n\n    let w = 70;\n    let h = 50;\n\n    let tl = center.sub(new Vec3(w / 2, h, 0));\n    let br = center.add(new Vec3(w / 2, 0, 0));\n\n    drawRoundedRect(state.render, tl, br, backWhiteColor, mtx, 4);\n\n    let halfW = 3;\n    let halfH = halfW * h / w;\n    let hOffset = 1.2;\n    let mappingX = createMapping(tl.x, br.x, -halfW, halfW);\n    let mappingY = createMapping(br.y, tl.y, -halfH + hOffset, halfH + hOffset);\n\n    let nPts = 30;\n    let pts = new Float32Array(nPts * 3);\n    for (let i = 0; i < nPts; i++) {\n        let x = -halfW + i * halfW * 2 / (nPts - 1);\n        let y = geluX(x);\n        pts[i * 3 + 0] = mappingX(x);\n        pts[i * 3 + 1] = mappingY(y);\n    }\n\n    let axisLineOpts = makeLineOpts({ color: new Vec4(0.5,0.5,0.5,1), mtx, thick: 1.5 });\n    addLine2(state.render.lineRender, new Vec3(tl.x, mappingY(0)), new Vec3(br.x, mappingY(0)), axisLineOpts);\n    addLine2(state.render.lineRender, new Vec3(mappingX(0), tl.y), new Vec3(mappingX(0), br.y), axisLineOpts);\n\n    let curveLineOpts = makeLineOpts({ color: Colors.Intermediates, mtx, thick: 3.5 });\n    drawLineSegs(state.render.lineRender, pts, curveLineOpts);\n\n    let srcBlk = blk.deps!.add![0].src;\n    let srcVal = getBlockValueAtIdx(srcBlk, destIdx);\n\n    if (isNotNil(srcVal)) {\n        let destVal = geluX(srcVal);\n        drawCircle(state.render, new Vec3(mappingX(srcVal), mappingY(destVal)), 2, 1, Colors.Intermediates, mtx);\n    }\n\n    let bb = new BoundingBox3d(tl, br);\n\n    return bb;\n}\n\nexport function createMapping(range0: number, range1: number, domain0: number, domain1: number) {\n    let m = (range1 - range0) / (domain1 - domain0);\n    let b = range0 - m * domain0;\n    return (x: number) => m * x + b;\n}\n\nfunction drawCellIndexAndValue(args: IDataFlowArgs, bb: BoundingBox3d): BoundingBox3d {\n    let { center, mtx, blk, destIdx } = args;\n    let fontOpts = { color: opColor, mtx, size: 14 };\n\n    function mapDimToSub(dim: DimStyle, idx: number): ITextBlockArgs | null {\n        if (dim === DimStyle.None) {\n            return null;\n        }\n        let posValue = destIdx.getAt(idx);\n        let color = dimStyleColor(dim);\n        let text = `${dimStyleTextShort(dim)}: ${posValue}`;\n        return { text, color };\n    }\n\n    let xDim = mapDimToSub(blk.dimX, 0);\n    let yDim = mapDimToSub(blk.dimY, 1);\n\n    let textBlock = mkTextBlock({\n        opts: fontOpts,\n        subs: [\n            xDim,\n            xDim && yDim && { text: ', ' },\n            yDim,\n        ],\n    });\n\n    let padX = 4;\n    let padY = 4;\n\n    sizeBlock(args.state.render, textBlock);\n    textBlock.offset = new Vec3(args.center.x - textBlock.size.x/2, bb.min.y - fontOpts.size * 1.2 - padX, 0);\n    layoutBlock(textBlock);\n\n    let tl = textBlock.offset.sub(new Vec3(padX, padY));\n    let br = textBlock.offset.add(textBlock.size).add(new Vec3(padX * 2, padY * 2));\n\n    drawRoundedRect(args.state.render, tl, br, backWhiteColor, mtx, 4);\n\n    drawBlock(args.state.render, textBlock);\n    return new BoundingBox3d(tl, br);\n}\n\n\nfunction drawDepArrows(args: IDataFlowArgs, bb: BoundingBox3d) {\n    let { state, mtx, blk, destIdx } = args;\n    if (!blk.deps) {\n        return;\n    }\n\n    function drawDepArrow(dep: IBlkCellDep, dotLen?: number | null) {\n        let { srcIdx, otherDim, isDot } = getDepSrcIdx(dep, destIdx);\n\n        if (dep.src.opacity === 0) {\n            return;\n        }\n\n        if (isDot) {\n            let { cx } = dimProps(dep.src, otherDim);\n            srcIdx.setAt(otherDim, (dotLen ?? cx) / 2);\n        }\n\n        if (blk.deps?.special === BlKDepSpecial.InputEmbed && dep.src === args.state.layout.tokEmbedObj) {\n            let tokenIdx = getBlockValueAtIdx(state.layout.idxObj, new Vec3(destIdx.x, 0, destIdx.z));\n            srcIdx.setAt(Dim.X, tokenIdx ?? 0);\n        }\n\n        let srcT = dep.src.t;\n        let color = srcT === 'w' ? Colors.Weights : srcT === 'i' ? Colors.Intermediates : Colors.Aggregates;\n\n        drawArrow(dep.src, srcIdx, color, false);\n    }\n\n    function drawFinalArrow() {\n        drawArrow(blk, destIdx, new Vec4(0,0,0,1), true);\n    }\n\n    function drawArrow(blk: IBlkDef, idx: Vec3, color: Vec4, reverse?: boolean) {\n        let cellPos = new Vec3(\n            cellPosition(state.layout, blk, Dim.X, idx.x) + state.layout.cell * 0.5,\n            cellPosition(state.layout, blk, Dim.Y, idx.y) + state.layout.cell * 0.5,\n            cellPosition(state.layout, blk, Dim.Z, idx.z) + state.layout.cell * 1.1,\n        );\n\n        // let's just draw a straight line for now\n\n        let lineOpts = makeLineOpts({ n: new Vec3(0,0,1), color, mtx, thick: 0.5, dash: 10 });\n\n        let source = projectToScreen(state, cellPos);\n\n        let center = bb.center();\n        let dir = source.sub(center).normalize();\n        let tVals = [\n            (bb.min.x - center.x) / dir.x,\n            (bb.max.x - center.x) / dir.x,\n            (bb.min.y - center.y) / dir.y,\n            (bb.max.y - center.y) / dir.y,\n        ];\n\n        let actualTarget: Vec3 | null = null;\n        for (let t of tVals) {\n            let p = center.mulAdd(dir, t);\n            let eps = 0.00001;\n            if (t > 0 && p.x > bb.min.x - eps && p.y > bb.min.y - eps && p.x < bb.max.x + eps && p.y < bb.max.y + eps) {\n                actualTarget = center.mulAdd(dir, t + 4);\n                break;\n            }\n        }\n\n        if (actualTarget) {\n            if (reverse) {\n                let tmp = source;\n                source = actualTarget;\n                actualTarget = tmp;\n            }\n            drawArc(state, source, actualTarget, color, mtx, 1.0);\n            // addLine2(state.render.lineRender, source, actualTarget, lineOpts);\n        }\n    }\n\n    if (blk.deps.add) {\n        for (let dep of blk.deps.add) {\n            drawDepArrow(dep);\n        }\n    }\n    if (blk.deps.dot) {\n        let dotLen = getDepDotLen(blk, destIdx);\n        for (let dep of blk.deps.dot) {\n            drawDepArrow(dep, dotLen);\n        }\n    }\n    drawFinalArrow();\n}\n\n// create clockwise arc from a to b\n// have line from a to b, bisect it, and cross dir with z for direction\n// scale bisection by distance\n// this now marks the center of the circle\n// grab radius (easy), and then figure out start/end angles\n\nfunction drawArc(state: IProgramState, a: Vec3, b: Vec3, color: Vec4, mtx: Mat4f, thick: number) {\n    let dir = b.sub(a).normalize();\n    let bisect = Vec3.cross(dir, new Vec3(0,0,1)).normalize();\n    let center = a.lerp(b, 0.5).add(bisect.mul(a.dist(b) * -2.0));\n\n    let radius = a.dist(center);\n    let endAngle = Math.atan2(b.y - center.y, b.x - center.x);\n    let startAngle = Math.atan2(a.y - center.y, a.x - center.x);\n\n    if (endAngle < startAngle) {\n        endAngle += Math.PI * 2;\n    }\n    if (endAngle - startAngle > Math.PI) {\n        endAngle -= Math.PI * 2;\n    }\n\n    let lineOpts = makeLineOpts({ color, mtx, thick, dash: 0 });\n\n    let nPts = 32;\n    let pts = new Float32Array(3 * nPts);\n\n    for (let i = 0; i < nPts; i++) {\n        let t = i / (nPts - 1);\n        let angle = lerp(startAngle, endAngle, t);\n        let x = center.x + radius * Math.cos(angle);\n        let y = center.y + radius * Math.sin(angle);\n        pts[i * 3 + 0] = x;\n        pts[i * 3 + 1] = y;\n    }\n\n    drawLineSegs(state.render.lineRender, pts, lineOpts);\n\n    let tangent = new Vec3(Math.sin(endAngle), -Math.cos(endAngle));\n\n    let dirA = tangent.rotateAbout(new Vec3(0,0,1), -Math.PI * 0.25);\n    let dirB = tangent.rotateAbout(new Vec3(0,0,1), Math.PI * 0.25);\n\n    let arrowLen = 10;\n    addLine2(state.render.lineRender, b, b.mulAdd(dirA, arrowLen), lineOpts);\n    addLine2(state.render.lineRender, b, b.mulAdd(dirB, arrowLen), lineOpts);\n}\n","import { cameraToMatrixView } from \"../Camera\";\nimport { cellPosition, IGptModelLayout } from \"../GptModelLayout\";\nimport { IProgramState } from \"../Program\";\nimport { drawText, IFontOpts, measureText, measureTextWidth, writeTextToBuffer } from \"../render/fontRender\";\nimport { addLine, addLine2 as drawLine, drawLineSegs, ILineOpts, makeLineOpts } from \"../render/lineRender\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { addQuad } from \"../render/triRender\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { DimStyle, dimStyleColor } from \"../walkthrough/WalkthroughTools\";\nimport { lineHeight } from \"./TextLayout\";\nimport { IColorMix } from \"../Annotations\";\nimport { clamp } from \"@/src/utils/data\";\n\nexport function drawModelCard(state: IProgramState, layout: IGptModelLayout, title: string, offset: Vec3) {\n    let { render } = state;\n    let { camPos } = cameraToMatrixView(state.camera);\n    let dist = camPos.dist(new Vec3(0, 0, -30)); //.add(offset));\n\n    let scale = clamp(dist / 500.0, 1.0, 800.0);\n\n    let pinY = -60;\n    let mtx = Mat4f.fromScaleTranslation(new Vec3(scale, scale, scale), new Vec3(0, pinY, 0).add(offset))\n        .mul(Mat4f.fromTranslation(new Vec3(0, -pinY, 0)));\n\n    let thick = 1.0 / 10.0 * scale;\n    let borderColor = Vec4.fromHexColor(\"#555599\", 0.8);\n    let backgroundColor = Vec4.fromHexColor(\"#93c5fd\", 0.3);\n    let titleColor = Vec4.fromHexColor(\"#000000\", 1.0);\n    let n = new Vec3(0, 0, 1);\n\n    let lineOpts: ILineOpts = { color: borderColor, mtx, thick, n };\n\n    let tl = new Vec3(-45, -97, 0);\n    let br = new Vec3( 45, -70, 0);\n    drawLineRect(render, tl, br, lineOpts);\n\n    addQuad(render.triRender, new Vec3(tl.x, tl.y, -0.1), new Vec3(br.x, br.y, -0.1), backgroundColor, mtx);\n\n    // let w = measureTextWidth(state.modelFontBuf, title, .0);\n    let { B, C, T, A, nBlocks, nHeads, vocabSize } = layout.shape;\n\n    let midX = (tl.x + br.x) / 2;\n    let paramLeft = br.x - 50;\n    let paramOff = tl.y + 2;\n\n    let paramLineHeight = 1.3;\n    let paramFontScale = 4;\n    let numWidth = paramFontScale * 0.6;\n    let allNums = [B, C, T, A, nBlocks, nHeads];\n    let maxLen = Math.max(...allNums.map(n => n.toString().length));\n    let paramHeight = 2 + paramLineHeight * paramFontScale * 3 + 1;\n\n    let titleFontScale = 13;\n    let titleW = measureTextWidth(render.modelFontBuf, title, titleFontScale);\n    let titleHeight = titleFontScale * paramLineHeight;\n    writeTextToBuffer(render.modelFontBuf, title, titleColor, midX - titleW / 2, tl.y + 2, titleFontScale, mtx);\n\n    // layout.weightCount = 150000000000;\n\n    let nParamsText = `n_params = `;\n    let weightCountText = numberToCommaSep(layout.weightCount);\n\n    let weightSize = 8;\n    let weightTitleW = measureTextWidth(render.modelFontBuf, nParamsText, paramFontScale);\n    let weightCountW = measureTextWidth(render.modelFontBuf, weightCountText, weightSize);\n    // let infoText = \"goal: sort 6 letters from { A, B, C } into ascending order\";\n    // writeTextToBuffer(render.modelFontBuf, infoText, titleColor, tl.x + 2, tl.y + paramHeight + 2, 4, mtx);\n\n    paramOff = tl.y + titleHeight + 4;\n    let weightX = midX - (weightCountW + weightTitleW) / 2;\n\n    writeTextToBuffer(render.modelFontBuf, nParamsText, titleColor, weightX, paramOff - paramFontScale / 2, paramFontScale, mtx);\n    writeTextToBuffer(render.modelFontBuf, weightCountText, titleColor, weightX + weightTitleW, paramOff - weightSize / 2, weightSize, mtx);\n    // addParam(\"C (channels) = \", C.toString(), dimStyleColor(DimStyle.C));\n    // addParam(\"T (time) = \", T.toString(), dimStyleColor(DimStyle.T));\n    // addParam(\"B (batches) = \", B.toString(), dimStyleColor(DimStyle.B));\n    // paramOff = tl.y + 2;\n    // paramLeft += 35;\n    // addParam(\"n_vocab = \", vocabSize.toString(), dimStyleColor(DimStyle.n_vocab));\n    // addParam(\"n_layers = \", nBlocks.toString(), dimStyleColor(DimStyle.n_layers));\n    // addParam(\"n_heads = \", nHeads.toString(), dimStyleColor(DimStyle.n_heads));\n\n    // function addParam(name: string, value: string, color: Vec4 = borderColor) {\n    //     let y = paramOff;\n    //     let w = measureTextWidth(render.modelFontBuf, name, paramFontScale);\n    //     let numW = measureTextWidth(render.modelFontBuf, value, paramFontScale);\n    //     let left = paramLeft;\n    //     writeTextToBuffer(render.modelFontBuf, name, color,  left - w        , y, paramFontScale, mtx);\n    //     writeTextToBuffer(render.modelFontBuf, value, color, left + maxLen * numWidth - numW, y, paramFontScale, mtx);\n    //     paramOff += paramFontScale * paramLineHeight;\n    // }\n\n    // addLine(render.lineRender, thick, borderColor, new Vec3(tl.x, tl.y + paramHeight), new Vec3(br.x, tl.y + paramHeight), n, mtx);\n\n    renderOutputAtBottom(state);\n\n    renderInputAtTop(state);\n}\n\nexport function sortABCInputTokenToString(a: number) {\n    return String.fromCharCode('A'.charCodeAt(0) + a); // just A, B, C supported!\n}\n\nexport interface IInputBoxOpts {\n    tokMixes?: IColorMix | null;\n    idxMixes?: IColorMix | null;\n}\n\nexport function renderInputBoxes(state: IProgramState, layout: IGptModelLayout, tl: Vec3, br: Vec3, cellW: number, fontSize: number, lineOpts: ILineOpts, opts?: IInputBoxOpts) {\n    let render = state.render;\n    let { T } = layout.shape;\n    let inCellH = br.y - tl.y;\n\n    let tokTextOpts: IFontOpts = { color: Vec4.fromHexColor(\"#000000\", 1.0), mtx: lineOpts.mtx, size: fontSize };\n    let idxTextOpts: IFontOpts = { color: Vec4.fromHexColor(\"#666666\", 1.0), mtx: lineOpts.mtx, size: fontSize * 0.6 };\n\n    let dimmedTokTextOpts: IFontOpts = { ...tokTextOpts, color: tokTextOpts.color.mul(0.3) };\n    let dimmedIdxTextOpts: IFontOpts = { ...idxTextOpts, color: idxTextOpts.color.mul(0.3) };\n\n    drawLineRect(render, tl, br, lineOpts);\n\n    let tokens = layout.model?.inputTokens.localBuffer;\n\n    for (let i = 0; i < T; i++) {\n\n        if (i > 0) {\n            let lineX = tl.x + i * cellW;\n            drawLine(render.lineRender, new Vec3(lineX, tl.y, 0), new Vec3(lineX, br.y, 0), lineOpts);\n        }\n\n        if (tokens && i < layout.model!.inputLen) {\n            let cx = tl.x + (i + 0.5) * cellW;\n\n            let tokOpts = { ...tokTextOpts, color: mixColorValues(opts?.tokMixes ?? null, tokTextOpts.color, i) };\n            let tokIdxOpts = { ...idxTextOpts, color: mixColorValues(opts?.idxMixes ?? null, idxTextOpts.color, i) };\n            let tokStr = sortABCInputTokenToString(tokens[i]);\n            let tokW = measureText(render.modelFontBuf, tokStr, tokTextOpts);\n            let idxW = measureText(render.modelFontBuf, tokens[i].toString(), idxTextOpts);\n            let totalH = tokTextOpts.size + idxTextOpts.size;\n            let top = tl.y + (inCellH - totalH) / 2;\n\n            drawText(render.modelFontBuf, tokStr, cx - tokW / 2, top, tokOpts);\n            drawText(render.modelFontBuf, tokens[i].toString(),  cx - idxW / 2, top + tokTextOpts.size, tokIdxOpts);\n        }\n\n    }\n}\n\nexport interface IOutputBoxOpts {\n    opacity?: number;\n    boldLast?: boolean;\n    tokMixes?: IColorMix | null;\n}\n\nexport function renderOutputBoxes(state: IProgramState, layout: IGptModelLayout, tl: Vec3, br: Vec3, cellW: number, fontSize: number, lineOpts: ILineOpts, opts?: IOutputBoxOpts) {\n    let render = state.render;\n    let { T, vocabSize } = layout.shape;\n    let outCellH = br.y - tl.y;\n\n    let opacity = opts?.opacity ?? 1.0;\n    let boldLast = opts?.boldLast ?? true;\n\n    lineOpts = { ...lineOpts, color: lineOpts.color.mul(opacity ?? 1.0) };\n    let tokTextOpts: IFontOpts = { color: Vec4.fromHexColor(\"#000000\", opacity), mtx: lineOpts.mtx, size: fontSize };\n    let idxTextOpts: IFontOpts = { color: Vec4.fromHexColor(\"#666666\", opacity), mtx: lineOpts.mtx, size: fontSize * 0.6 };\n\n    let dimmedTokTextOpts: IFontOpts = { ...tokTextOpts, color: tokTextOpts.color.mul(0.3) };\n    let dimmedIdxTextOpts: IFontOpts = { ...idxTextOpts, color: idxTextOpts.color.mul(0.3) };\n\n    drawLineRect(render, tl, br, lineOpts);\n\n    let sortedOutput = layout.model?.sortedBuf;\n\n    for (let i = 0; i < T; i++) {\n        if (i > 0) {\n            let lineX = tl.x + i * cellW;\n            drawLine(render.lineRender, new Vec3(lineX, tl.y, 0), new Vec3(lineX, br.y, 0), lineOpts);\n        }\n\n        if (sortedOutput && i < layout.model!.inputLen) {\n            let usedSoFar = 0.0;\n            let cx = tl.x + (i + 0.5) * cellW;\n\n            for (let j = 0; j < vocabSize; j++) {\n                let tokIdx = sortedOutput[(i * vocabSize + j) * 2 + 0];\n                let tokProb = sortedOutput[(i * vocabSize + j) * 2 + 1];\n\n                let partTop = tl.y + usedSoFar * outCellH;\n                let partH = tokProb * outCellH;\n\n                let dimmed = i < layout.model!.inputLen - 1 || !boldLast;\n\n                let color = mixColorValues(opts?.tokMixes ?? null, tokTextOpts.color, i);\n                if (dimmed) {\n                    color = color.mul(0.3);\n                }\n\n                let tokOpts = { ...tokTextOpts, color };\n                let idxOpts = { ...idxTextOpts, color: color.mul(0.6) };\n\n                let tokStr = sortABCInputTokenToString(tokIdx);\n                let tokW = measureText(render.modelFontBuf, tokStr, tokOpts);\n                let idxW = measureText(render.modelFontBuf, tokIdx.toString(), idxOpts);\n                let textH = tokOpts.size + idxOpts.size;\n                let top = partTop + (partH - textH) / 2;\n\n                if (partH > textH) {\n                    drawText(render.modelFontBuf, tokStr, cx - tokW / 2, top, tokOpts);\n                    drawText(render.modelFontBuf, tokIdx.toString(),  cx - idxW / 2, top + tokOpts.size, idxOpts);\n                }\n\n                usedSoFar += tokProb;\n\n                drawLine(render.lineRender, new Vec3(cx - cellW/2, partTop + partH, 0), new Vec3(cx + cellW/2, partTop + partH, 0), lineOpts);\n                if (usedSoFar >= 1.0 - 1e-4) {\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function mixColorValues(mixes: IColorMix | null, baseColor: Vec4, idx: number) {\n    if (!mixes) {\n        return baseColor;\n    }\n    let mix = mixes.mixes[idx] ?? 0.0;\n    return Vec4.lerp(mixes.color1 ?? baseColor, mixes.color2, mix);\n}\n\nlet _lineRectArr = new Float32Array(3 * 4);\nexport function drawLineRect(render: IRenderState, tl: Vec3, br: Vec3, opts: ILineOpts) {\n\n    _lineRectArr[0] = tl.x;\n    _lineRectArr[1] = tl.y;\n    _lineRectArr[2] = 0;\n    _lineRectArr[3] = br.x;\n    _lineRectArr[4] = tl.y;\n    _lineRectArr[5] = 0;\n    _lineRectArr[6] = br.x;\n    _lineRectArr[7] = br.y;\n    _lineRectArr[8] = 0;\n    _lineRectArr[9] = tl.x;\n    _lineRectArr[10] = br.y;\n    _lineRectArr[11] = 0;\n\n    drawLineSegs(render.lineRender, _lineRectArr, makeLineOpts({ ...opts, closed: true }));\n}\n\nfunction numberToCommaSep(a: number) {\n    let s = a.toString();\n    let out = \"\";\n    for (let i = 0; i < s.length; i++) {\n        if (i > 0 && (s.length - i) % 3 == 0) {\n            out += \",\";\n        }\n        out += s[i];\n    }\n    return out;\n}\n\nfunction renderInputAtTop(state: IProgramState) {\n    let layout = state.layout;\n    let render = state.render;\n\n    let inputTokBlk = layout.idxObj;\n\n    let topMid = new Vec3(inputTokBlk.x + inputTokBlk.dx/2, inputTokBlk.y - layout.margin);\n\n    let inCellH = 10;\n    let inCellW = 6;\n\n    let nCells = layout.shape.T;\n    let tl = new Vec3(topMid.x - inCellW * nCells / 2, topMid.y - inCellH);\n    let br = new Vec3(topMid.x + inCellW * nCells / 2, topMid.y);\n\n    let outputOpacity = state.display.topOutputOpacity ?? 1.0;\n\n    let lineOpts = makeLineOpts({ color: Vec4.fromHexColor(\"#000000\", 0.2), mtx: new Mat4f(), thick: 1.5 });\n    let titleTextOpts: IFontOpts = { color: Vec4.fromHexColor(\"#666666\", 1.0), mtx: lineOpts.mtx, size: 1.9 };\n\n    renderInputBoxes(state, layout, tl, br, inCellW, 4, lineOpts, { tokMixes: state.display.tokenColors, idxMixes: state.display.tokenIdxColors });\n\n    let inputTitle = \"Input\";\n    drawText(render.modelFontBuf, inputTitle, tl.x, tl.y - lineHeight(titleTextOpts), titleTextOpts);\n\n    {\n        let outCellH = 12;\n        let outBr = new Vec3(br.x, tl.y - 4);\n        let outTl = new Vec3(tl.x, outBr.y - outCellH);\n        renderOutputBoxes(state, layout, outTl, outBr, inCellW, 4, lineOpts, { opacity: outputOpacity, boldLast: outputOpacity < 1.0, tokMixes: state.display.tokenOutputColors });\n\n        let outputTitle = \"Output\";\n        let outputTextOpts = { ...titleTextOpts, color: titleTextOpts.color.mul(outputOpacity) };\n        drawText(render.modelFontBuf, outputTitle, outTl.x, outTl.y - lineHeight(titleTextOpts), outputTextOpts);\n    }\n\n    for (let i = 0; i < nCells; i++) {\n        let mixes = state.display.tokenIdxColors;\n\n        let lineOptsLocal = { ...lineOpts, color: mixColorValues(mixes, lineOpts.color, i) };\n\n        let tx = tl.x + (i + 0.5) * inCellW;\n        let ty = tl.y + layout.cell + inCellH;\n        let bx = cellPosition(layout, inputTokBlk, Dim.X, i) + 0.5 * layout.cell;\n        let by = inputTokBlk.y - 0.5 * layout.cell;\n\n        let midY1 = lerp(by, ty, 1/6);\n        let midY2 = lerp(by, ty, 3/4);\n\n        drawLine(state.render.lineRender, new Vec3(bx, by), new Vec3(bx, midY1), lineOptsLocal);\n        drawLine(state.render.lineRender, new Vec3(bx, midY1), new Vec3(tx, midY2), lineOptsLocal);\n        drawLine(state.render.lineRender, new Vec3(tx, midY2), new Vec3(tx, ty), lineOptsLocal);\n\n        let arrLen = 0.6;\n        let arrowLeft = new Vec3(bx - arrLen, by - arrLen);\n        let arrowRight = new Vec3(bx + arrLen, by - arrLen);\n        drawLine(state.render.lineRender, arrowLeft, new Vec3(bx, by), lineOptsLocal);\n        drawLine(state.render.lineRender, arrowRight, new Vec3(bx, by), lineOptsLocal);\n    }\n}\n\nfunction renderOutputAtBottom(state: IProgramState) {\n    let layout = state.layout;\n\n    let softmax = layout.logitsSoftmax;\n\n\n    let topMid = new Vec3(softmax.x + softmax.dx/2, softmax.y + softmax.dy + layout.margin);\n\n    let outCellH = 10;\n    let outCellW = 6;\n\n    let nCells = layout.shape.T;\n    let tl = new Vec3(topMid.x - outCellW * nCells / 2, topMid.y);\n    let br = new Vec3(topMid.x + outCellW * nCells / 2, topMid.y + outCellH);\n\n    let lineOpts = makeLineOpts({ color: Vec4.fromHexColor(\"#000000\", 0.2), mtx: new Mat4f(), thick: 1.5 });\n\n    renderOutputBoxes(state, layout, tl, br, outCellW, 4, lineOpts, { boldLast: true, tokMixes: state.display.tokenOutputColors });\n\n    for (let i = 0; i < nCells; i++) {\n        let tx = cellPosition(layout, softmax, Dim.X, i) + 0.5 * layout.cell;\n        let ty = softmax.y + softmax.dy + 0.5 * layout.cell;\n        let bx = tl.x + (i + 0.5) * outCellW;\n        let by = tl.y - layout.cell;\n\n        let midY1 = lerp(ty, by, 1/6);\n        let midY2 = lerp(ty, by, 3/4);\n\n        drawLine(state.render.lineRender, new Vec3(tx, ty), new Vec3(tx, midY1), lineOpts);\n        drawLine(state.render.lineRender, new Vec3(tx, midY1), new Vec3(bx, midY2), lineOpts);\n        drawLine(state.render.lineRender, new Vec3(bx, midY2), new Vec3(bx, by), lineOpts);\n\n        let arrLen = 0.6;\n        let arrowLeft = new Vec3(bx - arrLen, by - arrLen);\n        let arrowRight = new Vec3(bx + arrLen, by - arrLen);\n        drawLine(state.render.lineRender, arrowLeft, new Vec3(bx, by), lineOpts);\n        drawLine(state.render.lineRender, arrowRight, new Vec3(bx, by), lineOpts);\n    }\n\n}\n","\n\n\nimport { IFontOpts, measureText, drawText } from \"../render/fontRender\";\nimport { ILineOpts, makeLineOpts, addLine2 } from \"../render/lineRender\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { addQuad } from \"../render/triRender\";\nimport { isNotNil, isNil } from \"@/src/utils/data\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { drawRoundedRect } from \"./DataFlow\";\nimport { drawLineRect } from \"./ModelCard\";\nimport { TextAlignHoriz } from \"../Annotations\";\n\n/*\n\nWe make a simple text/math layout engine!\n\nWe can't do direct rendering since things need to be layed out first, and information propagates upwards.\n\nLet's first define a simple text block, and see where that leads. We're going to do a sqrt()\n*/\n\nexport interface ITextBlock {\n    type: TextBlockType;\n    id?: string;\n    text?: string;\n    align?: TextAlignHoriz;\n    opts: IFontOpts;\n    size: Vec3;\n    offset: Vec3;\n    subs?: ITextBlock[];\n    cellX?: number;\n    cellY?: number;\n    rectOpts?: ILineOpts;\n    draw?: (blk: ITextBlock, render: IRenderState) => void;\n}\n\nexport interface ITextBlockArgs {\n    type?: TextBlockType;\n    id?: string;\n    text?: string;\n    align?: TextAlignHoriz;\n    opts?: IFontOpts;\n    rectOpts?: ILineOpts;\n    color?: Vec4;\n    size?: Vec3;\n    offset?: Vec3;\n    draw?: (blk: ITextBlock, render: IRenderState) => void;\n    subs?: (ITextBlockArgs | null)[];\n    cellX?: number;\n    cellY?: number;\n}\n\nexport enum TextBlockType {\n    Line,\n    Text,\n    Sqrt,\n    Divide,\n    Cells,\n    Custom,\n}\n\nexport function lineHeight(fontOpts: IFontOpts) {\n    return fontOpts.size * 1.2;\n}\n\nexport function mkTextBlock(args: ITextBlockArgs): ITextBlock {\n    let type = args.type ?? (\n        args.text ? TextBlockType.Text :\n        args.subs ? TextBlockType.Line :\n        (isNotNil(args.cellX) && isNotNil(args.cellY)) ? TextBlockType.Cells :\n        null);\n\n    if (isNil(type)) {\n        throw new Error('Unknown text block type');\n    }\n\n    let opts = args.opts;\n    if (opts && args.color) {\n        opts = { ...opts, color: args.color };\n    }\n\n    if (!opts) {\n        throw new Error('No font opts');\n    }\n\n    return {\n        type: type,\n        id: args.id,\n        text: args.text,\n        align: args.align,\n        opts: opts!,\n        size: args.size ?? new Vec3(0, 0, 0),\n        offset: args.offset ?? new Vec3(0, 0, 0),\n        subs: args.subs?.filter(isNotNil).map(a => mkTextBlock({ ...a, opts: a.opts ?? opts })),\n        rectOpts: args.rectOpts,\n        draw: args.draw,\n        cellX: args.cellX,\n        cellY: args.cellY,\n    };\n}\n\n\nfunction sqrtSpacing(opts: IFontOpts, inner: ITextBlock) {\n    return {\n        tl: new Vec3(inner.size.y * 0.9, inner.size.y * 0.2),\n        br: new Vec3(inner.size.y * 0.1, 0.0),\n    };\n}\n\nfunction divideSpacing(opts: IFontOpts, inner: ITextBlock) {\n    return {\n        padX: 0,\n        padInnerY: inner.size.y * 0.5,\n    };\n}\n\nlet cellSize = 7.0;\n\nfunction cellSizing(blk: ITextBlock) {\n    return {\n        size: new Vec3(blk.cellX! * cellSize, blk.cellY! * cellSize),\n        pad: cellSize * 1.0,\n    };\n}\n\nexport function sizeBlock(render: IRenderState, blk: ITextBlock) {\n    let opts = blk.opts;\n    switch (blk.type) {\n\n    case TextBlockType.Line: {\n        let x = 0;\n        // middle-align all the sub-blocks\n        // so height is the max height\n        let maxH = 0;\n        for (let sub of blk.subs!) {\n            sizeBlock(render, sub);\n            x += sub.size.x;\n            maxH = Math.max(maxH, sub.size.y);\n        }\n        blk.size = new Vec3(x, maxH, 0);\n        if (blk.rectOpts) {\n            blk.size.x += cellSize * 0.5;\n            blk.size.y += cellSize * 0.5;\n        }\n        break;\n    }\n    case TextBlockType.Text: {\n        if (isNil(blk.text)) {\n            throw new Error('Text block has no text');\n        }\n        blk.size = new Vec3(\n            Math.max(blk.size.x, measureText(render.modelFontBuf, blk.text!, opts)),\n            lineHeight(opts),\n        );\n        break;\n    }\n    case TextBlockType.Sqrt: {\n        let sub = blk.subs![0];\n        sizeBlock(render, sub);\n        let spacing = sqrtSpacing(opts, sub);\n        blk.size = sub.size.add(spacing.tl).add(spacing.br);\n        break;\n    }\n    case TextBlockType.Divide: {\n        let subA = blk.subs![0];\n        let subB = blk.subs![1];\n        sizeBlock(render, subA);\n        sizeBlock(render, subB);\n        let spacing = divideSpacing(opts, subA);\n        blk.size = new Vec3(Math.max(subA.size.x, subB.size.x) + spacing.padX, subA.size.y + subB.size.y + spacing.padInnerY, 0);\n        break;\n    }\n    case TextBlockType.Cells: {\n        let spacing = cellSizing(blk);\n        blk.size = new Vec3(spacing.size.x + spacing.pad, spacing.size.y);\n        break;\n    }\n    case TextBlockType.Custom: {\n        // already sized\n        break;\n    }\n    default: { let _exhaustCheck: never = blk.type; }\n    }\n}\n\nexport function layoutBlock(blk: ITextBlock) {\n    switch (blk.type) {\n    case TextBlockType.Line: {\n        let x = blk.offset.x + cellSize * 0.25;\n        let midY = blk.offset.y + blk.size.y / 2;\n        for (let sub of blk.subs!) {\n            sub.offset = new Vec3(x, midY - sub.size.y / 2).round_();\n            layoutBlock(sub);\n            x += sub.size.x;\n        }\n        break;\n    }\n    case TextBlockType.Sqrt: {\n        let sub = blk.subs![0];\n        sub.offset = blk.offset.add(sqrtSpacing(blk.opts, sub).tl).round_();\n        layoutBlock(sub);\n        break;\n    }\n    case TextBlockType.Divide: {\n        let subA = blk.subs![0];\n        let subB = blk.subs![1];\n        let midX = blk.size.x / 2;\n        subA.offset = blk.offset.add(new Vec3(midX - subA.size.x / 2, 0)).round_();\n        subB.offset = blk.offset.add(new Vec3(midX - subB.size.x / 2, blk.size.y - subB.size.y)).round_();\n        layoutBlock(subA);\n        layoutBlock(subB);\n        break;\n    }\n    case TextBlockType.Text: {\n        break;\n    }\n    case TextBlockType.Cells: {\n        break;\n    }\n    case TextBlockType.Custom: {\n        break;\n    }\n    default: { let _exhaustCheck: never = blk.type; }\n    }\n}\n\nexport function drawBlock(render: IRenderState, blk: ITextBlock) {\n\n    switch (blk.type) {\n    case TextBlockType.Line: {\n        for (let sub of blk.subs!) {\n            drawBlock(render, sub);\n        }\n        if (blk.rectOpts) {\n            let rectOpts = makeLineOpts(blk.rectOpts);\n            let tl = blk.offset.round().add(new Vec3(0.5, 0.5));\n            let br = blk.offset.add(blk.size).round().add(new Vec3(0.5, 0.5));\n            drawRoundedRect(render, tl, br, rectOpts.color.mul(0.24), rectOpts.mtx, 2);\n            drawLineRect(render, tl, br, rectOpts);\n        }\n        break;\n    }\n    case TextBlockType.Text: {\n        let xPos = blk.offset.x;\n        if (blk.align === TextAlignHoriz.Right) {\n            xPos = blk.offset.x + blk.size.x - measureText(render.modelFontBuf, blk.text!, blk.opts);\n        }\n        drawText(render.modelFontBuf, blk.text!, xPos, blk.offset.y + blk.opts.size * 0.1, blk.opts);\n        break;\n    }\n    case TextBlockType.Sqrt: {\n        let sub = blk.subs![0];\n\n        let subY = sub.size.y;\n\n        let sqrtX = blk.offset.x;\n        let sqrtY = blk.offset.y - subY * 0.9;\n        let sqrtSize = subY * 1.8;\n\n        let mathOpts: IFontOpts = { ...blk.opts, faceName: 'cmsy10', size: sqrtSize };\n\n        let lineOpts = makeLineOpts({ color: blk.opts.color, n: new Vec3(0,0,1), mtx: blk.opts.mtx, thick: 0.4 });\n        let lineX = sqrtX + sqrtSize * 0.5;\n        let lineY = sqrtY + sqrtSize * 0.5;\n        addLine2(render.lineRender, new Vec3(lineX, lineY).round_(), new Vec3(sub.offset.x + sub.size.x, lineY).round_(), lineOpts);\n\n        drawText(render.modelFontBuf, '\\u0070', sqrtX, sqrtY, mathOpts);\n        drawBlock(render, sub);\n        break;\n    }\n    case TextBlockType.Divide: {\n        let subA = blk.subs![0];\n        let subB = blk.subs![1];\n\n        let lineOpts = makeLineOpts({ color: blk.opts.color, n: new Vec3(0,0,1), mtx: blk.opts.mtx, thick: 0.4 });\n        let lineY = lerp(subA.offset.y + subA.size.y, subB.offset.y, 0.5) + 1.0;\n        addLine2(render.lineRender, new Vec3(blk.offset.x, lineY), new Vec3(blk.offset.x + blk.size.x, lineY), lineOpts);\n\n        drawBlock(render, blk.subs![0]);\n        drawBlock(render, blk.subs![1]);\n        break;\n    }\n    case TextBlockType.Cells: {\n        let center = blk.offset.add(new Vec3(blk.size.x / 2, blk.size.y / 2));\n        let spacing = cellSizing(blk);\n\n        drawCells(render, new Vec3(blk.cellX!, blk.cellY!), center, spacing.size, blk.opts.color, blk.opts.mtx);\n\n        break;\n    }\n    case TextBlockType.Custom: {\n        blk.draw?.(blk, render);\n        break;\n    }\n    default: { let _exhaustCheck: never = blk.type; }\n    }\n}\n\nexport function drawCells(render: IRenderState, nCells: Vec3, center: Vec3, size: Vec3, color: Vec4, mtx?: Mat4f) {\n        let thick = 0.4;\n        let tl = center.mulAdd(size, -0.5).add(new Vec3(0.5, 0.5));\n        let br = center.mulAdd(size, 0.5).add(new Vec3(0.5, 0.5));\n        let lineOpts = makeLineOpts({ color, mtx, n: new Vec3(0, 0, 1), thick });\n\n        drawLineRect(render, tl, br, lineOpts);\n        addQuad(render.triRender, tl, br, color.mul(0.3), mtx);\n\n        for (let i = 1; i < nCells.x; i++) {\n            let lineX = tl.x + i * cellSize;\n            addLine2(render.lineRender, new Vec3(lineX, tl.y, 0), new Vec3(lineX, br.y, 0), lineOpts);\n        }\n\n        for (let i = 1; i < nCells.y; i++) {\n            let lineY = tl.y + i * cellSize;\n            addLine2(render.lineRender, new Vec3(tl.x, lineY, 0), new Vec3(br.x, lineY, 0), lineOpts);\n        }\n}\n","import React, { memo, useCallback, useLayoutEffect, useState } from 'react';\nimport { BoundingBox3d, Vec3 } from '@/src/utils/vector';\nimport s from './TocDiagram.module.scss';\nimport * as d3Color from 'd3-color';\nimport { isNotNil } from '@/src/utils/data';\nimport { Phase } from '../walkthrough/Walkthrough';\nimport clsx from 'clsx';\nimport { jumpToPhase } from '../Commentary';\nimport { useProgramState } from '../Sidebar';\nimport { Subscriptions } from '@/src/utils/hooks';\n\nenum ElType {\n    Cell,\n    PosEmbed,\n    Block,\n    Gap,\n}\n\ninterface IEl {\n    type: ElType;\n    id?: string;\n    label?: string | string[];\n    gapType?: 'exit' | 'multihead' | 'add';\n    height: number;\n    width?: number;\n    items?: IEl[];\n    color?: string;\n    padX?: number;\n    padY?: number;\n    marginY?: number;\n    arrow?: boolean;\n    special?: 'transformer' | 'llm';\n\n    posPx?: Vec3;\n    sizePx?: Vec3;\n}\n\ninterface IEntryGroup {\n    groupName: string;\n    entries: IEntryInfo[];\n}\n\ninterface IEntryInfo {\n    id: Phase;\n    title: string;\n    ids: string[];\n    groupIds: boolean;\n}\n\nexport const TocDiagram: React.FC<{\n    activePhase: Phase | null;\n    onEnterPhase?: (phase: Phase) => void;\n}> = ({ activePhase, onEnterPhase }) => {\n    let [entryManager] = useState(() => new EntryManager());\n    // used for measuring text\n    let [diagramEl, setDiagramEl] = useState<SVGElement | null>(null);\n    let [canvas, setCanvas] = useState<HTMLCanvasElement | null>(null);\n    let progState = useProgramState();\n    useLayoutEffect(() => {\n        setCanvas(document.createElement('canvas')!);\n    }, []);\n\n    let [hoverId, setHoverId] = useState<Phase | null>(null);\n\n    let setHover = useCallback((ev: React.MouseEvent, id: Phase, hover: boolean) => {\n         setHoverId(hover ? id : null);\n    }, []);\n\n    let [activeId, setActiveId] = useState<Phase | null>(null);\n\n    let setActive = useCallback((ev: React.MouseEvent, id: Phase, active: boolean) => {\n        jumpToPhase(progState.walkthrough, id);\n        onEnterPhase?.(id);\n        setActiveId(active ? id : null);\n    }, [progState.walkthrough, onEnterPhase]);\n\n    activeId = activePhase ?? activeId;\n\n    let colors = {\n        ln: '#e9f29e',\n        multihead: '#f2d59e',\n        feedForward: '#9ef2f2',\n        tokEmbed: '#f0a8fc',\n        linear: '#a8c3fc',\n        softmax: '#a8fcaf',\n        line: '#000',\n        focus: '#338',\n    };\n\n    let widthStd = 4;\n    let widthMultihead = 7;\n    let widthFeedForward = 5;\n    let smallGap = 0.5;\n    let plusGap = 1.0;\n    let exitGap = 0.8;\n\n    let structure: IEl = {\n        type: ElType.Block, height: 0, color: '#eee', special: 'llm', padX: 2.0, padY: 1.0, id: 'llm', items: [\n            { type: ElType.Cell, label: 'tok embed', height: 1, width: 4, color: colors.tokEmbed, id: 'tokEmbed' },\n            { type: ElType.PosEmbed, height: 1.8, id: 'posEmbed' },\n            { type: ElType.Block, height: 0, padX: 3, padY: 0, color: '#ddd', special: 'transformer', id: 'transformer', items: [\n                { type: ElType.Gap, height: 1.2, gapType: 'exit', arrow: true },\n                { type: ElType.Cell, height: 1, label: 'layer norm', width: widthStd, color: colors.ln, id: 'ln1' },\n                { type: ElType.Gap, height: exitGap, gapType: 'multihead', arrow: true },\n                { type: ElType.Cell, height: 2, label: ['multi-head, causal', 'self-attention'], width: widthMultihead, color: colors.multihead, id: 'selfAttend' },\n                { type: ElType.Gap, height: plusGap, gapType: 'add' },\n                { type: ElType.Gap, height: exitGap, gapType: 'exit', arrow: true },\n                { type: ElType.Cell, height: 1, label: 'layer norm', width: widthStd, color: colors.ln, id: 'ln2' },\n                { type: ElType.Gap, height: smallGap, arrow: true },\n                { type: ElType.Cell, height: 2, label: ['feed', 'forward'], width: widthFeedForward, color: colors.feedForward, id: 'feedForward' },\n                { type: ElType.Gap, height: plusGap, gapType: 'add' },\n            ] },\n            { type: ElType.Gap, height: smallGap, arrow: true },\n            { type: ElType.Cell, height: 1, label: 'layer norm', width: widthStd, color: colors.ln, id: 'lnf' },\n            { type: ElType.Gap, height: smallGap, arrow: true },\n            { type: ElType.Cell, label: 'linear', height: 1, width: widthStd, color: colors.linear, id: 'linear' },\n            { type: ElType.Gap, height: smallGap, arrow: true },\n            { type: ElType.Cell, label: 'softmax', height: 1, width: widthStd, color: colors.softmax, id: 'softmaxOut' },\n        ]\n    };\n\n    let entries: IEntryInfo[] = [];\n    let entryGroups: IEntryGroup[] = [];\n\n    function makeEntry(id: Phase, title: string, ids: string[] = [], groupIds: boolean = false) {\n        let entry = { id, title, ids, groupIds };\n        entries.push(entry);\n        entryGroups[entryGroups.length - 1].entries.push(entry);\n    }\n\n    entryGroups.push({ groupName: 'Intro', entries: [] });\n    makeEntry(Phase.Intro_Intro, 'Introduction', []);\n    makeEntry(Phase.Intro_Prelim, 'Preliminaries', []);\n\n    entryGroups.push({ groupName: 'Components', entries: [] });\n    makeEntry(Phase.Input_Detail_Embedding, 'Embedding', ['tokEmbed', 'posEmbed'], true);\n    makeEntry(Phase.Input_Detail_LayerNorm, 'Layer Norm', ['ln1', 'ln2', 'lnf']);\n    makeEntry(Phase.Input_Detail_SelfAttention, 'Self Attention', ['selfAttend']);\n    makeEntry(Phase.Input_Detail_Projection, 'Projection', ['selfAttend']);\n    makeEntry(Phase.Input_Detail_Mlp, 'MLP', ['feedForward']);\n    makeEntry(Phase.Input_Detail_Transformer, 'Transformer', ['transformer']);\n    makeEntry(Phase.Input_Detail_Softmax, 'Softmax', ['softmaxOut']);\n    makeEntry(Phase.Input_Detail_Output, 'Output', ['lnf', 'linear', 'softmaxOut'], true);\n\n    function calcSizes(el: IEl): void {\n        el.padX = el.padX ?? 0;\n        el.padY = el.padY ?? 0;\n\n         if (el.type === ElType.Block) {\n            let sizePx = new Vec3(0, el.padY! * 2 * sizeScale);\n            for (let item of el.items!) {\n                calcSizes(item);\n                sizePx.x = Math.max(sizePx.x, item.sizePx!.x);\n                sizePx.y += item.sizePx!.y;\n            }\n            sizePx.x += el.padX! * sizeScale;\n            el.sizePx = sizePx;\n        } else {\n\n            if (el.type === ElType.Gap) {\n                el.width = 0;\n            } else if (el.type === ElType.PosEmbed) {\n                el.width = 10;\n            }\n\n            el.width = el.width ?? 1;\n            el.height = el.height ?? 1;\n            el.sizePx = new Vec3(el.width * sizeScale, el.height * sizeScale);\n        }\n    }\n\n    function calcPosition(el: IEl, offset: Vec3) {\n        el.posPx = offset;\n        if (el.type === ElType.Block) {\n            let midX = el.sizePx!.x / 2;\n            let posPx = new Vec3(el.padX! * sizeScale, el.padY! * sizeScale);\n            for (let item of el.items!) {\n                calcPosition(item, new Vec3(midX - item.sizePx!.x / 2, posPx.y));\n                posPx.y += item.sizePx!.y;\n            }\n        }\n    }\n\n    let sizeScale = 20;\n    let fontSize = 11;\n\n    calcSizes(structure);\n    calcPosition(structure, new Vec3(10 + 0.5, 90 + 0.5));\n\n    interface IElGlobalBounds {\n        el: IEl;\n        bounds: BoundingBox3d;\n    }\n\n    function findByIdBounds(id: string): BoundingBox3d | null {\n        return findById(id)?.bounds ?? null;\n    }\n\n    function getElGlobalBounds(el: IEl, offset: Vec3): BoundingBox3d {\n        let posGlobal = el.posPx!.add(offset);\n        return new BoundingBox3d(posGlobal, posGlobal.add(el.sizePx!));\n    }\n\n    function findById(id: string, offset?: Vec3, el?: IEl): IElGlobalBounds | null {\n        offset = offset ?? new Vec3(0, 0);\n        el = el ?? structure;\n        if (el.id === id) {\n            return { el, bounds: getElGlobalBounds(el, offset) };\n        }\n\n        if (el.items) {\n            for (let item of el.items) {\n                let res = findById(id, el.posPx!.add(offset), item);\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        return null;\n    }\n\n    function elIsHoveredOrActive(el: IEl): boolean | null {\n        let targetId = isNotNil(hoverId) ? hoverId : activeId;\n        let entry = entries.find(e => e.id === targetId);\n        if (!entry) {\n            return null;\n        }\n        let isHover = entry.ids.includes(el.id ?? '');\n        return isHover;\n    }\n\n    function renderPlus(pos: Vec3, key: string) {\n        let plusLen = 4;\n        return <g key={key}>\n            <circle cx={pos.x} cy={pos.y} r={6} stroke='#000000' fill='white' />;\n            <line x1={pos.x - plusLen} y1={pos.y} x2={pos.x + plusLen} y2={pos.y} stroke='#000000' strokeWidth={1} />;\n            <line x1={pos.x} y1={pos.y - plusLen} x2={pos.x} y2={pos.y + plusLen} stroke='#000000' strokeWidth={1} />;\n        </g>;\n    }\n\n    function renderArrow(to: Vec3, from: Vec3, key: string) {\n        let dir = to.sub(from).normalize();\n        let dirProp = new Vec3(dir.y, -dir.x);\n        let arrowLen = 5;\n        let arrowWidth = 4;\n        let left = to.mulAdd(dir, -arrowLen).mulAdd(dirProp, -arrowWidth / 2);\n        let right = to.mulAdd(dir, -arrowLen).mulAdd(dirProp, arrowWidth / 2);\n        let path = `M${left.x},${left.y} L${to.x},${to.y} L${right.x},${right.y}Z`;\n        return <g key={key}>\n            <path d={path} fill={colors.line} className={s.dataPath} />\n        </g>;\n    }\n\n    function renderEl(el: IEl, idx: number) {\n        let pos = el.posPx!;\n        let size = el.sizePx!;\n        let transform = `translate(${pos.x}, ${pos.y})`;\n        let fill = el.color ?? '#00000000';\n        let stroke = d3Color.color(fill)?.darker(0.5).toString();\n\n        function renderResiduals() {\n            let from = el.items!.filter(a => a.gapType === 'exit');\n            let to = el.items!.filter(a => a.gapType === 'add');\n            let segs: React.ReactNode[] = [];\n            for (let i = 0; i < from.length; i++) {\n                let fromItem = from[i];\n                let toItem = to[i];\n                let fromY = fromItem.posPx!.y + 0.25 * fromItem.sizePx!.y;\n                let toY = toItem.posPx!.y + toItem.sizePx!.y / 2;\n                let fromX = fromItem.posPx!.x + fromItem.sizePx!.x;\n                let toX = toItem.posPx!.x + 8;\n                let xVert = size.x - 10;\n                let path = `M${fromX},${fromY} L${xVert},${fromY} L${xVert},${toY} L${toX+4},${toY}`;\n                segs.push(<path key={i} d={path} fill='none' strokeLinejoin='round' opacity={opacityDimmed} className={s.dataPath} />);\n                segs.push(renderArrow(new Vec3(toX, toY), new Vec3(toX + 10, toY), `residual-arrow-${i}`));\n            }\n            return segs;\n        }\n\n        let isHover = elIsHoveredOrActive(el);\n        let opacityDimmed = isHover === false && (isNotNil(hoverId) || isNotNil(activePhase)) ? 0.5 : 1.0;\n\n        let content: React.ReactNode = null;\n\n        switch (el.type) {\n            case ElType.Cell:\n                let label = Array.isArray(el.label) ? el.label : [el.label];\n\n                content = <>\n                    <rect className={s.cell} width={size.x} height={size.y} fill={el.color ?? '#00000000'} rx={3} ry={3} stroke={stroke} strokeWidth={1} />\n                    {label.map((l, i) => {\n                        return <text key={i} x={size.x / 2} y={(i + 0.75) * sizeScale} width={size.x} fontSize={fontSize} textAnchor='middle'>{l}</text>;\n                    })}\n                </>;\n                break;\n            case ElType.PosEmbed:\n                let center = el.sizePx!.mul(0.5);\n                let embedX = center.x - 40;\n                let textX = embedX - 14;\n\n                content = <>\n                    <line className={s.gap} x1={center.x} x2={center.x} y1={0} y2={size.y} stroke={colors.line} />\n                    <text fontSize={11} textAnchor='end' x={textX} y={center.y + 0.25 * fontSize}>pos embed</text>\n                    <circle cx={embedX} cy={center.y} r={10} stroke={colors.line} fill='none' />;\n                    <line x1={embedX + 14} x2={center.x - 10} y1={center.y} y2={center.y} stroke={colors.line} strokeWidth={1} />;\n                    <text textAnchor='middle' x={embedX} y={center.y + 5} fontSize={18}>~</text>\n                    {renderArrow(new Vec3(center.x - 8, center.y), new Vec3(center.x - 12, center.y), 'posEmbedArrow')}\n                    {renderPlus(center, 'posEmbed')}\n                </>;\n                break;\n            case ElType.Block:\n                let dashArray = el.special === 'llm' ? '2 2' : undefined;\n                content = <>\n                    <rect className={s.block} width={size.x} height={size.y} fill={el.color ?? '#000000'} rx={3} ry={3} strokeDasharray={dashArray} stroke={stroke} />\n                    {el.items!.map((item, i) => renderEl(item, i))}\n                    {renderResiduals()}\n                    {el.special === 'transformer' && <text fontSize={13} textAnchor='start' x={4} y={14} fill={'#555'}>transformer i</text>}\n                    {el.special === 'llm' && <text fontSize={13} textAnchor='start' x={4} y={14} fill={'#333'}>LLM</text>}\n                </>;\n                opacityDimmed = 1.0;\n                break;\n            case ElType.Gap:\n                function renderMultihead(xPos: number) {\n                    let topY = Math.round(0.3 * size.y);\n                    let path = `M${size.x/2},${topY} L${xPos},${topY} L${xPos},${size.y - 2}`;\n                    return <>\n                        <path d={path} stroke={'black'} fill='none' className={s.dataPath} />\n                        {renderArrow(new Vec3(xPos, size.y), new Vec3(xPos, size.y-10), 'multihead-arrow')}\n                    </>;\n                }\n\n                content = <>\n                    <line className={s.gap} x1={0} y1={0} x2={0} y2={size.y} stroke={'black'} />\n                    {el.gapType === 'add' && renderPlus(new Vec3(size.x / 2, size.y / 2), 'add')}\n                    {el.arrow && renderArrow(new Vec3(size.x / 2, size.y), new Vec3(size.x / 2, 0), '0')}\n                    {el.gapType === 'multihead' && <>{renderMultihead(size.x / 2 - 30)}{renderMultihead(size.x / 2 + 30)}</>}\n                </>;\n                break;\n        }\n\n        return <g key={idx} transform={transform} opacity={opacityDimmed}>\n            {content}\n        </g>;\n    }\n\n    function renderExampleText() {\n        if (!canvas) {\n            return null;\n        }\n        let ctx = canvas.getContext('2d')!;\n        ctx.font = '16px Merriweather';\n\n        let textSegs = ['How', ' to', ' predict'];\n        let ids = [2437, 284, 4331];\n\n        let colors = [\n            'rgba(107,64,216,.3)',\n            'rgba(104,222,122,.4)',\n            'rgba(244,172,54,.4)',\n            'rgba(239,65,70,.4)',\n            'rgba(39,181,234,.4)',\n        ];\n\n\n        let widths: number[] = [];\n        let offsets = [0];\n        for (let seg of textSegs) {\n            widths.push(ctx.measureText(seg).width + 1);\n            offsets.push(offsets[offsets.length - 1] + widths[widths.length - 1]);\n        }\n\n        let egTextSegs = [' text', ' tokens', ' words'];\n        let egPct = [0.8, 0.5, 0.3];\n        let egIds = [2420, 16326, 2456];\n        let egWidths = egTextSegs.map(seg => ctx.measureText(seg).width + 1);\n\n        let egColor = colors[widths.length];\n        let egPosX = offsets[offsets.length - 1];\n        let egMaxWidth = Math.max(...egWidths);\n        let egTopY = -10;\n        let egIdWidth = 28;\n\n        let totalWidth = egPosX + egMaxWidth + egIdWidth + 6;\n        let x = structure.sizePx!.x / 2 - totalWidth / 2 + 20.5;\n        let y = 20;\n\n        let node = <g transform={`translate(${x} ${y})`}>\n            {textSegs.map((seg, i) => {\n                return <React.Fragment key={i}>\n                    <rect x={offsets[i]} y={0} width={widths[i] + 1} height={20} fill={colors[i]} />\n                    <text x={offsets[i]} y={16} fontSize={14}>{seg.replaceAll(' ', '\\xa0')}</text>\n                    <text x={offsets[i] + widths[i] / 2} y={30} fontSize={9} textAnchor='middle' fill={'#338a'}>{ids[i]}</text>\n                </React.Fragment>;\n            })}\n            {egTextSegs.map((seg, i) => {\n                return <React.Fragment key={i}>\n                    <rect x={egPosX} y={egTopY + 20 * i} width={egWidths[i] + 1} height={20} fill={egColor} />\n                    <text x={egPosX} y={egTopY + 20 * i + 16} fontSize={12} fillOpacity={egPct[i]}>{seg.replaceAll(' ', '\\xa0')}</text>\n                    <text x={egPosX + egMaxWidth + egIdWidth} y={egTopY + 20 * i + 13} fontSize={9} textAnchor='end' fill={'#338a'}>{egIds[i]}</text>\n                </React.Fragment>;\n            })}\n            <rect x={egPosX+1} y={egTopY+1} width={egMaxWidth + egIdWidth + 4} height={20 * egTextSegs.length - 2} fill={'none'} stroke={egColor} strokeDasharray={'4,4'} />\n        </g>;\n\n        return {\n            node,\n            inputPos: new Vec3(x, y + 40),\n            inputWidth: egPosX,\n            outputPos: new Vec3(x + egPosX, y + egTopY + 20 * egTextSegs.length + 2),\n            outputWidth: egMaxWidth + egIdWidth + 4,\n        };\n    }\n\n    let exampleInfo = renderExampleText();\n\n    function renderInputLines() {\n        let target = findByIdBounds('tokEmbed');\n        if (!exampleInfo || !target) {\n            return null;\n        }\n\n        let insetMain = 4;\n        let inset = 4;\n\n        let left = exampleInfo.inputPos.x + insetMain;\n        let right = exampleInfo.inputPos.x + exampleInfo.inputWidth - insetMain;\n        let top = Math.round(exampleInfo.inputPos.y);\n        let bot = top + 10;\n        let path = `M${left},${top} L${left + inset},${bot} L${right - inset},${bot} L${right},${top}`;\n        let center = (left + right) / 2;\n        let endPt = new Vec3(target.center().x, target.min.y);\n        let horizY = endPt.y - 10;\n\n        let path2 = `M${center},${bot} L${center},${horizY} L${endPt.x},${horizY} L${endPt.x},${endPt.y - 2}`;\n\n        return <>\n            <path d={path + path2} className={s.dataPath} />\n            {renderArrow(endPt, new Vec3(endPt.x, endPt.y - 10), 'multihead-arrow')}\n        </>;\n    }\n\n    function renderOutputLine() {\n        let softmaxOut = findByIdBounds('softmaxOut');\n        let llmTarget = findByIdBounds('llm');\n        if (!exampleInfo || !softmaxOut || !llmTarget) {\n            return null;\n        }\n\n        let startPt = new Vec3(softmaxOut.center().x, softmaxOut.max.y);\n        let botY = startPt.y + 10;\n        let rightX = llmTarget.max.x - 10;\n        let topY = llmTarget.min.y + 10;\n        let endPt = new Vec3(exampleInfo.outputPos.x + exampleInfo.outputWidth / 2, exampleInfo.outputPos.y);\n\n        let path = `M${startPt.x},${startPt.y} L${startPt.x},${botY} L${rightX},${botY} L${rightX},${topY} L${endPt.x},${topY} L${endPt.x},${endPt.y + 2}`;\n\n        return <>\n            <path d={path} className={s.dataPath} />\n            {renderArrow(endPt, new Vec3(endPt.x, endPt.y + 10), 'multihead-arrow')}\n        </>;\n    }\n\n    function getFocusBounds(entry: IEntryInfo): BoundingBox3d[] {\n        let idBounds = entry.ids.map(findByIdBounds).filter(isNotNil);\n\n        if (entry.groupIds) {\n            let box = new BoundingBox3d();\n            idBounds.forEach(b => box.combineInPlace(b));\n            return [box];\n        } else {\n            return idBounds;\n        }\n    }\n\n    function renderFocusBoxes() {\n        let focusId = hoverId ?? activeId;\n        let hoverEntry = entries.find(e => e.id === focusId);\n        return hoverEntry ? getFocusBounds(hoverEntry).map((bb, i) => renderFocusBox(bb, i)) : [];\n    }\n\n    function renderFocusBox(bb: BoundingBox3d, i: number) {\n        let innerPad = new Vec3(4, 4);\n        let tl = bb.min.sub(innerPad);\n        let br = bb.max.add(innerPad);\n        let pad = 30;\n\n        let color = colors.focus;\n\n        return <React.Fragment key={i}>\n            <defs>\n                <mask id={\"hole\" + i}>\n                    <rect x={tl.x - pad} y={tl.y - pad} width={br.x - tl.x + 2 * pad} height={br.y - tl.y + 2 * pad} fill={'white'} />\n                    <rect x={tl.x} y={tl.y} width={br.x - tl.x} height={br.y - tl.y} fill=\"black\"/>\n                </mask>\n            </defs>\n            <rect x={tl.x} y={tl.y} width={br.x - tl.x} height={br.y - tl.y} fill={color}\n                mask={`url(#hole${i})`}\n                style={{ filter: `drop-shadow(0px 0px 5px ${color})`}}\n                />\n            <rect x={tl.x} y={tl.y} width={br.x - tl.x} height={br.y - tl.y} fill={'none'} stroke={'#338a'} strokeWidth={2} strokeDasharray={'8,4'} />\n        </React.Fragment>;\n    }\n\n    function renderTocToDigramLines() {\n        if (!diagramEl) {\n            return null;\n        }\n\n        let svgRect = diagramEl.getBoundingClientRect();\n\n        let offsetLeft = getElGlobalBounds(structure, new Vec3(0, 0)).max.x + 10;\n        let offsetInc = 4;\n        let i = 0;\n        let result: React.ReactNode[] = [];\n\n        for (let entry of entries) {\n            let phase = entry.id;\n            let tocEl = entryManager.entries.get(phase);\n            if (!tocEl) {\n                continue;\n            }\n            let tocRect = tocEl.getBoundingClientRect();\n\n            let endPt = new Vec3(tocRect.left - svgRect.left - 4, tocRect.top - svgRect.top + tocRect.height / 2);\n\n            let allBounds = getFocusBounds(entry);\n\n            if (allBounds.length === 0) {\n                continue;\n            }\n\n            let yPts = [...allBounds.map(b => b.center().y), endPt.y];\n            let minY = Math.min(...yPts);\n            let maxY = Math.max(...yPts);\n            let midX = offsetLeft;\n            let mainPath = `M${midX},${minY} L${midX},${maxY} M${midX},${endPt.y} L${endPt.x},${endPt.y}`;\n            let isFocusEntry = hoverId ? entry.id === hoverId : entry.id === activeId;\n            let opacity = isFocusEntry ? 1.0 : 0.1;\n\n            let pathOpts = () => {\n                return { stroke: colors.focus, strokeWidth: 1, fill: 'none', strokeOpacity: opacity };\n            }\n\n            result.push(<path key={i++} {...pathOpts()} d={mainPath} />);\n\n            for (let bound of getFocusBounds(entry)) {\n                let startPt = new Vec3(bound.max.x + 8, bound.center().y);\n                let path = `M${startPt.x},${startPt.y} L${midX},${startPt.y}`;\n                result.push(<path key={i++} {...pathOpts()} d={path} />);\n            }\n\n            offsetLeft += offsetInc;\n        }\n\n        return result;\n    }\n\n    let height = getElGlobalBounds(structure, new Vec3(0, 0))!.max.y + 10;\n\n    let titleAbove = false;\n\n    return <div>\n        {titleAbove && <div className={s.tocTitle}>Table of Contents</div>}\n        <div className={s.tocDiagram}>\n            <svg viewBox={`0 0 310 ${height}`} width={'310px'} height={height} ref={setDiagramEl}>\n                {exampleInfo?.node}\n                {renderEl(structure, 0)}\n                {renderInputLines()}\n                {renderOutputLine()}\n                {renderFocusBoxes()}\n                {renderTocToDigramLines()}\n            </svg>\n            <div className={s.toc}>\n                {!titleAbove && <div className={s.tocTitle}>Table of Contents</div>}\n                {entryGroups.map((group, i) => {\n\n                    return <React.Fragment key={i}>\n                        <div className={s.tocGroupTitle}>{group.groupName}</div>\n                        {group.entries.map((entry, j) => {\n                            return <MenuEntry\n                                key={j}\n                                entryManager={entryManager}\n                                title={entry.title}\n                                id={entry.id}\n                                active={entry.id === activeId}\n                                hover={entry.id === hoverId}\n                                setHover={setHover}\n                                setActive={setActive}\n                            />;\n                        })}\n                </React.Fragment>;\n                })}\n            </div>\n        </div>\n    </div>;\n};\n\nclass EntryManager {\n    subscriptions = new Subscriptions();\n    entries = new Map<Phase, HTMLDivElement | null>();\n    setEl(id: Phase, ref: HTMLDivElement | null) {\n        if (ref) {\n            this.entries.set(id, ref);\n            return () => {\n                this.entries.delete(id);\n            }\n        } else {\n            this.entries.delete(id);\n        }\n    }\n}\n\nexport const MenuEntry: React.FC<{\n    entryManager: EntryManager,\n    title: string,\n    id: Phase,\n    active: boolean,\n    hover: boolean,\n    setHover: (ev: React.MouseEvent, id: Phase, hover: boolean) => void,\n    setActive: (ev: React.MouseEvent, id: Phase, active: boolean) => void,\n}> = memo(function MenuEntry({ entryManager, id, title, active, hover, setHover, setActive }) {\n\n    let setDivRef = useCallback((div: HTMLDivElement | null) => {\n        entryManager.setEl(id, div);\n    }, [entryManager, id]);\n\n\n    function handleClick(ev: React.MouseEvent) {\n        setActive(ev, id, !active);\n    }\n\n    function handleHover(ev: React.MouseEvent, hover: boolean) {\n        setHover(ev, id, hover);\n    }\n\n    return <div\n        ref={setDivRef}\n        className={clsx(\"cursor-pointer p-1 pl-3 \" + s.menuEntry, active && \"bg-blue-200\", hover && \"bg-blue-800 text-white\")}\n        onClick={handleClick}\n        onMouseEnter={ev => handleHover(ev, true)}\n        onMouseLeave={ev => handleHover(ev, false)}\n    >\n        {title}\n    </div>;\n});\n","import { base64ToArrayBuffer } from \"@/src/utils/data\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { bindFloatAttribs, createFloatBuffer, createShaderProgram, ensureFloatBufferSize, ensureShadersReady, IFloatBuffer, IGLContext, resetFloatBufferMap, uploadFloatBuffer } from \"@/src/utils/shader\";\nimport { Vec4 } from \"@/src/utils/vector\";\nimport { ISharedRender, modelViewUboText, RenderPhase, UboBindings } from \"./sharedRender\";\n\nexport interface ICharDef {\n    id: number;\n    index: number;\n    char: string;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    xoffset: number;\n    yoffset: number;\n    xadvance: number;\n    page: number;\n    chnl: number;\n}\n\nexport interface IKerningDef {\n    first: number;\n    second: number;\n    amount: number;\n}\n\nexport interface IFontCommonDef {\n    lineHeight: number;\n    base: number;\n    scaleW: number;\n    scaleH: number;\n    pages: number;\n    // assume multi-color msdf font\n}\n\nconst floatsPerSegment = 16 + 4;\n\nconst floatsPerVert = 5;\nconst bytesPerVert = floatsPerVert * 4;\n\nconst texWidth = 1024;\n\nexport interface IFontBuffers {\n    atlas: IFontAtlas;\n    vao: WebGLVertexArrayObject;\n    transformTex: WebGLTexture;\n    localTexBuffer: Float32Array;\n    vertBuffer: IFloatBuffer;\n    sharedRender: ISharedRender;\n\n    segmentsUsed: number;\n    segmentCapacity: number;\n    glSegmentCapacity: number;\n}\n\nexport type IFontAtlas = ReturnType<typeof setupFontAtlas>;\n\nexport interface IFontAtlasData {\n    fontAtlasImage: HTMLImageElement;\n    fontDef: any;\n}\n\nexport async function fetchFontAtlasData(): Promise<IFontAtlasData> {\n    let imgEl = document.createElement('img');\n    let imgP = new Promise<HTMLImageElement>((resolve, reject) => {\n        imgEl.onload = () => resolve(imgEl);\n        imgEl.onerror = () => reject();\n    });\n    imgEl.src = 'fonts/font-atlas.png';\n\n    let fontDefP = fetch('fonts/font-def.json', { credentials: 'include', mode: 'no-cors' }).then(r => r.json());\n\n    let [fontAtlasImage, fontDef] = await Promise.all([imgP, fontDefP]);\n\n    return {\n        fontAtlasImage,\n        fontDef,\n    };\n}\n\nexport function setupFontAtlas(ctx: IGLContext, data: IFontAtlasData) {\n    let gl = ctx.gl;\n\n    // With the fontDef, create a char -> glyph lookup\n    // Create a kerning lookup (could use x1 * b + x2 for the keys)\n    let fontDef = data.fontDef;\n\n    let atlasTex = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, atlasTex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data.fontAtlasImage);\n\n\n    // See https://github.com/Chlumsky/msdfgen for information on how to implement (this is the format the font atlas is in)\n\n    let program = createShaderProgram(ctx.shaderManager, 'font', /*glsl*/`#version 300 es\n        precision highp float;\n        ${modelViewUboText}\n        uniform sampler2D u_transformTex;\n        layout (location = 0) in vec2 a_position;\n        layout (location = 1) in vec2 a_uv;\n        layout (location = 2) in float a_textId;\n        out vec2 v_uv;\n        out vec4 v_fgColor;\n        out vec4 v_bgColor;\n\n        void main() {\n            int texWidth = textureSize(u_transformTex, 0).x;\n            int texOffset = int(a_textId) * ${floatsPerSegment / 4};\n            int y = texOffset / texWidth;\n            int x = texOffset % texWidth;\n            vec4 t0 = texelFetch(u_transformTex, ivec2(x + 0, y), 0);\n            vec4 t1 = texelFetch(u_transformTex, ivec2(x + 1, y), 0);\n            vec4 t2 = texelFetch(u_transformTex, ivec2(x + 2, y), 0);\n            vec4 t3 = texelFetch(u_transformTex, ivec2(x + 3, y), 0);\n            vec4 c = texelFetch(u_transformTex, ivec2(x + 4, y), 0);\n            mat4 transform = mat4(t0, t1, t2, t3);\n\n            gl_Position = u_view * u_model * transform * vec4(a_position, 0.0, 1.0);\n            v_uv = a_uv;\n            v_fgColor = c;\n            v_bgColor = vec4(0, 0, 0, 0);\n        }\n\n    `, /*glsl*/`#version 300 es\n        precision highp float;\n        uniform sampler2D u_tex;\n        uniform float pxRange; // set to distance field's pixel range\n        in vec2 v_uv;\n        in vec4 v_fgColor;\n        in vec4 v_bgColor;\n        out vec4 color;\n\n        float median(float r, float g, float b) {\n            return max(min(r, g), min(max(r, g), b));\n        }\n\n        float screenPxRange() {\n            vec2 unitRange = vec2(pxRange) / vec2(textureSize(u_tex, 0));\n            vec2 screenTexSize = vec2(1.0) / fwidth(v_uv);\n            return max(0.5*dot(unitRange, screenTexSize), 1.0);\n        }\n\n        void main() {\n            vec3 msd = texture(u_tex, v_uv).rgb;\n            float sd = median(msd.r, msd.g, msd.b);\n            float screenRange = screenPxRange();\n            float screenPxDistance = screenRange*(sd - 0.5);\n            float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\n            float blurOpacity = 0.0; //smoothstep(0.5 - 0.4, 0.5, sd);\n\n            if (opacity == 0.0 && blurOpacity == 0.0) {\n                discard;\n            }\n            color = mix(vec4(0,0,0,1.0) * blurOpacity, v_fgColor, opacity);\n        }\n    `, ['u_tex', 'u_transformTex', 'pxRange'], { uboBindings: { 'ModelViewUbo': UboBindings.ModelView } })!;\n\n    ensureShadersReady(ctx.shaderManager);\n\n    let locs = program.locs;\n    gl.useProgram(program.program);\n    gl.uniform1i(locs.u_tex, 0);\n    gl.uniform1i(locs.u_transformTex, 1);\n\n    let faceInfos = [];\n\n    for (let face of fontDef.faces) {\n        let charArr = new Int16Array(base64ToArrayBuffer(face.chars));\n\n        let perCharSize = 12;\n        let numChars = charArr.length / perCharSize;\n\n        let charMap = new Map<string, ICharDef>();\n        let charCodeMap = new Map<number, ICharDef>();\n        let chars: ICharDef[] = [];\n        for (let i = 0; i < numChars; i++) {\n            let offset = i * perCharSize;\n            let char: ICharDef = {\n                id: charArr[offset + 0],\n                index: charArr[offset + 1],\n                char: String.fromCharCode(charArr[offset + 2]),\n                x: charArr[offset + 3],\n                y: charArr[offset + 4],\n                width: charArr[offset + 5],\n                height: charArr[offset + 6],\n                xoffset: charArr[offset + 7],\n                yoffset: charArr[offset + 8],\n                xadvance: charArr[offset + 9],\n                page: charArr[offset + 10],\n                chnl: charArr[offset + 11],\n            };\n            charMap.set(char.char, char);\n            charCodeMap.set(char.id, char);\n            chars.push(char);\n        }\n\n        let kernArr = new Int16Array(base64ToArrayBuffer(face.kernings));\n\n        let perKernSize = 3;\n        let numKerns = kernArr.length / perKernSize;\n\n        let kernMap = new Map<string, number>();\n\n        for (let i = 0; i < numKerns; i++) {\n            let offset = i * perKernSize;\n            let kern = {\n                first: kernArr[offset + 0],\n                second: kernArr[offset + 1],\n                amount: kernArr[offset + 2],\n            };\n            let firstChar = charCodeMap.get(kern.first)!.char;\n            let secondChar = charCodeMap.get(kern.second)!.char;\n            kernMap.set(`${firstChar}${secondChar}`, kern.amount);\n        }\n\n        faceInfos.push({\n            name: face.name,\n            common: face.common as IFontCommonDef,\n            charMap,\n            kernMap,\n        });\n    }\n\n    return {\n        gl,\n        faceInfos,\n        program,\n        atlasTex,\n    };\n}\n\nexport function createFontBuffers(atlas: IFontAtlas, sharedRender: ISharedRender): IFontBuffers {\n    let gl = atlas.gl;\n\n    let segmentCapacity = 1024;\n    let glyphCapacity = 1024;\n\n    let transformTex = gl.createTexture()!;\n    gl.bindTexture(gl.TEXTURE_2D, transformTex);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // we'll fill it in later\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texWidth, computeTexHeight(segmentCapacity), 0, gl.RGBA, gl.FLOAT, null);\n\n    let vao = gl.createVertexArray()!;\n    gl.bindVertexArray(vao);\n\n    // Just using 1 buffer for all text for now\n    let vertVbo = gl.createBuffer()!;\n    bindFloatAttribs(gl, vertVbo, {}, [\n        { name: 'a_pos', size: 2 },\n        { name: 'a_uv', size: 2 },\n        { name: 'a_texIndex', size: 1 },\n    ]);\n    let vertBuffer = createFloatBuffer(gl, gl.ARRAY_BUFFER, vertVbo, glyphCapacity, bytesPerVert, sharedRender);\n\n    let localTexBuffer = new Float32Array(segmentCapacity * floatsPerSegment);\n\n    return {\n        atlas,\n        vao,\n        transformTex,\n        vertBuffer,\n        localTexBuffer,\n        segmentsUsed: 0,\n        segmentCapacity: 1024,\n        glSegmentCapacity: 1024,\n        sharedRender,\n    };\n}\n\nexport function computeTexHeight(numSegments: number) {\n    return Math.ceil(numSegments * floatsPerSegment / 4 / texWidth);\n}\n\n // Fudge factor to get it the same as HTML/CSS at the same px size\nlet scaleFudgeFactor = 1.04;\n\nexport function measureTextWidth(fontBuf: IFontBuffers, text: string, scale: number = 1.0, faceName?: string) {\n    let face = faceName ? fontBuf.atlas.faceInfos.find(a => a.name === faceName)! : fontBuf.atlas.faceInfos[0];\n    let x = 0;\n    let prevCodePoint = '';\n    for (let codePoint of text) {\n        let charDef = face.charMap.get(codePoint);\n        if (!charDef) {\n            continue;\n        }\n        let kernKey = `${prevCodePoint}${codePoint}`;\n        let kernAmount = face.kernMap.get(kernKey) || 0;\n        x += kernAmount + charDef.xadvance;\n        prevCodePoint = codePoint;\n    }\n    return x * scale / face.common.lineHeight * scaleFudgeFactor;\n}\n\nexport interface IFontOpts {\n    color: Vec4;\n    size: number;\n    mtx?: Mat4f;\n    faceName?: string;\n}\n\nexport function measureText(fontBuf: IFontBuffers, text: string, opts: IFontOpts) {\n    return measureTextWidth(fontBuf, text, opts.size, opts.faceName);\n}\n\nexport function drawText(fontBuf: IFontBuffers, text: string, dx: number, dy: number, opts: IFontOpts) {\n    writeTextToBuffer(fontBuf, text, opts.color, dx, dy, opts.size, opts.mtx, opts.faceName);\n}\n\nexport function writeTextToBuffer(fontBuf: IFontBuffers, text: string, color: Vec4, dx?: number, dy?: number, scale?: number, mtx?: Mat4f, faceName?: string) {\n    let face = faceName ? fontBuf.atlas.faceInfos.find(a => a.name === faceName)! : fontBuf.atlas.faceInfos[0];\n    if (!face) {\n        face = fontBuf.atlas.faceInfos[0];\n    }\n\n    let phase = fontBuf.sharedRender.activePhase;\n    let vertBuf = fontBuf.vertBuffer.localBufs[phase];\n    ensureFloatBufferSize(vertBuf, text.length * floatsPerVert);\n    if (fontBuf.segmentsUsed === Math.floor(texWidth * 4 / floatsPerSegment)) {\n        // the last segment on each texel row would overflow (it takes 5 texels), so we skip it\n        fontBuf.segmentsUsed += 1;\n    }\n    let segmentId = fontBuf.segmentsUsed;\n    let buf = vertBuf.buf;\n    let bufIdx = vertBuf.usedEls * fontBuf.vertBuffer.strideFloats;\n    let atlasWInv = 1.0 / face.common.scaleW;\n    let atlasHInv = 1.0 / face.common.scaleH;\n    let numGlyphs = 0;\n    let x = dx ?? 0;\n    let y = dy ?? 0;\n    let prevCodePoint = '';\n    scale = scale ?? 1.0;\n    let localScale = scale / face.common.lineHeight * scaleFudgeFactor;\n    for (let codePoint of text) {\n        let charDef = face.charMap.get(codePoint);\n        if (!charDef) {\n            // TODO: Handle missing characters e.g. use a default character\n            continue;\n        }\n        let kernKey = `${prevCodePoint}${codePoint}`;\n        let kernAmount = face.kernMap.get(kernKey) || 0;\n        x += kernAmount * localScale;\n\n        let ux = [charDef.x * atlasWInv, (charDef.x + charDef.width) * atlasWInv];\n        let uy = [charDef.y * atlasHInv, (charDef.y + charDef.height) * atlasHInv];\n\n        let px = [x + charDef.xoffset * localScale, x + (charDef.xoffset + charDef.width) * localScale];\n        let py = [y + charDef.yoffset * localScale, y + (charDef.yoffset + charDef.height) * localScale];\n\n        let tri = [0, 1,  0, 0,  1, 1,  1, 1,  0, 0,  1, 0];\n        for (let i = 0; i < 6; i++) {\n            let ix = tri[i * 2];\n            let iy = tri[i * 2 + 1];\n            buf[bufIdx++] = px[ix];\n            buf[bufIdx++] = py[iy];\n            buf[bufIdx++] = ux[ix];\n            buf[bufIdx++] = uy[iy];\n            buf[bufIdx++] = segmentId;\n        }\n\n        x += charDef.xadvance * localScale;\n\n        prevCodePoint = codePoint;\n        numGlyphs += 1;\n    }\n\n    vertBuf.usedEls += numGlyphs * 6;\n\n    // TODO: Do realloc stuff\n    mtx = mtx ?? new Mat4f();\n    color = color ?? new Vec4(1, 1, 1, 1);\n\n    if (fontBuf.segmentsUsed >= fontBuf.segmentCapacity) {\n        let newCapacity = fontBuf.segmentCapacity * 2;\n        let newBuf = new Float32Array(newCapacity * floatsPerSegment);\n        newBuf.set(fontBuf.localTexBuffer);\n        fontBuf.localTexBuffer = newBuf;\n    }\n\n    fontBuf.localTexBuffer.set(mtx, fontBuf.segmentsUsed * floatsPerSegment + 0);\n    fontBuf.localTexBuffer.set(color.toArray(), fontBuf.segmentsUsed * floatsPerSegment + 16);\n    fontBuf.segmentsUsed += 1;\n}\n\nexport function uploadAllText(fontBuf: IFontBuffers) {\n    let atlas = fontBuf.atlas;\n    let gl = atlas.gl;\n\n    // resize texture if needed\n    gl.bindTexture(gl.TEXTURE_2D, fontBuf.transformTex);\n\n    if (fontBuf.segmentCapacity > fontBuf.glSegmentCapacity) {\n        let w = 1024;\n        let h = Math.ceil(fontBuf.segmentCapacity * floatsPerSegment / 4 / w);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, w, h, 0, gl.RGBA, gl.FLOAT, null);\n        fontBuf.glSegmentCapacity = w * h / 4;\n    }\n\n    {\n        let w = 1024;\n        let h = Math.ceil(fontBuf.segmentsUsed * floatsPerSegment / 4 / w);\n        gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, w, h, gl.RGBA, gl.FLOAT, fontBuf.localTexBuffer);\n    }\n\n    uploadFloatBuffer(gl, fontBuf.vertBuffer);\n}\n\nexport function renderAllText(fontBuf: IFontBuffers, renderPhase: RenderPhase) {\n    let atlas = fontBuf.atlas;\n    let gl = atlas.gl;\n\n    gl.disable(gl.CULL_FACE);\n    gl.depthMask(false);\n\n    gl.useProgram(atlas.program.program);\n\n    let locs = atlas.program.locs;\n    gl.uniform1f(locs.pxRange, 4);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, atlas.atlasTex);\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, fontBuf.transformTex);\n\n    gl.bindVertexArray(fontBuf.vao);\n    let localBuf = fontBuf.vertBuffer.localBufs[renderPhase];\n    gl.drawArrays(gl.TRIANGLES, localBuf.glOffsetEls, localBuf.usedEls);\n\n    gl.depthMask(true);\n}\n\nexport function resetFontBuffers(fontBuf: IFontBuffers) {\n    resetFloatBufferMap(fontBuf.vertBuffer);\n    fontBuf.segmentsUsed = 0;\n}\n","import { Mat4f } from \"@/src/utils/matrix\";\nimport { bindFloatAttribs, createElementBuffer, createFloatBuffer, createShaderProgram, ensureElementBufferSize, ensureFloatBufferSize, IGLContext, resetElementBufferMap, resetFloatBufferMap, uploadElementBuffer, uploadFloatBuffer } from \"@/src/utils/shader\";\nimport { Vec3, Vec3Buf, Vec4 } from \"@/src/utils/vector\";\nimport { ISharedRender, modelViewUboText, RenderPhase, UboBindings } from \"./sharedRender\";\n\nexport type ILineRender = ReturnType<typeof createLineRender>;\n\nexport function createLineRender(ctx: IGLContext, sharedRender: ISharedRender) {\n\n\n    /* Lines are made up of several quads, 1(?) for each line segment.\n\n    we'll use TRIANGLE_STRIP for rendering, and indexed arrays to support primitive restart.\n\n    Just gonna render each line segment separately. Corners too much of a pain for now!\n\n    Still need to get the quad to face the camera, and to be the right size.\n    I think it makes sense to do this after projection in the vertex shader.\n\n    */\n\n    let gl = ctx.gl;\n\n    let lineVao = gl.createVertexArray()!;\n    gl.bindVertexArray(lineVao);\n\n    let lineVbo = gl.createBuffer()!;\n    let strideBytes = bindFloatAttribs(gl, lineVbo, { }, [\n        { name: 'a_position', size: 3 },\n        { name: 'a_lineDirA', size: 3 },\n        { name: 'a_lineDirB', size: 3 },\n        { name: 'a_color', size: 4 },\n        { name: 'a_thickness', size: 1 },\n        { name: 'a_firstPair', size: 1 },\n        { name: 'a_normal', size: 3 },\n        { name: 'a_dash', size: 1 },\n        { name: 'a_t', size: 1 },\n    ]);\n\n    let lineFloatBuf = createFloatBuffer(gl, gl.ARRAY_BUFFER, lineVbo, 1024, strideBytes, null);\n\n    let lineIbo = gl.createBuffer()!;\n    let lineIndexBuf = createElementBuffer(gl, lineIbo, 1024, sharedRender);\n\n    let lineShader = createShaderProgram(ctx, 'line', /*glsl*/`#version 300 es\n        precision highp float;\n        ${modelViewUboText}\n        uniform vec2 u_viewSizeInv;\n        layout(location = 0) in vec3 a_position;\n        layout(location = 1) in vec3 a_lineDirA;\n        layout(location = 2) in vec3 a_lineDirB;\n        layout(location = 3) in vec4 a_color;\n        layout(location = 4) in float a_thickness;\n        layout(location = 5) in float a_firstPair;\n        layout(location = 6) in vec3 a_normal;\n        layout(location = 7) in float a_dash;\n        layout(location = 8) in float a_t;\n        out vec2 v_linePos;\n        out vec4 v_color;\n        out float v_thickness;\n        out float v_dash;\n        void main() {\n\n            float mul = 1.0;\n            if (gl_VertexID % 2 == 0) {\n                mul = -1.0;\n            }\n\n            bool firstPair = a_firstPair > 0.0;\n\n            float width;\n\n            if (length(a_normal) == 0.0) {\n                vec4 clipPos = u_view * u_model * vec4(a_position, 1);\n                vec2 screenPos = clipPos.xy / clipPos.w;\n\n                vec4 lineDirAClip = u_view * u_model * vec4(a_position + a_lineDirA, 1);\n                vec2 lineDirA = normalize(lineDirAClip.xy / lineDirAClip.w - screenPos);\n                vec4 lineDirBClip = u_view * u_model * vec4(a_position + a_lineDirB, 1);\n                vec2 lineDirB = normalize(lineDirBClip.xy / lineDirBClip.w - screenPos);\n\n                vec2 avgDir = normalize(lineDirA + lineDirB);\n                vec2 activeDir = firstPair ? lineDirA : lineDirB;\n\n                float scale = sqrt(2.0) / length(lineDirA + lineDirB);\n                vec2 offset = vec2(-avgDir.y, avgDir.x);\n\n                if (scale > 5.0) {\n                    bool isOuter = cross(vec3(lineDirA, 0), vec3(lineDirB, 0)).z * mul < 0.0;\n                    if (isOuter) {\n                        offset = vec2(-activeDir.y, activeDir.x);\n                        scale = 1.0 / sqrt(2.0);\n                    } else {\n                        offset = vec2(-activeDir.y, activeDir.x);\n                        scale = 1.0 / sqrt(2.0);\n                    }\n                }\n\n                width = a_thickness * 2.0;\n                vec2 linePos = screenPos + offset * u_viewSizeInv * width * mul * scale;\n\n                gl_Position = vec4(linePos.xy * clipPos.w, clipPos.z, clipPos.w);\n                v_thickness = a_thickness;\n\n            } else {\n\n                width = a_thickness * 2.0;\n                vec3 activeDir = firstPair ? a_lineDirA : a_lineDirB;\n\n                vec3 avgDir = normalize(a_lineDirA + a_lineDirB);\n                vec3 offset = normalize(cross(a_normal, avgDir));\n                // need to scale by the amount of angle between the two line directions\n                float scale = sqrt(2.0) / length(a_lineDirA + a_lineDirB);\n\n                // if we exceed the miter limit (90 degrees), we need to clamp the line width, and draw a bevel instead.\n                // the inner corner stays the same, but the outer corner is a bevel.\n\n                if (scale > 2.0) {\n                    bool isOuter = cross(a_lineDirA, a_lineDirB).z * mul < 0.0;\n\n                    if (isOuter) {\n                        offset = normalize(cross(a_normal, activeDir));\n                        scale = 1.0 / sqrt(2.0);\n                    }\n                }\n\n                vec3 linePos = a_position + offset * mul * width * scale;\n\n                gl_Position = u_view * u_model * vec4(linePos, 1);\n                v_thickness = 100.0;\n\n            }\n\n            v_dash = a_dash;\n            v_color = a_color;\n            v_linePos = vec2(mul * width, a_t);\n        }\n    `, /*glsl*/`#version 300 es\n        precision highp float;\n        in vec2 v_linePos;\n        in vec4 v_color;\n        in float v_thickness;\n        in float v_dash;\n        out vec4 o_color;\n\n        void main() {\n            float lineWidth = v_thickness - 1.0;\n            float edge0 = lineWidth / 2.0;\n            float edge1 = lineWidth / 2.0 + fwidth(v_linePos.x);\n            float t = 1.0 - smoothstep(edge0, edge1, abs(v_linePos.x));\n\n            if (v_dash > 0.0) {\n                float dashPos = mod(v_linePos.y, v_dash);\n                if (dashPos > v_dash / 2.0) {\n                    t = 0.0;\n                }\n            }\n\n            if (t == 0.0) {\n                discard;\n            }\n\n            o_color = v_color * t;\n        }\n    `, [\n        'u_viewSizeInv'\n    ], { uboBindings: { 'ModelViewUbo': UboBindings.ModelView } })!;\n\n    return {\n        gl,\n        vao: lineVao,\n        floatBuf: lineFloatBuf,\n        indexBuf: lineIndexBuf,\n        lineShader,\n        sharedRender,\n    };\n}\n\nexport interface ILineOpts {\n    thick: number;\n    color: Vec4;\n    mtx: Mat4f;\n    n?: Vec3;\n    closed?: boolean;\n    dash?: number;\n}\n\nexport function makeLineOpts(opts: Partial<ILineOpts> = {}): ILineOpts {\n    return {\n        thick: +(opts.thick || 1),\n        color: opts.color || new Vec4(1, 1, 1, 1),\n        mtx: opts.mtx || Mat4f.identity,\n        n: opts.n || undefined,\n        closed: opts.closed || false,\n        dash: opts.dash ?? 0,\n    };\n}\n\nexport function addLine2(render: ILineRender, a: Vec3, b: Vec3, opts: ILineOpts) {\n    addLine(render, opts.thick, opts.color, a, b, opts.n, opts.mtx, opts.dash);\n}\n\nlet _lineA = new Vec3();\nlet _lineB = new Vec3();\nlet _lineDir = new Vec3();\n\nexport function addLine(render: ILineRender, thickness: number, color: Vec4, a: Vec3, b: Vec3, n?: Vec3, mtx?: Mat4f, dash?: number, t?: number) {\n    let phase = render.sharedRender.activePhase;\n    let floatLocalBuf = render.floatBuf.localBufs[0];\n    let buf = floatLocalBuf.buf;\n    let idxLocalBuf = render.indexBuf.localBufs[phase];\n    let idxBuf = idxLocalBuf.buf;\n    ensureFloatBufferSize(floatLocalBuf, 4);\n    ensureElementBufferSize(idxLocalBuf, 5);\n    if (mtx) {\n        mtx.mulVec3Affine_(a, _lineA);\n        mtx.mulVec3Affine_(b, _lineB);\n        // thickness = thickness;\n        // n = n ? mtx.mulVec3ProjVec(n) : undefined;\n    } else {\n        _lineA.copy_(a);\n        _lineB.copy_(b);\n    }\n\n    dash = dash ?? 0;\n    _lineDir.x = _lineB.x - _lineA.x;\n    _lineDir.y = _lineB.y - _lineA.y;\n    _lineDir.z = _lineB.z - _lineA.z;\n    let len = _lineDir.len();\n    let dirLen = 1.0 / len;\n    _lineDir.x *= dirLen;\n    _lineDir.y *= dirLen;\n    _lineDir.z *= dirLen;\n\n    let pt = [_lineA, _lineA, _lineB, _lineB];\n    n = n ?? Vec3.zero;\n\n    let i = floatLocalBuf.usedEls * floatLocalBuf.strideFloats;\n    let k = idxLocalBuf.usedVerts;\n    for (let j = 0; j < 4; j++) {\n        buf[i + 0] = pt[j].x;\n        buf[i + 1] = pt[j].y;\n        buf[i + 2] = pt[j].z;\n        buf[i + 3] = _lineDir.x;\n        buf[i + 4] = _lineDir.y;\n        buf[i + 5] = _lineDir.z;\n        buf[i + 6] = _lineDir.x;\n        buf[i + 7] = _lineDir.y;\n        buf[i + 8] = _lineDir.z;\n        buf[i + 9] = color.x;\n        buf[i + 10] = color.y;\n        buf[i + 11] = color.z;\n        buf[i + 12] = color.w;\n        buf[i + 13] = thickness;\n        buf[i + 14] = 1.0;\n        buf[i + 15] = n.x;\n        buf[i + 16] = n.y;\n        buf[i + 17] = n.z;\n        buf[i + 18] = dash;\n        buf[i + 19] = j < 2 ? 0 : len;\n        i += floatLocalBuf.strideFloats;\n        idxBuf[k + j] = floatLocalBuf.usedEls + j;\n    }\n    idxBuf[k + 4] = 0xffffffff;\n    floatLocalBuf.usedEls += 4;\n    idxLocalBuf.usedVerts += 5;\n}\n\nlet _lineSegBufs = new Float32Array(2 * 3);\nlet _dir = _lineSegBufs.subarray(0, 3);\nlet _prevDir = _lineSegBufs.subarray(3, 6);\nlet _ptsTransformed = new Float32Array(0);\nexport function drawLineSegs(render: ILineRender, pts: Float32Array, opts: ILineOpts) {\n    let phase = render.sharedRender.activePhase;\n    let floatLocalBuf = render.floatBuf.localBufs[0];\n    let buf = floatLocalBuf.buf;\n\n    let idxLocalBuf = render.indexBuf.localBufs[phase];\n    let idxBuf = idxLocalBuf.buf;\n\n    let ptsLen = pts.length;\n    let n = (opts.n ?? Vec3.zero).clone();\n\n    if (opts.mtx) {\n        if (_ptsTransformed.length < pts.length) {\n            _ptsTransformed = new Float32Array(pts.length);\n        }\n        for (let i = 0; i < pts.length; i += 3) {\n            opts.mtx.mulVec3AffineArr_(pts, i, _ptsTransformed, i);\n        }\n        pts = _ptsTransformed;\n        opts.mtx.mulVec3AffineVec_(n, n);\n    }\n\n    let nPts = ptsLen / 3 + (opts.closed ? 1 : 0);\n\n    ensureFloatBufferSize(floatLocalBuf, nPts * 4);\n    ensureElementBufferSize(idxLocalBuf, nPts * 4 + 1); // +1 for the primitive restart\n\n    if (opts.closed) {\n        Vec3Buf.sub_(pts, 0, pts, ptsLen - 3, _prevDir, 0);\n        Vec3Buf.normalize_(_prevDir, 0, _prevDir, 0);\n    }\n\n    let dash = opts.dash ?? 0;\n    let cx = opts.color.x;\n    let cy = opts.color.y;\n    let cz = opts.color.z;\n    let cw = opts.color.w;\n    let thick = opts.thick;\n    let nx = n.x;\n    let ny = n.y;\n    let nz = n.z;\n    let linePos = 0;\n\n    for (let i = 0; i < nPts; i++) {\n        let pOff = i * 3;\n        if (opts.closed && i === nPts - 1) {\n            pOff = 0;\n        }\n\n        let segLen = 0.0;\n        if ((!opts.closed && i < nPts - 1) || (opts.closed && i !== nPts - 2)) {\n            Vec3Buf.sub_(pts, pOff + 3, pts, pOff, _dir, 0);\n            segLen = Vec3Buf.len_(_dir, 0);\n            Vec3Buf.normalize_(_dir, 0, _dir, 0);\n\n        } else if (opts.closed && i === nPts - 2) {\n            // wrap around\n            Vec3Buf.sub_(pts, 0, pts, ptsLen - 3, _dir, 0);\n            segLen = Vec3Buf.len_(_dir, 0);\n            Vec3Buf.normalize_(_dir, 0, _dir, 0);\n        }\n\n        let bufOff = floatLocalBuf.usedEls * floatLocalBuf.strideFloats;\n        let idxOff = idxLocalBuf.usedVerts;\n\n        let dirA = (i == 0 && !opts.closed) ? _dir : _prevDir;\n        let dirB = (i == nPts - 1 && !opts.closed) ? _prevDir : _dir;\n\n        let idxCount = opts.closed && i === nPts - 1 ? 2 : 4;\n\n        for (let j = 0; j < idxCount; j++) {\n            Vec3Buf.copy_(pts, pOff, buf, bufOff);\n            Vec3Buf.copy_(dirA, 0, buf, bufOff + 3);\n            Vec3Buf.copy_(dirB, 0, buf, bufOff + 6);\n            buf[bufOff + 9] = cx;\n            buf[bufOff + 10] = cy;\n            buf[bufOff + 11] = cz;\n            buf[bufOff + 12] = cw;\n            buf[bufOff + 13] = thick;\n            buf[bufOff + 14] = j > 2 ? 0.0 : 1.0;\n            buf[bufOff + 15] = nx;\n            buf[bufOff + 16] = ny;\n            buf[bufOff + 17] = nz;\n            buf[bufOff + 18] = dash;\n            buf[bufOff + 19] = linePos;\n            bufOff += floatLocalBuf.strideFloats;\n            idxBuf[idxOff + j] = floatLocalBuf.usedEls + j;\n        }\n\n        floatLocalBuf.usedEls += idxCount;\n        idxLocalBuf.usedVerts += idxCount;\n        linePos += segLen;\n\n        Vec3Buf.copy_(_dir, 0, _prevDir, 0);\n    }\n\n    idxBuf[idxLocalBuf.usedVerts] = 0xffffffff;\n    idxLocalBuf.usedVerts += 1;\n}\n\nexport function uploadAllLines(render: ILineRender) {\n    let gl = render.gl;\n    uploadFloatBuffer(gl, render.floatBuf);\n    uploadElementBuffer(gl, render.indexBuf)\n}\n\nexport function renderAllLines(render: ILineRender, renderPhase: RenderPhase) {\n    let gl = render.gl;\n    let localIdxBuf = render.indexBuf.localBufs[renderPhase];\n    if (localIdxBuf.usedVerts === 0) {\n        return;\n    }\n\n    gl.disable(gl.CULL_FACE);\n    gl.depthMask(false);\n\n    gl.useProgram(render.lineShader.program);\n    gl.bindVertexArray(render.vao);\n\n    let locs = render.lineShader.locs;\n    gl.uniform2f(locs.u_viewSizeInv, 1.0 / gl.canvas.width, 1.0 / gl.canvas.height);\n    gl.drawElements(gl.TRIANGLE_STRIP, localIdxBuf.usedVerts, gl.UNSIGNED_INT, localIdxBuf.glOffsetBytes);\n\n    gl.depthMask(true);\n}\n\nexport function resetLineRender(render: ILineRender) {\n    resetFloatBufferMap(render.floatBuf);\n    resetElementBufferMap(render.indexBuf);\n}\n","import { Mat4f } from \"@/src/utils/matrix\";\nimport { IGLContext } from \"@/src/utils/shader\";\n\nexport const UboBindings = {\n    ModelView: 0,\n    Block: 1,\n    BlockAccess: 2,\n    blur: 3,\n};\n\n\nexport enum RenderPhase {\n    Opaque,\n    Arrows,\n    Overlay,\n    Overlay2D,\n}\n\nconst NumRenderPhases = 4;\n\nexport type ISharedRender = {\n    gl: WebGL2RenderingContext;\n    modelViewUbo: WebGLBuffer;\n    modelViewBuf: Float32Array;\n\n    activePhase: RenderPhase;\n    numPhases: number;\n}\n\nexport function initSharedRender(ctx: IGLContext): ISharedRender {\n    let gl = ctx.gl;\n\n    let modelViewUbo = gl.createBuffer()!;\n    gl.bindBuffer(gl.UNIFORM_BUFFER, modelViewUbo);\n    gl.bufferData(gl.UNIFORM_BUFFER, 2 * 16 * 4, gl.DYNAMIC_DRAW);\n    gl.bindBufferBase(gl.UNIFORM_BUFFER, UboBindings.ModelView, modelViewUbo);\n    let modelViewBuf = new Float32Array(2 * 16);\n\n    return { gl, modelViewUbo, modelViewBuf, activePhase: RenderPhase.Opaque, numPhases: NumRenderPhases };\n}\n\nexport function writeModelViewUbo(sharedRender: ISharedRender, modelMtx: Mat4f, viewMtx: Mat4f) {\n    let { gl, modelViewUbo, modelViewBuf } = sharedRender;\n\n    modelViewBuf.set(modelMtx, 0);\n    modelViewBuf.set(viewMtx, 16);\n\n    gl.bindBuffer(gl.UNIFORM_BUFFER, modelViewUbo);\n    gl.bufferSubData(gl.UNIFORM_BUFFER, 0, modelViewBuf);\n}\n\nexport const modelViewUboText = /*glsl*/`\n    layout(std140) uniform ModelViewUbo {\n        uniform mat4 u_model;\n        uniform mat4 u_view;\n    };`;\n","import { IBlkDef, IModelLayout } from \"../GptModelLayout\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { bindFloatAttribs, createFloatBuffer, createShaderProgram, IGLContext } from \"@/src/utils/shader\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { modelViewUboText, UboBindings } from \"./sharedRender\";\n\nexport type IThreadRender = ReturnType<typeof initThreadRender>;\n\nexport function initThreadRender(ctx: IGLContext) {\n\n\n    /* We'll construct a quad [0..1], [0..1] in the x-z plane that looks something like this:\n\n    It can go either vertical or horizontal, and in either forward or back.\n\n         [   ]\n         [ . ]\n         [ | ]\n         [ | ]\n         [ 0 ]\n\n    It's made up of a head, and a tail. Want a falloff pattern for the tail, and also a strength.\n    Likely clamp the tail for a max thickness/brightness.\n\n    Units are the same as the blocks, and threads are 1 unit thick (actually do multiple threads in one view).\n\n    Standard thread direction is towards the top, and in the first row of cells.\n    All cells below those are in the tail, with appropriate falloff.\n\n    The 3x2 threadDir matrix can be used to rotate the thread to any direction.\n\n    Any special effects like coloring one particular thread differently requires separate blocks.\n    E.g. first 5 columns have standard, next 1 has special, remaining have standard again.\n\n      0         1\n   0  ----------->  +x\n      | 0  0  0 |\n      | |  |  | |\n      | |  |  | |\n      | .  .  . |\n   1  v---------|\n\n      +y\n\n    */\n\n    let gl = ctx.gl;\n\n    let quadVbo = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, quadVbo);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n        0, 1, 0,\n        1, 1, 0,\n        1, 0, 0,\n        0, 0, 0,\n    ]), gl.STATIC_DRAW);\n\n    let vao = gl.createVertexArray()!;\n    gl.bindVertexArray(vao);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 3, gl.FLOAT, false, 0, 0);\n\n    let instanceVbo = gl.createBuffer()!;\n    let instanceStride = bindFloatAttribs(gl, instanceVbo, { divisor: 1, locOffset: 2 }, [\n        { name: 'a_offset', size: 3 },\n        { name: 'a_size', size: 3 },\n        { name: 'a_nCells', size: 2 },\n        { name: 'a_threadDir', size: 2, nCols: 3 },\n    ]);\n    let instanceBuf = createFloatBuffer(gl, gl.ARRAY_BUFFER, instanceVbo, 1024, instanceStride, null);\n\n    let shader = createShaderProgram(ctx, 'thread', /*glsl*/`#version 300 es\n        precision highp float;\n        ${modelViewUboText}\n        layout(location = 0) in vec3 a_position;\n        layout(location = 1) in vec3 a_normal;\n\n        uniform vec3 u_offset;\n        uniform vec3 u_size;\n        uniform vec2 u_nCells;\n        uniform mat3x2 u_threadDir;\n        out vec3 v_normal;\n        out vec3 v_modelPos;\n        out vec2 v_blockPos;\n        out vec2 v_squarePos;\n        void main() {\n            vec2 localPos = u_threadDir * vec3(a_position.xy, 1);\n            vec3 model_pos = a_position * u_size + u_offset;\n            gl_Position = u_view * u_model * vec4(model_pos, 1);\n            v_normal = a_normal;\n            v_modelPos = model_pos;\n            v_blockPos = localPos * abs(u_threadDir * vec3(u_nCells, 0));\n            v_squarePos = localPos;\n        }\n    `, /*glsl*/`#version 300 es\n        precision highp float;\n        in vec3 v_normal;\n        in vec3 v_modelPos;\n        in vec2 v_blockPos;\n        in vec2 v_squarePos;\n        out vec4 o_color;\n        uniform vec2 u_nCells;\n        uniform vec3 u_camPos; // in model space\n        uniform vec3 u_baseColor;\n\n        void main() {\n            ivec2 blockPos = ivec2(v_blockPos - v_normal.xy * 0.0);\n\n            vec2 pxPerCell = 1.0 / fwidth(v_blockPos);\n            float maxPxPerCell = max(pxPerCell.x, pxPerCell.y);\n\n            vec4 color = vec4(0);\n\n            if (v_blockPos.y < 0.0) {\n                discard;\n            }\n\n            if (blockPos.y == 0) {\n                // draw head\n                vec2 d = fract(v_blockPos) - 0.5;\n                float d2 = sqrt(d.x * d.x + d.y * d.y);\n\n                // fwidth(d);\n                float deltad2_per_px = fwidth(d2); // fwidth(d2);\n\n                float t = 1.0 - smoothstep(0.45, 0.45 + 1.0 * deltad2_per_px, d2);\n\n                float t2 = smoothstep(0.35, 0.35 + 1.0 * deltad2_per_px, d2);\n\n                // if (d2 > 0.35 && d2 < 0.45) {\n                color = mix(color, vec4(u_baseColor, 1), min(t, t2));\n                // }\n            }\n\n            if (v_blockPos.y > (0.5 + 0.45)) {\n                float falloffY = 1.0 - clamp(v_blockPos.y / 10.0, 0.0, 1.0);\n\n                float cellPosX = fract(v_blockPos.x);\n                float distFromX = abs(cellPosX - 0.5);\n                // small side-to-side falloff based on distFromX for a glow effect\n                float falloffX = 1.0 - smoothstep(0.0, min(0.3, 5.0 * fwidth(v_blockPos.x)), distFromX);\n\n                color = mix(color, vec4(u_baseColor, 1), falloffX * falloffY);\n            }\n\n            // color = vec4(1, 0, 0, 1);\n\n            o_color = color;\n        }\n    `, [\n        'u_size', 'u_offset', 'u_baseColor', 'u_nCells', 'u_threadDir',\n    ], { uboBindings: { 'ModelViewUbo': UboBindings.ModelView } })!;\n\n\n    return {\n        gl,\n        vao,\n        quadVbo,\n        instanceVbo,\n        instanceBuf,\n        numInstances: 0,\n        shader,\n        threadInfos: [] as IThreadInfo[],\n    };\n}\n\nexport interface IThreadInfo {\n    pos: Vec3;\n    size: Vec3;\n    nCells: Vec3;\n    baseColor: Vec4;\n    threadDir: number[]; // 6 element, 3x2 matrix; col major\n}\n\nexport function drawThread(threadRender: IThreadRender, layout: IModelLayout, blk: IBlkDef, dim: Dim, x: number, y: number, cx: number, cy: number, color: Vec4) {\n    let threadDir = dim === Dim.X ? [0, -1,  1, 0,  0, 1] : [1, 0,  0, -1,  0, 1];\n    let pos = new Vec3(blk.x + x * layout.cell, blk.y + y * layout.cell, blk.z + blk.dz);\n    let size = new Vec3(cx * layout.cell, cy * layout.cell, blk.dz);\n    let nCells = new Vec3(cx, cy, 0);\n    threadRender.threadInfos.push({ pos, size, nCells, baseColor: color, threadDir });\n}\n\nexport function renderAllThreads(threadRender: IThreadRender) {\n    let { gl, shader, vao: threadVao } = threadRender;\n\n    gl.enable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.CULL_FACE);\n    gl.depthMask(false);\n    gl.polygonOffset(-1.0, -2.0);\n\n    let locs = shader.locs;\n    gl.useProgram(shader.program);\n    gl.bindVertexArray(threadVao);\n\n    for (let a of threadRender.threadInfos) {\n        let color = a.baseColor;\n        gl.uniform3f(locs.u_offset, a.pos.x, a.pos.y, a.pos.z);\n        gl.uniform3f(locs.u_size, a.size.x, a.size.y, a.size.z);\n        gl.uniform2f(locs.u_nCells, a.nCells.x, a.nCells.y);\n        gl.uniform3f(locs.u_baseColor, color.x, color.y, color.z);\n        gl.uniformMatrix3x2fv(locs.u_threadDir, false, a.threadDir);\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n    }\n\n    threadRender.threadInfos = [];\n\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.depthMask(true);\n}\n","import { Mat4f } from \"@/src/utils/matrix\";\nimport { bindFloatAttribs, createElementBuffer, createFloatBuffer, createShaderProgram, ensureElementBufferSize, ensureFloatBufferSize, IGLContext, resetElementBufferMap, resetFloatBufferMap, uploadElementBuffer, uploadFloatBuffer } from \"@/src/utils/shader\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { ISharedRender, modelViewUboText, RenderPhase, UboBindings } from \"./sharedRender\";\n\nexport type ITriRender = ReturnType<typeof initTriRender>;\n\nexport function initTriRender(ctx: IGLContext, sharedRender: ISharedRender) {\n\n\n    /* Lines are made up of several quads, 1(?) for each line segment.\n\n    we'll use TRIANGLE_STRIP for rendering, and indexed arrays to support primitive restart.\n\n    Just gonna render each line segment separately. Corners too much of a pain for now!\n\n    Still need to get the quad to face the camera, and to be the right size.\n    I think it makes sense to do this after projection in the vertex shader.\n\n    */\n\n    let gl = ctx.gl;\n\n    let vao = gl.createVertexArray()!;\n    gl.bindVertexArray(vao);\n\n    let triVbo = gl.createBuffer()!;\n    let byteStride = bindFloatAttribs(gl, triVbo, {}, [\n        { name: 'a_pos', size: 3 },\n        { name: 'a_normal', size: 3 },\n        { name: 'a_color', size: 4 },\n        { name: 'a_uv', size: 2 },\n    ]);\n    let triFloatBuf = createFloatBuffer(gl, gl.ARRAY_BUFFER, triVbo, 1024, byteStride, null);\n\n    let triIbo = gl.createBuffer()!;\n    let triIndexBuf = createElementBuffer(gl, triIbo, 1024, sharedRender);\n\n    let triShader = createShaderProgram(ctx, 'triangles', /*glsl*/`#version 300 es\n        precision highp float;\n        ${modelViewUboText}\n        layout(location = 0) in vec3 a_position;\n        layout(location = 1) in vec3 a_normal;\n        layout(location = 2) in vec4 a_color;\n        layout(location = 3) in vec2 a_uv;\n        out vec4 v_color;\n        out vec2 v_uv;\n        out vec3 v_normal;\n        void main() {\n            gl_Position = u_view * u_model * vec4(a_position, 1);\n            v_color = a_color;\n            v_normal = a_normal;\n            v_uv = a_uv;\n        }\n    `, /*glsl*/`#version 300 es\n        precision highp float;\n        in vec2 v_uv;\n        in vec3 v_normal;\n        in vec4 v_color;\n        out vec4 o_color;\n\n        void main() {\n            o_color = v_color;\n        }\n    `, [], { uboBindings: { 'ModelViewUbo': UboBindings.ModelView } })!;\n\n    return {\n        gl,\n        vao,\n        vbo: triFloatBuf,\n        ibo: triIndexBuf,\n        triShader,\n        sharedRender,\n    };\n}\n\nlet defaultN = new Vec3(0, 0, 1);\n\nlet _vertP = new Vec3();\nlet _vertN = new Vec3();\nexport function addVert(render: ITriRender, p: Vec3, color: Vec4, n?: Vec3, mtx?: Mat4f) {\n    let phase = render.sharedRender.activePhase;\n    let vbo = render.vbo.localBufs[0];\n    let ibo = render.ibo.localBufs[phase];\n    ensureFloatBufferSize(vbo, 1);\n    ensureElementBufferSize(ibo, 1);\n    let fBuf = vbo.buf;\n    let iBuf = ibo.buf;\n    let fIdx = vbo.usedEls * vbo.strideFloats;\n    let iIdx = ibo.usedVerts;\n\n    if (mtx) {\n        mtx.mulVec3Affine_(p, _vertP);\n        mtx.mulVec3AffineVec_(n || defaultN, _vertN);\n    } else {\n        _vertP.copy_(p);\n        _vertN.copy_(n || defaultN);\n    }\n\n    fBuf[fIdx + 0] = _vertP.x;\n    fBuf[fIdx + 1] = _vertP.y;\n    fBuf[fIdx + 2] = _vertP.z;\n    fBuf[fIdx + 3] = _vertN.x;\n    fBuf[fIdx + 4] = _vertN.y;\n    fBuf[fIdx + 5] = _vertN.z;\n    fBuf[fIdx + 6] = color.x;\n    fBuf[fIdx + 7] = color.y;\n    fBuf[fIdx + 8] = color.z;\n    fBuf[fIdx + 9] = color.w;\n    fBuf[fIdx + 10] = 0; // uv.x\n    fBuf[fIdx + 11] = 0; // uv.y\n\n    iBuf[iIdx] = vbo.usedEls;\n\n    vbo.usedEls += 1;\n    ibo.usedVerts += 1;\n}\n\nlet _quadTr = new Vec3();\nlet _quadBl = new Vec3();\nexport function addQuad(render: ITriRender, tl: Vec3, br: Vec3, color: Vec4, mtx?: Mat4f, isEnd: boolean = true) {\n    _quadTr.x = br.x;\n    _quadTr.y = tl.y;\n    _quadTr.z = tl.z;\n\n    _quadBl.x = tl.x;\n    _quadBl.y = br.y;\n    _quadBl.z = br.z;\n\n    addVert(render, tl, color, undefined, mtx);\n    addVert(render, _quadBl, color, undefined, mtx);\n    addVert(render, _quadTr, color, undefined, mtx);\n    addVert(render, br, color, undefined, mtx);\n    if (isEnd) {\n        let phase = render.sharedRender.activePhase;\n        let localBuf = render.ibo.localBufs[phase];\n        ensureElementBufferSize(localBuf, 1);\n        localBuf.buf[localBuf.usedVerts++] = 0xffffffff; // primitive restart\n    }\n}\n\nexport function addPrimitiveRestart(render: ITriRender) {\n    let phase = render.sharedRender.activePhase;\n    let localBuf = render.ibo.localBufs[phase];\n    ensureElementBufferSize(localBuf, 1);\n    localBuf.buf[localBuf.usedVerts++] = 0xffffffff; // primitive restart\n}\n\nexport function uploadAllTris(render: ITriRender) {\n    let gl = render.gl;\n    uploadFloatBuffer(gl, render.vbo);\n    uploadElementBuffer(gl, render.ibo);\n}\n\nexport function renderAllTris(render: ITriRender, renderPhase: RenderPhase) {\n    let gl = render.gl;\n    let localIdxBuf = render.ibo.localBufs[renderPhase];\n    if (localIdxBuf.usedVerts === 0) {\n        return;\n    }\n\n    gl.depthMask(renderPhase === RenderPhase.Opaque);\n    gl.disable(gl.CULL_FACE);\n    gl.useProgram(render.triShader.program);\n    gl.bindVertexArray(render.vao);\n    gl.drawElements(gl.TRIANGLE_STRIP, localIdxBuf.usedVerts, gl.UNSIGNED_INT, localIdxBuf.glOffsetBytes);\n    gl.depthMask(true);\n}\n\nexport function resetTriRender(render: ITriRender) {\n    resetElementBufferMap(render.ibo);\n    resetFloatBufferMap(render.vbo);\n}\n\nexport function checkError(gl: WebGL2RenderingContext, msg: string) {\n    let errno = gl.getError();\n    if (errno !== gl.NO_ERROR) {\n        console.error('GLERROR:', msg, '0x' + errno.toString(16));\n        return true;\n    }\n    return false;\n}\n","import { IWalkthrough, Phase } from \"./Walkthrough\";\nimport { Colors, commentary, DimStyle, dimStyleColor, embed, ITimeInfo, IWalkthroughArgs, moveCameraTo, phaseTools, setInitialCamera } from \"./WalkthroughTools\";\nimport s from './Walkthrough.module.scss';\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { clamp, makeArray } from \"@/src/utils/data\";\nimport React, { useState } from \"react\";\nimport { useProgramState } from \"../Sidebar\";\nimport { dimProps, findSubBlocks, splitGrid } from \"../Annotations\";\nimport { useGlobalDrag } from \"@/src/utils/pointer\";\nimport { BlkSpecial, IBlkDef } from \"../GptModelLayout\";\nimport { IProgramState } from \"../Program\";\nimport { lerp } from \"@/src/utils/math\";\nimport { drawDependences } from \"../Interaction\";\nimport { drawDataFlow } from \"../components/DataFlow\";\n\n/*\nWe're mostly on the right track here I think.\n\nMain things that could do with improvement:\n\n - Make the camera movement more robust. It should basically be on rails when moving the slider.\n - We store the camera pos at the start of a given movement, and use that as a lerp, and also\n   have a default so we can do a reversal\n\n - Have a highlight-region animation in both the text and the model, to bring attention to a specific\n   point. Probably a rectangle with a rotating border. Could also include a shaded background on the text\n\n - Scroll the text to the next region to read\n\n - Have more pronounced (& consistent) delays between: camera movement/scroll -> higlight -> action\n   - Can probably combine the camera movement and the highlight into a single action, but still have\n     a delay between the highlight and the action\n\n - Generally lean on the new display features more. Might need to add a few more (e.g. animate the dot product)\n - Also probably need to do TeX style layout for maths in the html view :( Could probably reuse the code from the\n   3d layout? Just need to get the glyphs in via css/ttf, and then maybe use canvas for positioning? Hmm should\n   be able to use divs with abs positioning.\n\n - For stopping/starting, use t + dt to figure out when it was crossed, rather than storing the lastPauseTime etc\n\n*/\n\ninterface IIntroState {\n\n}\n\nfunction getIntroState(walkthrough: IWalkthrough): IIntroState {\n    return walkthrough.phaseData.get(Phase.Intro_Intro) as IIntroState;\n}\n\nexport function walkthroughIntro(args: IWalkthroughArgs) {\n    let { breakAfter, afterTime, c_str } = phaseTools(args.state);\n    let { state, layout, walkthrough: wt } = args;\n\n    if (wt.phase !== Phase.Intro_Intro) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(184.744, 0.000, -636.820), new Vec3(296.000, 16.000, 13.500));\n\n    let c0 = commentary(wt, null, 0)`Welcome to the walkthrough of the GPT large language model! Here we'll explore the model _nano-gpt_, with a mere 85,000 parameters.\n\nIts goal is a simple one: take a sequence of six letters: ${embed(ExampleInputOutput)}\nand sort them in alphabetical order, i.e. to \"ABBBCC\".`;\n\n    if (c0.t > 0) {\n        for (let cube of layout.cubes) {\n            if (cube.t === 'i' && cube.access) {\n                cube.access.disable = true;\n            }\n        }\n        state.display.tokenIdxModelOpacity = makeArray(6, 0);\n    }\n\n    let t4 = afterTime(null, 1.5, 0.4);\n\n    moveCameraTo(args.state, t4, new Vec3(5.450, 0.000, 7.913), new Vec3(281.500, 12.500, 0.519));\n    let t6 = afterTime(null, 1.0, 0.2);\n\n    if (t4.active) {\n        state.display.topOutputOpacity = 0.2;\n    }\n\n    if (t6.active && t6.t < 1.0) {\n        let mixes = [0, 0, 0, 0, 0, 0];\n        for (let i = 0; i < 6; i++) {\n            // want to smoothly flash each token in turn (t6.t goes from 0-1, and each token should flash at 0.2, 0.4, 0.6, 0.8, 1.0 etc)\n            let highT = (i + 1.5) / 8;\n            mixes[i] = 1.0 - clamp(Math.abs(t6.t - highT) * 4, 0, 1);\n        }\n        state.display.tokenColors = { mixes, color2: dimStyleColor(DimStyle.Token) }; //  new Vec4(0.8, 0.2, 0.8) };\n    }\n\n    breakAfter();\n\n    let tokenStr = c_str('_token_', 0, DimStyle.Token);\n    let tokenIdxStr = c_str('_token index_', 0, DimStyle.TokenIdx);\n\n    commentary(wt, t6)`We call each of these letters a ${tokenStr}, and the set of the model's different tokens make up its _vocabulary_:${embed(TokenVocab)}\n\n    From this table, each token is assigned a number, its ${tokenIdxStr}. And now we can enter this sequence of numbers into the model:${embed(ExampleTokenValues)}\\n`;\n    breakAfter();\n\n    let t7 = afterTime(null, 1.5, 0.5);\n\n    if (t7.active) {\n        let opacity = makeArray(6, 0);\n        for (let i = 0; i < 6; i++) {\n            let highT = (i + 1.5) / 8;\n            opacity[i] = clamp((t7.t - highT) * 4, 0, 1);\n        }\n        state.display.tokenIdxColors = { mixes: opacity, color2: dimStyleColor(DimStyle.TokenIdx) };\n\n        let idxPos = t7.t * 6;\n\n        if (t7.t < 1.0) {\n            splitGrid(layout, layout.idxObj, Dim.X, idxPos, clamp(6 - idxPos, 0, 1));\n            for (let blk of findSubBlocks(layout.idxObj, Dim.X, null, Math.min(5, Math.floor(idxPos)))) {\n                if (blk.access) {\n                    blk.access.disable = false;\n                }\n            }\n        } else {\n            if (layout.idxObj.access) {\n                layout.idxObj.access.disable = false;\n            }\n        }\n    }\n\n    breakAfter();\n\n    let c5 = commentary(wt)`In the 3d view, each green cell represents a number being processed, and each blue cell is a weight. ${embed(GreenBlueCells)}\n    Each number in the sequence first gets turned into a 48 element vector (a size chosen for this particular model). This is called an _embedding_.`;\n    breakAfter(c5);\n\n    {\n        let t_camMove = afterTime(null, 1.0, 0.5);\n        let t_makeVecs = afterTime(null, 2.0, 0.5);\n\n        moveCameraTo(state, t_camMove, new Vec3(14.1, 0, -30.4), new Vec3(286, 14.5, 0.8));\n\n        if (t_makeVecs.active) {\n            let idxPos = t_makeVecs.t * 6;\n            let splitWidth = clamp(6 - idxPos, 0, 2);\n            let splitIdx = Math.min(5, Math.floor(idxPos));\n            if (t_makeVecs.t < 1.0) {\n                splitGrid(layout, layout.idxObj, Dim.X, idxPos, splitWidth);\n                for (let blk of findSubBlocks(layout.idxObj, Dim.X, null, splitIdx)) {\n                    if (blk.access) {\n                        blk.access.disable = false;\n                    }\n                }\n\n                splitGrid(layout, layout.residual0, Dim.X, idxPos, splitWidth);\n                for (let blk of findSubBlocks(layout.residual0, Dim.X, null, splitIdx)) {\n                    if (blk.access) {\n                        blk.access.disable = false;\n                    }\n                }\n            } else {\n                if (layout.residual0.access) {\n                    layout.residual0.access.disable = false;\n                }\n            }\n        }\n    }\n\n    breakAfter();\n    commentary(wt)`The embedding is then passed through the model, going through a series of layers, called transformers, before reaching the bottom.`;\n    breakAfter();\n\n    {\n\n        let t_firstResid = afterTime(null, 1.0, 0.5);\n        moveCameraTo(state, t_firstResid, new Vec3(-23.160, 0.000, -128.380), new Vec3(292.300, 26.800, 2.400));\n        let t_firstResidWalk = afterTime(null, 5.0, 0.5);\n\n        let processState = processUpTo(state, t_firstResidWalk, layout.blocks[0].attnResidual);\n\n        let t_firstTransformer = afterTime(null, 1.0, 0.5);\n        moveCameraTo(state, t_firstTransformer, new Vec3(-78.7, 0, -274.2), new Vec3(299.4, 14.7, 4.3));\n        let t_firstTransformerWalk = afterTime(null, 3.5, 0.5);\n        processUpTo(state, t_firstTransformerWalk, layout.blocks[0].mlpResidual, processState);\n\n        if (t_firstTransformer.active) {\n            layout.blocks[0].transformerLabel.visible = t_firstTransformer.t;\n        }\n\n        let t_fullFrame = afterTime(null, 1.0, 0.5);\n        moveCameraTo(state, t_fullFrame, new Vec3(-147, 0, -744.1), new Vec3(298.5, 23.4, 12.2));\n        let t_fullFrameWalk = afterTime(null, 5.0, 0.5);\n        processUpTo(state, t_fullFrameWalk, layout.ln_f.lnResid, processState);\n\n\n        // let t_endFrame = afterTime(null, 1.0, 0.5);\n        // moveCameraTo(state, t_endFrame, new Vec3(-18.3, 0, -1576), new Vec3(280.6, 9.7, 1.9));\n        // let t_endFrameWalk = afterTime(null, 2.0, 0.5);\n        // processUpTo(state, t_endFrameWalk, layout.ln_f.lnResid, processState);\n\n        let t_output = afterTime(null, 1.0, 0.5);\n        moveCameraTo(state, t_output, new Vec3(-58.4, 0, -1654.9), new Vec3(271.3, 6.4, 1.1));\n        // moveCameraTo(state, t_output, new Vec3(-53.9, 0, -1654.1), new Vec3(270.9, 6.2, 1.1));\n        let t_outputWalk = afterTime(null, 2.0, 0.5);\n        processUpTo(state, t_outputWalk, layout.logitsSoftmax, processState);\n\n        let t_outputToks = afterTime(null, 1.0, 0.5);\n\n        if (t_firstResid.active) {\n            let arr = makeArray(6, 0);\n\n            if (t_outputToks.active) {\n                for (let i = 0; i < 6; i++) {\n                    let highT = (i + 1.5) / 8;\n                    arr[i] = clamp((t_outputToks.t - highT) * 4, 0, 1);\n                }\n            }\n\n            // state.display.lines.push(arr.map(a => a.toFixed(2).padStart(4)).join(', '));\n            state.display.tokenOutputColors = { color1: new Vec4(0,0,0,0), color2: Vec4.fromHexColor('#000', 1), mixes: arr };\n        }\n    }\n\n    commentary(wt)`So what's the output? A prediction of the next token in the sequence. So at the 6th entry, we get probabilities that the next token is\n        going to be 'A', 'B', or 'C'.`\n\n    commentary(wt)`In this case, the model is pretty sure it's going to be 'A'. Now, we can feed this prediction back into the top of the model, and repeat\n    the entire process.`;\n\n    breakAfter();\n}\n\ninterface IProcessInfo {\n    lastBlockIdx: number;\n}\n\nexport function startProcessBefore(state: IProgramState, block: IBlkDef): IProcessInfo {\n    let activeBlocks = state.layout.cubes.filter(a => a.t !== 'w');\n\n    return {\n        lastBlockIdx: activeBlocks.indexOf(block) - 1,\n    };\n}\n\nexport function processUpTo(state: IProgramState, timer: ITimeInfo, block: IBlkDef, prevInfo?: IProcessInfo): IProcessInfo {\n\n    let activeBlocks = state.layout.cubes.filter(a => a.t !== 'w');\n\n    let firstIdx = prevInfo ? prevInfo.lastBlockIdx + 1 : 0;\n    let lastIdx = activeBlocks.indexOf(block);\n\n    // we weight the time on each block by the number of cells in the block, times by how many dependent cells it has\n    // although to make this less extreme, we take a fractional power of this\n    let cellCounts = activeBlocks\n        .filter((_, i) => i >= firstIdx && i <= lastIdx)\n        .map(a => (a.cx * a.cy) * Math.pow(a.deps?.dotLen ?? 1, 0.25));\n    let totalCells = cellCounts.reduce((a, b) => a + b, 0);\n\n    let accCell = 0;\n    let currIdx = firstIdx;\n    let subPos = 0; // 0 -> 1\n    for (let i = firstIdx; i <= lastIdx; i++) {\n        let blockFract = cellCounts[i - firstIdx] / totalCells;\n        accCell += blockFract;\n        if (timer.t < accCell) {\n            currIdx = i;\n            subPos = (timer.t - (accCell - blockFract)) / blockFract;\n            break;\n        }\n    }\n\n    let blk = activeBlocks[currIdx];\n\n    // default, but switched for attention matrix\n    let dim0 = Dim.X;\n    let dim1 = Dim.Y;\n    if (blk.transpose) {\n        dim0 = Dim.Y;\n        dim1 = Dim.X;\n    }\n\n    let { cx } = dimProps(blk, dim0);\n    let { cx: cy } = dimProps(blk, dim1);\n\n    let horizPos = lerp(0, cx, subPos);\n    let horizIdx = Math.floor(horizPos);\n\n    let vertPos = lerp(0, cy, horizPos - horizIdx);\n    let vertIdx = Math.floor(vertPos);\n\n    let blockPos = new Vec3().withSetAt(dim0, horizIdx).withSetAt(dim1, vertIdx); // new Vec3(horizIdx, vertIdx, 0);\n    let pinPos = new Vec3(Math.floor(cx / 2), 0, 0);\n\n    if (blk === state.layout.residual0) {\n        pinPos = new Vec3(cx * 2, -2, 0);\n    }\n\n    if (timer.t >= 1.0) {\n        currIdx = lastIdx;\n    }\n\n    for (let i = firstIdx; i < currIdx; i++) {\n        let blk = activeBlocks[i];\n        if (blk.access) {\n            blk.access.disable = false;\n        }\n    }\n\n    if (timer.active && timer.t < 1.0) {\n        drawDependences(state, blk, blockPos);\n        drawDataFlow(state, blk, blockPos, pinPos);\n\n        for (let label of state.layout.labels) {\n            for (let c of label.cubes) {\n                if (c === blk) {\n                    label.visible = 1.0;\n                }\n            }\n        }\n\n        blk.highlight = 0.3;\n\n        let column = splitGrid(state.layout, blk, dim0, horizPos, 0);\n        if (column) {\n            for (let col of findSubBlocks(blk, dim0, null, horizIdx)) {\n                if (col.access) {\n                    col.access.disable = false;\n                    col.highlight = 0.1;\n                }\n            }\n            column.highlight = 0.4;\n\n            let curr = splitGrid(state.layout, column, dim1, vertPos, 0);\n            for (let blk of findSubBlocks(column, dim1, null, vertIdx)) {\n                if (blk.access) {\n                    blk.access.disable = false;\n                }\n            }\n            if (curr) {\n                curr.highlight = 0.7;\n            }\n        }\n\n\n    } else if (timer.active) {\n        let blk = activeBlocks[lastIdx];\n        if (blk.access) {\n            blk.access.disable = false;\n        }\n    }\n\n    let info = prevInfo ?? { lastBlockIdx: currIdx };\n    info.lastBlockIdx = lastIdx;\n    return info;\n}\n\nconst ExampleInputOutput: React.FC = () => {\n    let state = useProgramState();\n    let cols = state.display.tokenColors;\n    let chars = 'CBABBC'.split('');\n\n    return <div className={s.tableWrap}>\n        <div>{chars.map((c, i) => {\n            let baseColor = dimStyleColor(DimStyle.Token);\n            if (cols) {\n                baseColor = Vec4.lerp(baseColor, cols.color2, cols.mixes[i]);\n            }\n            return <span key={i} style={{ color: baseColor.toHexColor() }}>{c} </span>;\n        })}</div>\n    </div>;\n};\n\nconst ExampleTokenValues: React.FC = () => {\n    let state = useProgramState();\n    let cols = state.display.tokenIdxColors;\n    let chars = 'CBABBC'.split('');\n\n     return <div className={s.tableWrap}>\n        <div>{chars.map((c, i) => {\n            let tokIdx = c.charCodeAt(0) - 'A'.charCodeAt(0);\n\n            let baseColor = dimStyleColor(DimStyle.TokenIdx);\n            if (cols) {\n                baseColor = Vec4.lerp(baseColor, cols.color2, cols.mixes[i]);\n            }\n            return <span key={i} style={{ color: baseColor.toHexColor() }}>{tokIdx} </span>;\n        })}</div>\n    </div>;\n};\n\nconst TokenVocab: React.FC = () => {\n\n    return <div className={s.tableWrap}>\n        <table className={s.table}>\n            <tbody>\n                <tr className={s.tokString} style={{ color: dimStyleColor(DimStyle.Token).toHexColor() }}>\n                    <th>token</th><td>A</td><td>B</td><td>C</td>\n                </tr>\n                <tr className={s.tokIndex} style={{ color: dimStyleColor(DimStyle.TokenIdx).toHexColor() }}>\n                    <th>index</th><td>0</td><td>1</td><td>2</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n};\n\nconst GreenBlueCells: React.FC = () => {\n\n    let [blueNums, setBlueNums] = useState([-0.7, 0.7, -0.1]);\n    let [greenNums, setGreenNums] = useState([-0.7, 0.4, 0.8]);\n\n    let blueColor = new Vec4(0.3, 0.3, 1.0);\n    let greenColor = new Vec4(0.3, 0.9, 0.3);\n\n    return <div className={s.tableWrap}>\n        <div className={s.cellInfoCols}>\n            <div className={s.cellInfoCol}>\n                <Cell nums={greenNums} color={greenColor} mul={0.5} />\n                <Graph nums={greenNums} color={greenColor} setNums={setGreenNums} />\n                <div className={s.cellInfoText}>being processed</div>\n            </div>\n            <div className={s.cellInfoCol}>\n                <Cell nums={blueNums} color={blueColor} mul={1} />\n                <Graph nums={blueNums} color={blueColor} setNums={setBlueNums} />\n                <div className={s.cellInfoText}>weights</div>\n            </div>\n        </div>\n    </div>\n};\n\nconst Cell: React.FC<{ nums: number[], color: Vec4, mul?: number }> = ({ color, nums, mul }) => {\n\n    let grey = new Vec4(0.5, 0.5, 0.5, 1.0);\n    let cellLight = Vec4.lerp(color, grey, 0.9);\n    let cellDark = cellLight.mul(0.98);\n    cellDark.w = 1.0;\n\n    let cellColor = (n: number) => {\n        let weight = clamp(Math.abs(n), 0.0, 1.0);\n\n        let negColor = new Vec4(0.0, 0.0, 0.0);\n        let posColor = color;\n        let zeroColor = new Vec4(0.5, 0.5, 0.5);\n        if (n < 0.0) {\n            return Vec4.lerp(zeroColor, negColor, weight).toHexColor();\n        } else {\n            return Vec4.lerp(zeroColor, posColor, weight).toHexColor();\n        }\n    };\n\n    return <div className={s.cellArrayHoriz}>\n        {nums.map((n, i) => {\n            return <div className={s.cellRect} key={i} style={{ backgroundColor: (i % 2 === 0 ? cellLight : cellDark).toHexColor() }}>\n                <div className={s.cellCircle} style={{ backgroundColor: cellColor(n * (mul ?? 1.0)) }} />\n            </div>;\n        })}\n    </div>\n};\n\nconst Graph: React.FC<{\n    nums: number[],\n    color: Vec4,\n    max?: number,\n    setNums?: (nums: number[]) => void,\n}> = ({ color, nums, max, setNums }) => {\n    let [graphEl, setGraphEl] = useState<HTMLDivElement | null>(null);\n\n    let ticks = [-1, 0, 1];\n    let cellW = 30;\n    let dispColor = color.mul(1.0);\n    dispColor.w = 0.5;\n\n    interface IDragInitial {\n        index: number;\n        nums: number[];\n    }\n\n    let [, setDragStart] = useGlobalDrag<IDragInitial>(function handleMove(ev, ds) {\n        let dy = ev.clientY - ds.clientY;\n        let h = graphEl!.clientHeight * 0.5;\n        let nums = [...ds.data.nums];\n        nums[ds.data.index] = clamp(nums[ds.data.index] - dy / h, -1.0, 1.0);\n        setNums?.(nums);\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n    })\n\n    return <div className={s.graph} style={{ width: cellW * nums.length }} ref={setGraphEl}>\n\n        <div className={s.axisLeft} />\n\n        <div className={s.axisZero} />\n\n        {nums.map((n, i) => {\n            let nScaled = n / (max ?? 1.0);\n\n            return <div className={s.graphCol} key={i}>\n                <div className={s.graphBar} style={{\n                    backgroundColor: dispColor.toHexColor(),\n                    top: nScaled < 0 ? '50%' : `${(0.5 - nScaled/2) * 100}%`,\n                    height: `${(Math.abs(nScaled)/2) * 100}%`,\n                }} />\n                <div\n                    className={s.graphBarHit}\n                    onMouseDown={ev => {\n                        setDragStart(ev, { index: i, nums });\n                        ev.stopPropagation();\n                        ev.preventDefault();\n                    }}\n                    style={{\n                        top: `${(0.5 - nScaled/2) * 100}%`\n                    }} />\n                <div className={s.graphBarLabel} style={{\n                     bottom: nScaled < 0 ? '50%' : undefined,\n                        top: nScaled > 0 ? '50%' : undefined,\n                }}>\n                    {n.toFixed(1)}\n                </div>\n            </div>;\n        })}\n\n    </div>;\n\n};\n","import React from 'react';\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, embed, IWalkthroughArgs, setInitialCamera } from \"./WalkthroughTools\";\nimport s from './Walkthrough.module.scss';\nimport { Vec3 } from '@/src/utils/vector';\n\nlet minGptLink = 'https://github.com/karpathy/minGPT';\nlet pytorchLink = 'https://pytorch.org/';\nlet andrejLink = 'https://karpathy.ai/';\nlet zeroToHeroLink = 'https://karpathy.ai/zero-to-hero.html';\n\nexport function walkthrough01_Prelim(args: IWalkthroughArgs) {\n    let { state, walkthrough: wt } = args;\n\n    if (wt.phase !== Phase.Intro_Prelim) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(184.744, 0.000, -636.820), new Vec3(296.000, 16.000, 13.500));\n\n    let c0 = commentary(wt, null, 0)`\nBefore we delve into the algorithm's intricacies, let's take a brief step back.\n\nThis guide focuses on _inference_, not training, and as such is only a small part of the entire machine-learning process.\nIn our case, the model's weights have been pre-trained, and we use the inference process to generate output. This runs directly in your browser.\n\nThe model showcased here is part of the GPT (generative pre-trained transformer) family, which can be described as a \"context-based token predictor\".\nOpenAI introduced this family in 2018, with notable members such as GPT-2, GPT-3, and GPT-3.5 Turbo, the latter being the foundation of the widely-used ChatGPT.\nIt might also be related to GPT-4, but specific details remain unknown.\n\nThis guide was inspired by the ${embedLink('minGPT', minGptLink)} GitHub project, a minimal GPT implementation in ${embedLink('PyTorch', pytorchLink)}\ncreated by ${embedLink('Andrej Karpathy', andrejLink)}.\nHis YouTube series ${embedLink(\"Neural Networks: Zero to Hero\", zeroToHeroLink)} and the minGPT project have been invaluable resources in the creation of this\nguide. The toy model featured here is based on one found within the minGPT project.\n\nAlright, let's get started!\n`;\n\n}\n\nexport function embedLink(a: React.ReactNode, href: string) {\n    return embedInline(<a className={s.externalLink} href={href} target=\"_blank\" rel=\"noopener noreferrer\">{a}</a>);\n}\n\nexport function embedInline(a: React.ReactNode) {\n    return { insertInline: a };\n}\n\n\n// Another similar model is BERT (bidirectional encoder representations from transformers), a \"context-aware text encoder\" commonly\n// used for tasks like document classification and search.  Newer models like Facebook's LLaMA (large language model architecture), continue to use\n// a similar transformer architecture, albeit with some minor differences.\n","import { duplicateGrid, splitGrid } from \"../Annotations\";\nimport { getBlockValueAtIdx } from \"../components/DataFlow\";\nimport { IBlkDef } from \"../GptModelLayout\";\nimport { drawText, IFontOpts, measureText } from \"../render/fontRender\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, DimStyle, IWalkthroughArgs, moveCameraTo, setInitialCamera } from \"./WalkthroughTools\";\nimport { processUpTo, startProcessBefore } from \"./Walkthrough00_Intro\";\n\nexport function walkthrough02_Embedding(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state, tools: { c_str, c_blockRef, c_dimRef, afterTime, cleanup, breakAfter }, layout } = args;\n    let render = state.render;\n\n    if (wt.phase !== Phase.Input_Detail_Embedding) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(15.654, 0.000, -80.905), new Vec3(287.000, 14.500, 3.199));\n    wt.dimHighlightBlocks = [layout.idxObj, layout.tokEmbedObj, layout.posEmbedObj, layout.residual0];\n\n    commentary(wt)`\nWe saw previously how the tokens are mapped to a sequence of integers using a simple lookup table.\nThese integers, the ${c_blockRef('_token indices_', state.layout.idxObj, DimStyle.TokenIdx)}, are the first and only time we see integers in the model.\nFrom here on out, we're using floats (decimal numbers).\n\nLet's take a look at how the 4th token (index 3) is used to generate the 4th column vector of our ${c_blockRef('_input embedding_', state.layout.residual0)}.`;\n    breakAfter();\n\n    let t_moveCamera = afterTime(null, 1.0);\n    let t0_splitEmbedAnim = afterTime(null, 0.3);\n\n    breakAfter();\n\n    commentary(wt)`\nWe use the token index (in this case ${c_str('B', DimStyle.Token)} = ${c_dimRef('1', DimStyle.TokenIdx)}) to select the 2nd column of the ${c_blockRef('_token embedding matrix_', state.layout.tokEmbedObj)} on the left.\nNote we're using 0-based indexing here, so the first column is at index 0.\n\nThis produces a column vector of size ${c_dimRef('_C_ = 48', DimStyle.C)}, which we describe as the token embedding.\n    `;\n    breakAfter();\n\n    let t1_fadeEmbedAnim = afterTime(null, 0.3);\n    let t2_highlightTokenEmbed = afterTime(null, 0.8);\n\n    breakAfter();\n\n    commentary(wt)`\nAnd since we're looking at our token ${c_str('B', DimStyle.Token)} in the 4th _position_ (t = ${c_dimRef('3', DimStyle.T)}), we'll take the 4th column of the ${c_blockRef('_position embedding matrix_', state.layout.posEmbedObj)}.\n\nThis also produces a column vector of size ${c_dimRef('_C_ = 48', DimStyle.C)}, which we describe as the position embedding.\n    `;\n    breakAfter();\n\n    let t4_highlightPosEmbed = afterTime(null, 0.8);\n\n    breakAfter();\n\n    commentary(wt)`\nNote that both of these position and token embeddings are learned during training (indicated by their blue color).\n\nNow that we have these two column vectors, we simply add them together to produce another column vector of size ${c_dimRef('_C_ = 48', DimStyle.C)}.\n`;\n\n    breakAfter();\n\n    let t3_moveTokenEmbed = afterTime(null, 0.8);\n    let t5_movePosEmbed = afterTime(null, 0.8);\n    let t6_plusSymAnim = afterTime(null, 0.8);\n    let t7_addAnim = afterTime(null, 0.8);\n    let t8_placeAnim = afterTime(null, 0.8);\n    let t9_cleanupInstant = afterTime(null, 0.0);\n    let t10_fadeAnim = afterTime(null, 0.8);\n\n    breakAfter();\n\n    commentary(wt)`\nWe now run this same process for all of the tokens in the input sequence, creating a set of vectors which incorporate both the token values and their positions.\n\n`;\n\n    breakAfter();\n\n    let t11_fillRest = afterTime(null, 5.0);\n\n    breakAfter();\n\n    commentary(wt)`\nFeel free to hover over individual cells on the ${c_blockRef('_input embedding_', state.layout.residual0)} matrix to see the computations and their sources.\n\nWe see that running this process for all the tokens in the input sequence produces a matrix of size ${c_dimRef('_T_', DimStyle.T)} x ${c_dimRef('_C_', DimStyle.C)}.\nThe ${c_dimRef('_T_', DimStyle.T)} stands for ${c_dimRef('_time_', DimStyle.T)}, i.e., you can think of tokens later in the sequence as later in time.\nThe ${c_dimRef('_C_', DimStyle.C)} stands for ${c_dimRef('_channel_', DimStyle.C)}, but is also referred to as \"feature\" or \"dimension\" or \"embedding size\". This length, ${c_dimRef('_C_', DimStyle.C)},\nis one of the several \"hyperparameters\" of the model, and is chosen by the designer to in a tradeoff between model size and performance.\n\nThis matrix, which we'll refer to as the ${c_blockRef('_input embedding_', state.layout.residual0)} is now ready to be passed down through the model.\nThis collection of ${c_dimRef('T', DimStyle.T)} columns each of length ${c_dimRef('C', DimStyle.C)} will become a familiar sight throughout this guide.\n`;\n\n    cleanup(t9_cleanupInstant, [t3_moveTokenEmbed, t5_movePosEmbed, t6_plusSymAnim, t7_addAnim, t8_placeAnim]);\n    cleanup(t10_fadeAnim, [t0_splitEmbedAnim, t1_fadeEmbedAnim, t2_highlightTokenEmbed, t4_highlightPosEmbed]);\n\n    moveCameraTo(state, t_moveCamera, new Vec3(7.6, 0, -33.1), new Vec3(290, 15.5, 0.8));\n\n    let residCol: IBlkDef = null!;\n    let exampleIdx = 3;\n    if ((t0_splitEmbedAnim.t > 0.0 || t10_fadeAnim.t > 0.0) && t11_fillRest.t === 0) {\n        splitGrid(layout, layout.idxObj, Dim.X, exampleIdx + 0.5, t0_splitEmbedAnim.t * 4.0);\n\n        layout.residual0.access!.disable = true;\n        layout.residual0.opacity = lerp(1.0, 0.1, t1_fadeEmbedAnim.t);\n\n        residCol = splitGrid(layout, layout.residual0, Dim.X, exampleIdx + 0.5, t0_splitEmbedAnim.t * 4.0)!;\n        residCol.highlight = 0.3;\n\n        residCol.opacity = lerp(1.0, 0.0, t1_fadeEmbedAnim.t);\n\n    }\n\n    let tokValue = getBlockValueAtIdx(layout.idxObj, new Vec3(exampleIdx, 0, 0)) ?? 1;\n\n\n    let tokColDupe: IBlkDef | null = null;\n    let posColDupe: IBlkDef | null = null;\n\n    if (t2_highlightTokenEmbed.t > 0.0) {\n        let tokEmbedCol = splitGrid(layout, layout.tokEmbedObj, Dim.X, tokValue + 0.5, t2_highlightTokenEmbed.t * 4.0)!;\n\n        tokColDupe = duplicateGrid(layout, tokEmbedCol);\n        tokColDupe.t = 'i';\n        tokEmbedCol.highlight = 0.3;\n\n        let startPos = new Vec3(tokEmbedCol.x, tokEmbedCol.y, tokEmbedCol.z);\n        let targetPos = new Vec3(residCol.x, residCol.y, residCol.z).add(new Vec3(-2.0, 0, 3.0));\n\n        let pos = startPos.lerp(targetPos, t3_moveTokenEmbed.t);\n\n        tokColDupe.x = pos.x;\n        tokColDupe.y = pos.y;\n        tokColDupe.z = pos.z;\n    }\n\n\n    if (t4_highlightPosEmbed.t > 0.0) {\n        let posEmbedCol = splitGrid(layout, layout.posEmbedObj, Dim.X, exampleIdx + 0.5, t4_highlightPosEmbed.t * 4.0)!;\n\n        posColDupe = duplicateGrid(layout, posEmbedCol);\n        posColDupe.t = 'i';\n        posEmbedCol.highlight = 0.3;\n\n        let startPos = new Vec3(posEmbedCol.x, posEmbedCol.y, posEmbedCol.z);\n        let targetPos = new Vec3(residCol.x, residCol.y, residCol.z).add(new Vec3(2.0, 0, 3.0));\n\n        let pos = startPos.lerp(targetPos, t5_movePosEmbed.t);\n\n        posColDupe.x = pos.x;\n        posColDupe.y = pos.y;\n        posColDupe.z = pos.z;\n    }\n\n    if (t6_plusSymAnim.t > 0.0 && tokColDupe && posColDupe && t7_addAnim.t < 1.0) {\n        for (let c = 0; c < layout.shape.C; c++) {\n            let plusCenter = new Vec3(\n                (tokColDupe.x + tokColDupe.dx + posColDupe.x) / 2,\n                tokColDupe.y + layout.cell * (c + 0.5),\n                tokColDupe.z + tokColDupe.dz / 2);\n\n            let isActive = t6_plusSymAnim.t > (c + 1) / layout.shape.C;\n            let opacity = lerp(0.0, 1.0, isActive ? 1 : 0);\n\n            let fontOpts: IFontOpts = { color: new Vec4(0, 0, 0, 1).mul(opacity), size: 1.5, mtx: Mat4f.fromTranslation(plusCenter) };\n            let w = measureText(render.modelFontBuf, '+', fontOpts);\n\n            drawText(render.modelFontBuf, '+', -w/2, -fontOpts.size/2, fontOpts);\n        }\n    }\n\n    let origResidPos = residCol ? new Vec3(residCol.x, residCol.y, residCol.z) : new Vec3();\n    let offsetResidPos = origResidPos.add(new Vec3(0.0, 0, 3.0));\n\n    if (t7_addAnim.t > 0.0 && tokColDupe && posColDupe) {\n        let targetPos = offsetResidPos;\n        let tokStartPos = new Vec3(tokColDupe.x, tokColDupe.y, tokColDupe.z);\n        let posStartPos = new Vec3(posColDupe.x, posColDupe.y, posColDupe.z);\n\n        let tokPos = tokStartPos.lerp(targetPos, t7_addAnim.t);\n        let posPos = posStartPos.lerp(targetPos, t7_addAnim.t);\n\n        tokColDupe.x = tokPos.x;\n        tokColDupe.y = tokPos.y;\n        tokColDupe.z = tokPos.z;\n        posColDupe.x = posPos.x;\n        posColDupe.y = posPos.y;\n        posColDupe.z = posPos.z;\n\n        if (t7_addAnim.t > 0.95) {\n            tokColDupe.opacity = 0.0;\n            posColDupe.opacity = 0.0;\n            residCol.opacity = 1.0;\n            residCol.highlight = 0.0;\n            residCol.access!.disable = false;\n            residCol.x = targetPos.x;\n            residCol.y = targetPos.y;\n            residCol.z = targetPos.z;\n        }\n    }\n\n    if (t8_placeAnim.t > 0.0) {\n        let startPos = offsetResidPos;\n        let targetPos = origResidPos;\n        let pos = startPos.lerp(targetPos, t8_placeAnim.t);\n        residCol.x = pos.x;\n        residCol.y = pos.y;\n        residCol.z = pos.z;\n    }\n\n    if (t9_cleanupInstant.t > 0.0 && residCol) {\n        residCol.opacity = 1.0;\n        residCol.highlight = 0.0;\n        residCol.access!.disable = false;\n    }\n\n    if (t11_fillRest.t > 0.0) {\n        layout.residual0.access!.disable = true;\n\n        let prevInfo = startProcessBefore(state, layout.residual0);\n        processUpTo(state, t11_fillRest, layout.residual0, prevInfo);\n    }\n    // new Vec3(-6.9, 0, -36.5), new Vec3(281.5, 5.5, 0.8)\n}\n","import React from \"react\";\nimport { findSubBlocks, splitGrid } from \"../Annotations\";\nimport { drawDataFlow } from \"../components/DataFlow\";\nimport { drawDependences } from \"../Interaction\";\nimport { clamp } from \"@/src/utils/data\";\nimport { lerp } from \"@/src/utils/math\";\nimport { Dim, Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { processUpTo, startProcessBefore } from \"./Walkthrough00_Intro\";\nimport { commentary, DimStyle, IWalkthroughArgs, moveCameraTo, setInitialCamera } from \"./WalkthroughTools\";\n\nexport function walkthrough03_LayerNorm(args: IWalkthroughArgs) {\n    let { walkthrough: wt, layout, state, tools: { afterTime, c_str, c_blockRef, c_dimRef, breakAfter, cleanup } } = args;\n    let { C } = layout.shape;\n\n    if (wt.phase !== Phase.Input_Detail_LayerNorm) {\n        return;\n    }\n\n    let ln = layout.blocks[0].ln1;\n\n    setInitialCamera(state, new Vec3(-6.680, 0.000, -65.256), new Vec3(281.000, 9.000, 2.576));\n    wt.dimHighlightBlocks = [layout.residual0, ...ln.cubes];\n\n    commentary(wt, null, 0)`\n\nThe  ${c_blockRef('_input embedding_', state.layout.residual0)} matrix from the previous section is the input to our first Transformer block.\n\nThe first step in the Transformer block is to apply _layer normalization_ to this matrix. This is an\noperation that normalizes the values in each column of the matrix separately.`;\n    breakAfter();\n\n    let t_moveCamera = afterTime(null, 1.0);\n    let t_hideExtra = afterTime(null, 1.0, 1.0);\n    let t_moveInputEmbed = afterTime(null, 1.0);\n    let t_moveCameraClose = afterTime(null, 0.5);\n\n    breakAfter();\n    commentary(wt)`\nNormalization is an important step in the training of deep neural networks, and it helps improve the\nstability of the model during training.\n\nWe can regard each column separately, so let's focus on the 4th column (${c_dimRef('t = 3', DimStyle.T)}) for now.`;\n\n    breakAfter();\n    let t_focusColumn = afterTime(null, 0.5);\n\n    // mu ascii: \\u03bc\n    // sigma ascii: \\u03c3\n    breakAfter();\n    commentary(wt)`\nThe goal is to make the average value in the column equal to 0 and the standard deviation equal to 1. To do this,\nwe find both of these quantities (${c_blockRef('mean (\\u03bc)', ln.lnAgg1)} & ${c_blockRef('std dev (\\u03c3)', ln.lnAgg2)}) for the column and then subtract the average and divide by the standard deviation.`;\n\n    breakAfter();\n\n    let t_calcMuAgg = afterTime(null, 0.5);\n    let t_calcVarAgg = afterTime(null, 0.5);\n\n    // 1e-5 as 1x10^-5, but with superscript: 1x10<sup>-5</sup>\n\n    breakAfter();\n    commentary(wt)`\nThe notation we use here is E[x] for the average and Var[x] for the variance (of the column of length ${c_dimRef('C', DimStyle.C)}). The\nvariance is simply the standard deviation squared. The epsilon term (ε = ${<>1&times;10<sup>-5</sup></>}) is there to prevent division by zero.\n\nWe compute and store these values in our aggregation layer since we're applying them to all values in the column.\n\nFinally, once we have the normalized values, we multiply each element in the column by a learned\n${c_blockRef('weight (\\u03b3)', ln.lnSigma)} and then add a ${c_blockRef('bias (β)', ln.lnMu)} value, resulting in our ${c_blockRef('normalized values', ln.lnResid)}.`;\n\n    breakAfter();\n\n    let t_clean_aggs = afterTime(null, 0.2);\n    cleanup(t_clean_aggs, [t_calcMuAgg, t_calcVarAgg]);\n    let t_colSequence = afterTime(null, 2.0);\n\n    breakAfter();\n    commentary(wt)`\nWe run this normalization operation on each column of the ${c_blockRef('input embedding matrix', layout.residual0)}, and the result is\nthe ${c_blockRef('normalized input embedding', ln.lnResid)}, which is ready to be passed into the Self-Attention layer.\n`;\n\n    breakAfter();\n    let t_cleanupSplits = afterTime(null, 0.5);\n    cleanup(t_cleanupSplits, [t_focusColumn]);\n    if (t_cleanupSplits.t > 0) {\n        t_colSequence.t = 0;\n    }\n    let t_runAggFull = afterTime(null, 2.0);\n    let t_runNormFull = afterTime(null, 6.0);\n\n    moveCameraTo(state, t_moveCamera, new Vec3(21.2, 0, -102.9), new Vec3(281.5, 11, 1.7));\n\n    let exampleIdx = 3;\n    let ln1 = layout.blocks[0].ln1;\n    let inputBlock = layout.residual0;\n\n    inputBlock.highlight = lerp(0, 0.3, t_hideExtra.t);\n\n    let relevantBlocks = new Set([\n        layout.residual0,\n        ...ln1.cubes,\n    ]);\n\n    for (let blk of layout.cubes) {\n            if (!relevantBlocks.has(blk)) {\n            blk.opacity = lerp(1.0, 0.0, t_hideExtra.t);\n        }\n    }\n\n    for (let blk of relevantBlocks) {\n        if (blk != layout.residual0 && blk.t !== 'w') {\n            blk.access!.disable = true;\n        }\n    }\n\n    let startResidualY = layout.residual0.y;\n    let endResidulY = ln1.lnResid.y;\n    layout.residual0.y = lerp(startResidualY, endResidulY, t_moveInputEmbed.t);\n\n    if (t_moveInputEmbed.t >= 0.0) {\n        inputBlock.highlight = lerp(0.3, 0.0, t_moveInputEmbed.t);\n    }\n\n    moveCameraTo(state, t_moveCameraClose, new Vec3(-14.1, 0, -187.1), new Vec3(270, 4, 0.7));\n\n    let splitAmt = lerp(0.0, 2.0, t_focusColumn.t);\n    let splitPos = exampleIdx + 0.5;\n\n    let otherColOpacity = lerp(1.0, 0.3, t_focusColumn.t);\n    ln1.lnAgg1.opacity = otherColOpacity;\n    ln1.lnAgg2.opacity = otherColOpacity;\n    ln1.lnResid.opacity = otherColOpacity;\n    inputBlock.opacity = otherColOpacity;\n\n    if (t_focusColumn.t > 0) {\n        let aggMuCol = splitGrid(layout, ln1.lnAgg1, Dim.X, splitPos, splitAmt)!;\n        let aggVarCol = splitGrid(layout, ln1.lnAgg2, Dim.X, splitPos, splitAmt)!;\n        let residCol = splitGrid(layout, ln1.lnResid, Dim.X, splitPos, splitAmt)!;\n        let inputCol = splitGrid(layout, inputBlock, Dim.X, splitPos, splitAmt)!;\n        aggMuCol.opacity = 1.0;\n        aggVarCol.opacity = 1.0;\n        residCol.opacity = 1.0;\n        inputCol.opacity = 1.0;\n\n        let aggDestIdx = new Vec3(exampleIdx, 0, 0);\n        if (t_calcMuAgg.t > 0.0) {\n            let pinIdx = new Vec3(0, 10, 0);\n            drawDependences(state, ln1.lnAgg1, aggDestIdx);\n            drawDataFlow(state, ln1.lnAgg1, aggDestIdx, pinIdx);\n            aggMuCol.access!.disable = false;\n            inputCol.highlight = 0.3;\n        }\n\n        if (t_calcVarAgg.t > 0.0) {\n            let pinIdx = new Vec3(9, 9, 0);\n            drawDependences(state, ln1.lnAgg2, aggDestIdx);\n            drawDataFlow(state, ln1.lnAgg2, aggDestIdx, pinIdx);\n            aggVarCol.access!.disable = false;\n        }\n\n        if (t_colSequence.t > 0.0) {\n            aggMuCol.access!.disable = false;\n            aggVarCol.access!.disable = false;\n\n            let pinIdx = new Vec3(-10, 0, 0);\n\n            let cPos = t_colSequence.t * C;\n            let cIdx = clamp(Math.floor(cPos), 0, C - 1);\n            let destIdx = new Vec3(exampleIdx, cIdx, 0);\n            drawDependences(state, ln1.lnResid, destIdx);\n            drawDataFlow(state, ln1.lnResid, destIdx, pinIdx);\n\n            let targetCell = splitGrid(layout, residCol, Dim.Y, cIdx + 0.5, 0.0)!;\n            targetCell.highlight = 0.3;\n\n            findSubBlocks(residCol, Dim.Y, 0, cIdx).forEach((blk) => {\n                blk.access!.disable = false;\n            });\n        }\n    }\n\n    if (t_runAggFull.t > 0.0) {\n        try {\n            let processInfo = startProcessBefore(state, ln1.lnAgg1);\n            processUpTo(state, t_runAggFull, ln1.lnAgg2, processInfo);\n            processUpTo(state, t_runNormFull, ln1.lnResid, processInfo);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n}\n","import React from 'react';\nimport { dimProps, duplicateGrid, findSubBlocks, splitGrid, splitGridAll } from \"../Annotations\";\nimport { drawDataFlow, getBlockValueAtIdx } from \"../components/DataFlow\";\nimport { BlkSpecial, getBlkDimensions, IBlkDef, setBlkPosition } from \"../GptModelLayout\";\nimport { drawDependences } from \"../Interaction\";\nimport { IProgramState } from \"../Program\";\nimport { drawText, IFontOpts, measureText } from \"../render/fontRender\";\nimport { clamp, makeArray } from \"@/src/utils/data\";\nimport { lerp, lerpSmoothstep } from \"@/src/utils/math\";\nimport { Mat4f } from \"@/src/utils/matrix\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { processUpTo, startProcessBefore } from \"./Walkthrough00_Intro\";\nimport { embedInline } from \"./Walkthrough01_Prelim\";\nimport { Colors, commentary, DimStyle, dimStyleColor, IWalkthroughArgs, moveCameraTo, setInitialCamera } from \"./WalkthroughTools\";\nimport { BlockText } from '../components/CommentaryHelpers';\nimport clsx from 'clsx';\n\nexport function walkthrough04_SelfAttention(args: IWalkthroughArgs) {\n    let { walkthrough: wt, layout, state, tools: { afterTime, c_str, c_blockRef, c_dimRef, breakAfter, cleanup } } = args;\n    let { C, A, nHeads } = layout.shape;\n\n    if (wt.phase !== Phase.Input_Detail_SelfAttention) {\n        return;\n    }\n\n    let block0 = layout.blocks[0];\n    let head2 = block0.heads[2];\n\n    setInitialCamera(state, new Vec3(-125.258, 0.000, -178.805), new Vec3(294.000, 12.800, 2.681));\n    wt.dimHighlightBlocks = [layout.residual0, block0.ln1.lnResid, ...head2.cubes];\n\n    commentary(wt, null, 0)`\nThe self-attention layer is perhaps the heart of the Transformer and of GPT. It's the phase where the\ncolumns in our input embedding matrix \"talk\" to each other. Up until now, and in all other phases,\nthe columns can be regarded independently.\n\nThe self-attention layer is made up of several heads, and we'll focus on one of them for now.`;\n    breakAfter();\n    let t_moveCamera = afterTime(null, 1.0);\n    let t_highlightHeads = afterTime(null, 2.0);\n    let t_moveCamera2 = afterTime(null, 1.0);\n    let t_focusHeads = focusSelfAttentionHeadTimers(args, 3.0);\n\n    breakAfter();\n    commentary(wt)`\nThe first step is to produce three vectors for each of the ${c_dimRef('T', DimStyle.T)} columns from the ${c_blockRef('normalized input embedding matrix', block0.ln1.lnResid)}.\nThese vectors are the Q, K, and V vectors:\n\n${embedInline(<ul>\n    <li>Q: <BlockText blk={head2.qBlock}>Query vector</BlockText></li>\n    <li>K: <BlockText blk={head2.kBlock}>Key vector</BlockText></li>\n    <li>V: <BlockText blk={head2.vBlock}>Value vector</BlockText></li>\n</ul>)}\n\nTo produce one of these vectors, we perform a matrix-vector multiplication with a bias added. Each\noutput cell is some linear combination of the input vector. E.g. for the ${c_blockRef('Q vectors', head2.qBlock)}, this is done with a dot product between\na row of the ${c_blockRef('Q-weight matrix', head2.qWeightBlock)} and a column of the ${c_blockRef('input matrix', block0.ln1.lnResid)}.`;\n    breakAfter();\n\n    let t_focusQCol = afterTime(null, 1.0);\n    let t_qIterColDot = afterTime(null, 3.0);\n\n    breakAfter();\n    commentary(wt)`\nThe dot product operation, which we'll see a lot of, is quite simple: We pair each element from\nthe first vector with the corresponding element from the second vector, multiply the pairs together\nand then add the results up.`;\n    breakAfter();\n\n    let t_moveDotCells = afterTime(null, 2.0, 0.5);\n    let t_dotCellsZoomClose = afterTime(null, 1.0, 0.5);\n    let t_collapseDotCellsA = afterTime(null, 2.0);\n    let t_collapseDotCellsB = afterTime(null, 2.0, 0.5);\n    let t_dotCellsZoomOut = afterTime(null, 1.0, 0.5);\n    let t_addBias = afterTime(null, 2.0, 0.5);\n    let t_moveToDest = afterTime(null, 0.5);\n\n    breakAfter();\n    commentary(wt)`\n\nThis is a general and simple way of ensuring each output element can be influenced by all the\nelements in the input vector (where that influence is determined by the weights). Hence its frequent\nappearance in neural networks.\n\nWe repeat this operation for each output cell in the Q, K, V vectors:`;\n    breakAfter();\n\n    let t_revertFocusCol = afterTime(null, 0.25, 0.5);\n    cleanup(t_revertFocusCol, [t_focusQCol]);\n    let t_processQkv = afterTime(null, 5.0);\n\n    breakAfter();\n    commentary(wt)`\nWhat do we do with our Q (query), K (key), and V (value) vectors? The naming\ngives us a hint: \"key\" and \"value\" are reminiscent of a dictionary in software, with keys mapping to\nvalues. Then \"query\" is what we use to look up the value.\n\n${embedInline(<div className='ml-4'>\n    <div className='mt-1 text-center italic'>Software analogy</div>\n    <div className='text-sm mt-1 mb-1 text-gray-600'>Lookup table:</div>\n    <div className='font-mono'>{'table = { \"key0\": \"value0\", \"key1\": \"value1\", ... }'}</div>\n    <div className='text-sm mt-1 mb-1 text-gray-600'>Query Process:</div>\n    <div className='font-mono'>{'table[\"key1\"] => \"value1\"'}</div>\n</div>)}\n\nIn the case of self-attention, instead of returning a single entry, we return some weighted\ncombination of the entries. To find that weighting, we take a dot product between a Q vector and each\nof the K vectors. We normalize that weighting, before finally using it to multiply with the\ncorresponding V vector, and then adding them all up.\n\n${embedInline((() => {\n    let keyCol = dimStyleColor(DimStyle.Intermediates);\n    let valCol = dimStyleColor(DimStyle.A);\n    let qCol = dimStyleColor(DimStyle.Aggregates);\n\n    return <div className='ml-4'>\n        <div className='mt-1 text-center italic'>Self Attention</div>\n        <div className='text-sm mt-2 mb-1 text-gray-600'>Lookup table:</div>\n        <div className='font-mono flex items-center'>K:\n            <div className='mx-2 my-1'>{makeTextVector(keyCol)}</div>\n            <div className='mx-2 my-1'>{makeTextVector(keyCol)}</div>\n            <div className='mx-2 my-1'>{makeTextVector(keyCol)}</div>\n        </div>\n        <div className='font-mono flex items-center'>V:\n            <div className='mx-2 my-1'>{makeTextVector(valCol)}</div>\n            <div className='mx-2 my-1'>{makeTextVector(valCol)}</div>\n            <div className='mx-2 my-1'>{makeTextVector(valCol)}</div>\n        </div>\n        <div className='text-sm mt-2 mb-1 text-gray-600'>Query Process:</div>\n        <div className='font-mono flex items-center'>\n            <div className='flex items-center'>Q: <div className='mx-2 my-1'>{makeTextVector(qCol)}</div></div>\n        </div>\n        <div className='font-mono flex items-center -ml-2 mt-2'>\n            <div className='flex items-center mx-2'>w0 = <div className='m-1'>{makeTextVector(qCol)}</div>.<div className='m-1'>{makeTextVector(keyCol)}</div></div>\n            <div className='flex items-center mx-2'>w1 = <div className='m-1'>{makeTextVector(qCol)}</div>.<div className='m-1'>{makeTextVector(keyCol)}</div></div>\n            <div className='flex items-center mx-2'>w2 = <div className='m-1'>{makeTextVector(qCol)}</div>.<div className='m-1'>{makeTextVector(keyCol)}</div></div>\n        </div>\n        <div className='font-mono flex items-center my-2'>\n            [w0n, w1n, w2n] =&nbsp;<span className='italic'>normalization</span>([w0, w1, w2])\n        </div>\n        <div className='font-mono flex items-center'>\n            result =\n            w0n * <div className='ml-2 mr-2 my-1'>{makeTextVector(valCol)}</div>&nbsp;+&nbsp;\n            w1n * <div className='ml-2 mr-2 my-1'>{makeTextVector(valCol)}</div>&nbsp;+&nbsp;\n            w2n * <div className='ml-2 mr-2 my-1'>{makeTextVector(valCol)}</div>\n        </div>\n\n    </div>;\n})())}\n\nFor a more concrete example, let's look at the 6th column (${c_dimRef('t = 5', DimStyle.T)}), from which\nwe will query from:`;\n    breakAfter();\n\n    let t_focusQKVCols = afterTime(null, 1.0);\n\n    breakAfter();\n// It would like to find relevant information from other columns and extract their values. The other\n// columns each have a K (key) vector, which represents the information that that column has, and our\n// Q (query) vector is what information is relevant to us.\n    commentary(wt)`\nThe {K, V} entries of our lookup are the 6 columns in the past, and the Q value is the current time.\n\nWe first calculate the dot product between the ${c_blockRef('Q vector', head2.qBlock)} of the current column (${c_dimRef('t = 5', DimStyle.T)}) and the ${c_blockRef('K vectors', head2.kBlock)}\nof each of the those previous columns. These are then stored in the corresponding row (${c_dimRef('t = 5', DimStyle.T)})\nof the ${c_blockRef('attention matrix', head2.attnMtx)}.`;\n    breakAfter();\n\n    let t_processAttnRow = afterTime(null, 3.0);\n\n    breakAfter();\n    commentary(wt)`\nThese dot products are a way of measuring the similarity between the two vectors. If they're very\nsimilar, the dot product will be large. If they're very different, the dot product will be small or\nnegative.\n\nThe idea of only using the query against past keys makes this _causal_ self-attention. That is,\ntokens can't \"see into the future\".\n\nAnother element is that after we take the dot product, we divide by sqrt(${c_dimRef('A', DimStyle.A)}), where\n${c_dimRef('A', DimStyle.A)} is the length of the Q/K/V vectors. This scaling is done to prevent large values from\ndominating the normalization (softmax) in the next step.\n\nWe'll mostly skip over the softmax operation (described later); suffice it to say, each row is normalized to sum\nto 1.`;\n    breakAfter();\n\n    let t_processAttnSmAggRow = afterTime(null, 1.0);\n    let t_processAttnSmRow = afterTime(null, 2.0);\n\n    breakAfter();\n    commentary(wt)`\nFinally, we can produce the output vector for our column (${c_dimRef('t = 5', DimStyle.T)}). We look at the (${c_dimRef('t = 5', DimStyle.T)}) row of the\n${c_blockRef('normalized self-attention matrix', head2.attnMtxSm)} and for each element, multiply the corresponding ${c_blockRef('V vector', head2.vBlock)} of the\nother columns element-wise.`;\n    breakAfter();\n\n    let t_zoomVOutput = afterTime(null, 0.4, 0.5);\n    // multi-step process here, displaying the multiplication of each element of the row with each column of V\n    let t_expandVCols = afterTime(null, 1.0, 0.5);\n    let t_moveAttnVals = afterTime(null, 1.0, 0.5);\n    let t_applyMultiplies = afterTime(null, 1.0, 0.5);\n    let t_applyAdds = afterTime(null, 1.0, 0.5);\n    let t_placeVOutput = afterTime(null, 1.0, 0.5);\n    let t_finalizeVOutput = afterTime(null, 0.5, 0.5);\n\n    breakAfter();\n    commentary(wt)`\nThen we can add these up to produce the output vector. Thus, the output vector will be dominated by\nV vectors from columns that have high scores.\n\nNow we know the process, let's run it for all the columns.`;\n\n    breakAfter();\n\n    let t_processRemainZoom = afterTime(null, 0.5, 0.5);\n    cleanup(t_processRemainZoom, [t_focusQKVCols]);\n    let t_processRemain = afterTime(null, 8.0);\n\n    breakAfter();\n    commentary(wt)`\nAnd that's the process for a head of the self-attention layer. So the main goal of self-attention is\nthat each column wants to find relevant information from other columns and extract their values, and\ndoes so by comparing its _query_ vector to the _keys_ of those other columns. With the added restriction\nthat it can only look in the past.\n`;\n\n// Running this process for all the columns produces our self-attention matrix, which is a square\n// matrix, T x T, and due to the causal nature of the process, is a lower triangular matrix.\n\n    moveCameraTo(state, t_moveCamera, new Vec3(-192.1, 0, -214.8), new Vec3(293.5, 49, 2.3));\n    moveCameraTo(state, t_moveCamera2, new Vec3(-92.7, 0, -219), new Vec3(286, 12.8, 1.4));\n\n\n    if (t_highlightHeads.t > 0.0) {\n        block0.selfAttendLabel.visible = lerp(0, 1, t_highlightHeads.t * 10);\n        let headPos = t_highlightHeads.t * nHeads;\n        let headIdx = clamp(Math.floor(headPos), 0, nHeads - 1);\n        let headFrac = headPos - headIdx;\n\n        let labelOpacity = lerp(0.0, 1.0, headFrac / 0.3); // * lerp(1.0, 0.0, (1.0 - headFrac) / 0.3);\n\n        let head = block0.heads[headIdx];\n        head.headLabel.visible = labelOpacity;\n\n        for (let blk of head.headLabel.cubes) {\n            blk.highlight = labelOpacity * 0.4;\n        }\n    }\n\n    if (t_focusHeads.t0_dissolveHeads.t > 0.0) {\n        let head = block0.heads[2];\n        let t = t_focusHeads.t0_dissolveHeads.t;\n        for (let blk of head.headLabel.cubes) {\n            blk.highlight = lerp(1.0, 0.0, t * 4) * 0.4;\n        }\n        head2.qBlock.access!.disable = true;\n        head2.kBlock.access!.disable = true;\n        head2.vBlock.access!.disable = true;\n    }\n\n    focusSelfAttentionHead(args, t_focusHeads);\n\n    moveCameraTo(state, t_dotCellsZoomClose, new Vec3(-53, 0, -155.5), new Vec3(274.1, 8.5, 0.4));\n    moveCameraTo(state, t_dotCellsZoomOut, new Vec3(-92.7, 0, -219), new Vec3(286, 12.8, 1.4));\n\n    let exampleIdx = 3;\n    if (t_focusQCol.t > 0) {\n        let otherOpacity = lerp(1.0, 0.2, t_focusQCol.t);\n        head2.qBlock.opacity = otherOpacity;\n        head2.kBlock.opacity = otherOpacity;\n        head2.vBlock.opacity = otherOpacity;\n        block0.ln1.lnResid.opacity = otherOpacity;\n\n        let splitAmt = lerp(0.0, 2.0, t_focusQCol.t);\n        let qCol = splitGrid(layout, head2.qBlock, Dim.X, exampleIdx + 0.5, splitAmt)!;\n        let inputCol = splitGrid(layout, block0.ln1.lnResid, Dim.X, exampleIdx + 0.5, splitAmt)!;\n\n        qCol.opacity = 1.0;\n        inputCol.opacity = 1.0;\n\n        if (t_qIterColDot.t > 0) {\n            let aPos = t_qIterColDot.t * A;\n            let aIdx = clamp(Math.floor(aPos), 0, A - 1);\n            let destIdx = new Vec3(exampleIdx, aIdx, 0);\n            let pinIdx = new Vec3(exampleIdx, 0, 0);\n\n            drawDependences(state, head2.qBlock, destIdx);\n            drawDataFlow(state, head2.qBlock, destIdx, pinIdx);\n            splitGrid(layout, qCol, Dim.Y, aIdx + 0.5, 0);\n            for (let b of findSubBlocks(qCol, Dim.Y, null, aIdx)) {\n                b.access!.disable = false;\n            }\n            inputCol.highlight = 0.3;\n        }\n\n        let targetTop = new Vec3(inputCol.x - 26, inputCol.y, inputCol.z + 5);\n        let addTarget = new Vec3(targetTop.x + layout.cell, targetTop.y - layout.cell * 12, targetTop.z);\n        let biasTarget = new Vec3(addTarget.x - layout.cell * 3, addTarget.y, addTarget.z);\n\n        if (t_moveDotCells.t > 0 && t_moveToDest.t === 0.0) {\n            let qWeightRow = findSubBlocks(head2.qWeightBlock, Dim.Y, A - 1, null)[0];\n\n            let qCells = splitGridAll(layout, qWeightRow, Dim.X);\n            let inCells = splitGridAll(layout, inputCol, Dim.Y);\n\n            let cellMovePct = 0.5;\n            let prevCY = 0;\n            for (let c = 0; c < C; c++) {\n                let cPos = c / (C - 1);\n                let startT = (1.0 - cellMovePct) * (1.0 - cPos);\n                let cellMoveT = inverseLerp(startT, startT + cellMovePct, t_moveDotCells.t);\n\n                let qInitial = getBlkDimensions(qCells[c]);\n                let qFinal = targetTop.add(new Vec3(0, c * layout.cell * 1.2));\n\n                let inInitial = getBlkDimensions(inCells[c]);\n                let inFinal = targetTop.add(new Vec3(layout.cell * 2, c * layout.cell * 1.2));\n\n                if (t_dotCellsZoomOut.t > 0) {\n                    qFinal = inFinal = new Vec3(targetTop.x + layout.cell, targetTop.y - layout.cell * 12, qFinal.z);\n                }\n\n                // animate the cells from the initial grid position to be lined up next to each other\n                setBlkPosition(qCells[c], qInitial.tl.lerp(qFinal, cellMoveT));\n                setBlkPosition(inCells[c], inInitial.tl.lerp(inFinal, cellMoveT));\n\n                let transitionPt = 0.15;\n                let collapsDotCellsT = lerp(0.0, transitionPt, t_collapseDotCellsA.t) + lerp(0, 1-transitionPt, t_collapseDotCellsB.t);\n\n                let startT2 = 0.9 * cPos;\n                let cellTimesSymT = inverseLerp(startT2, startT2 + 0.1, collapsDotCellsT);\n\n                // move the cells together in the times/add operation, with them ending up in the same place\n                if (cellTimesSymT > 0.0 && t_dotCellsZoomOut.t == 0.0) {\n                    let qCurr = getBlkDimensions(qCells[c]);\n                    let inCurr = getBlkDimensions(inCells[c]);\n\n                    let qCellPos = new Vec3(\n                        lerp(qCurr.tl.x, addTarget.x, cellTimesSymT * 2.0),\n                        lerp(qCurr.tl.y, addTarget.y, cellTimesSymT),\n                        qCurr.tl.z\n                    );\n                    let inCellPos = new Vec3(\n                        lerp(inCurr.tl.x, addTarget.x, cellTimesSymT * 2.0),\n                        lerp(inCurr.tl.y, addTarget.y, cellTimesSymT),\n                        qCurr.tl.z\n                    );\n\n                    setBlkPosition(qCells[c], qCellPos);\n                    setBlkPosition(inCells[c], inCellPos);\n\n                    if (c > 0 && cellTimesSymT > 0.0) {\n\n                        let midPt = new Vec3(\n                            lerp(qCurr.br.x, inCurr.tl.x, 0.5),\n                            lerp(prevCY, qCellPos.y, 0.5),\n                            qCurr.tl.z + layout.cell/2);\n\n                        let mtx = Mat4f.fromTranslation(midPt);\n                        let fontOpts: IFontOpts = { color: Colors.Black, size: 1.5, mtx };\n                        let w = measureText(state.render.modelFontBuf, \"+\", fontOpts);\n                        drawText(state.render.modelFontBuf, \"+\", -w/2, -fontOpts.size/2, fontOpts);\n                    }\n                    prevCY = qCellPos.y + layout.cell;\n                }\n\n                // draw times symbol between blocks (provided they're next to each other)\n                // done after the other operations so that they are always positioned correctly\n                if (cellMoveT >= 1.0) {\n                    drawSymbolBetweenBlocks(args, qCells[c], inCells[c], Dim.X, \"x\", { size: 1.5, color: Colors.Black });\n                }\n            }\n\n            // move the bias block next to the resulting dotprod cell, draw a plus between them, and then join them together\n            if (t_addBias.t >= 0.0) {\n                let qBiasCell = findSubBlocks(head2.qBiasBlock, Dim.Y, A - 1, null)[0];\n\n                let qBiasInitial = getBlkDimensions(qBiasCell);\n                let qBiasPos = qBiasInitial.tl.lerp(biasTarget, inverseLerp(0, 0.4, t_addBias.t));\n                setBlkPosition(qBiasCell, qBiasPos);\n\n                let moveTogetherT = inverseLerp(0.6, 1.0, t_addBias.t);\n                qBiasInitial = getBlkDimensions(qBiasCell);\n                qBiasPos = qBiasInitial.tl.lerp(addTarget, moveTogetherT);\n                setBlkPosition(qBiasCell, qBiasPos);\n\n                if (t_addBias.t > 0.4) {\n                    drawSymbolBetweenBlocks(args, qBiasCell, qCells[qCells.length - 1], Dim.X, \"+\", { size: 1.5, color: Colors.Black });\n                }\n            }\n        }\n\n        // move the resulting dotprod cell to the final destination\n        if (t_moveToDest.t > 0) {\n            let qWeightRow = findSubBlocks(head2.qWeightBlock, Dim.Y, A - 1, null)[0];\n            let qBiasCell = findSubBlocks(head2.qBiasBlock, Dim.Y, A - 1, null)[0];\n            qBiasCell.opacity = t_moveToDest.t;\n            qWeightRow.opacity = t_moveToDest.t;\n            inputCol.opacity = t_moveToDest.t;\n\n            let qResultCell = findSubBlocks(qCol, Dim.Y, A - 1, null)[0];\n            let qResultInitial = getBlkDimensions(qResultCell);\n            let qResultPos = qResultInitial.tl.lerp(addTarget, 1.0 - t_moveToDest.t);\n\n            setBlkPosition(qResultCell, qResultPos);\n        }\n    }\n\n    // simple run-through and process of each of the Q, K, V blocks\n    if (t_processQkv.t > 0) {\n        let processStart = startProcessBefore(state, head2.qBlock);\n        processUpTo(state, t_processQkv, head2.vBlock, processStart);\n    }\n\n    // highlight the example index column for the Q block, and previous columns for K and V\n    let attnExampleIdx = 5;\n    if (t_focusQKVCols.t > 0 && t_processRemain.t <= 0) {\n        let ignoreOpacity = lerp(1.0, 0.2, t_focusQKVCols.t);\n        head2.qBlock.opacity = ignoreOpacity;\n        head2.kBlock.opacity = ignoreOpacity;\n        head2.vBlock.opacity = ignoreOpacity;\n\n        let qCol = splitGrid(layout, head2.qBlock, Dim.X, attnExampleIdx + 0.5, 0)!;\n        splitGrid(layout, head2.kBlock, Dim.X, attnExampleIdx + 0.5, 0)!;\n        splitGrid(layout, head2.vBlock, Dim.X, attnExampleIdx + 0.5, 0)!;\n\n        let kBeforeCols = findSubBlocks(head2.kBlock, Dim.X, null, attnExampleIdx);\n        let vBeforeCols = findSubBlocks(head2.vBlock, Dim.X, null, attnExampleIdx);\n\n        for (let col of [...kBeforeCols, ...vBeforeCols, qCol]) {\n            col.opacity = 1.0;\n        }\n\n        head2.attnMtx.access!.disable = true;\n        head2.attnMtxSm.access!.disable = true;\n        head2.attnMtxAgg1.access!.disable = true;\n        head2.attnMtxAgg2.access!.disable = true;\n\n        head2.qBlock.opacity = 1.0;\n        head2.kBlock.opacity = 1.0;\n        head2.vBlock.opacity = 1.0;\n    }\n\n    moveCameraTo(state, t_focusQKVCols, new Vec3(-91.5, 0, -227.9), new Vec3(270.1, -38.4, 0.8));\n\n    if (t_processAttnRow.t > 0 && t_processRemain.t <= 0) {\n        let aIdx = clamp(Math.floor(t_processAttnRow.t * (attnExampleIdx + 1)), 0, attnExampleIdx);\n        let destIdx = new Vec3(aIdx, attnExampleIdx, 0);\n        let pinIdx = new Vec3(attnExampleIdx, 0, 0);\n\n        if (t_processAttnSmAggRow.t <= 0) {\n            drawDependences(state, head2.attnMtx, destIdx);\n            drawDataFlow(state, head2.attnMtx, destIdx, pinIdx);\n        }\n\n        let attnRow = splitGrid(layout, head2.attnMtx, Dim.Y, attnExampleIdx, 0)!;\n        splitGrid(layout, attnRow, Dim.X, aIdx, 0)!;\n        let attnRowStart = findSubBlocks(attnRow, Dim.X, null, aIdx);\n\n        for (let blk of attnRowStart) {\n            blk.access!.disable = false;\n        }\n    }\n\n    if (t_processAttnSmAggRow.t > 0 && t_processRemain.t <= 0) {\n        let agg0T = inverseLerp(0, 0.5, t_processAttnSmAggRow.t);\n        let agg1T = inverseLerp(0.5, 1.0, t_processAttnSmAggRow.t);\n        let hidePopup = t_processAttnSmRow.t > 0;\n        processDim(state, head2.attnMtxAgg2, Dim.Y, attnExampleIdx, agg0T, { pinIdx: new Vec3(5, 0, 0), clamp: true, hidePopup });\n\n        if (agg1T > 0) {\n            processDim(state, head2.attnMtxAgg1, Dim.Y, attnExampleIdx, agg1T, { pinIdx: new Vec3(-12, 0, 0), clamp: true, hidePopup });\n        }\n    }\n\n    if (t_processAttnSmRow.t > 0 && t_processRemain.t <= 0) {\n        let hidePopup = t_zoomVOutput.t > 0;\n        processDim(state, head2.attnMtxSm, Dim.Y, attnExampleIdx, t_processAttnSmRow.t, { pinIdx: new Vec3(5, 0, 0), clamp: true, maxIdx: attnExampleIdx + 1, hidePopup });\n    }\n\n    if (t_zoomVOutput.t > 0 && t_processRemain.t <= 0) {\n        head2.vOutBlock.access!.disable = true;\n    }\n\n    // Do the attn_sm times V vectors to get the output vectors animation\n    {\n        moveCameraTo(state, t_zoomVOutput, new Vec3(-91.9, 0, -267.9), new Vec3(270.1, -7.5, 0.7));\n\n        let topLeftPos = getBlkDimensions(head2.vBlock).tl.add(new Vec3(0, 4, 5));\n        let midLeftPos = topLeftPos.add(new Vec3(0, layout.cell * (A / 2 - 0.5)));\n\n        if (t_expandVCols.t > 0 && t_placeVOutput.t <= 0) {\n            let allVCols = [];\n            let vBeforeCols = findSubBlocks(head2.vBlock, Dim.X, null, attnExampleIdx);\n            for (let col of vBeforeCols) {\n                allVCols.push(...splitGridAll(layout, col, Dim.X));\n            }\n\n            let allAttnCells = [];\n            let attnRow = findSubBlocks(head2.attnMtxSm, Dim.Y, attnExampleIdx, attnExampleIdx)[0];\n            let attnCellsBefore = findSubBlocks(attnRow, Dim.X, null, attnExampleIdx);\n            for (let cell of attnCellsBefore) {\n                for (let subCell of splitGridAll(layout, cell, Dim.X)) {\n                    allAttnCells.push(duplicateGrid(layout, subCell));\n                }\n            }\n\n            for (let i = 0; i < attnExampleIdx + 1; i++) {\n                let attnVal = getBlockValueAtIdx(head2.attnMtxSm, new Vec3(i, attnExampleIdx, 0)) ?? 0.2;\n\n                let initColPos = getBlkDimensions(allVCols[i]).tl;\n                let destColPos = topLeftPos.add(new Vec3(i * layout.cell * 5, 0, 0));\n\n                setBlkPosition(allVCols[i], initColPos.lerp(destColPos, t_expandVCols.t));\n\n                let initAttnPos = getBlkDimensions(allAttnCells[i]).tl;\n                let destAttnPos = midLeftPos.add(new Vec3(i * layout.cell * 5 - 2 * layout.cell, 0));\n\n                setBlkPosition(allAttnCells[i], initAttnPos.lerp(destAttnPos, t_moveAttnVals.t));\n\n                if (t_applyMultiplies.t > 0) {\n                    initAttnPos = destAttnPos;\n                    destAttnPos = initAttnPos.add(new Vec3(layout.cell * 2, 0));\n                    setBlkPosition(allAttnCells[i], initAttnPos.lerp(destAttnPos, t_applyMultiplies.t));\n\n                    allAttnCells[i].opacity = 1.0 - t_applyMultiplies.t;\n                    allVCols[i].highlight = lerp(0.0, attnVal * 1.5, t_applyMultiplies.t);\n                }\n\n                if (t_moveAttnVals.t > 0.8 && t_applyMultiplies.t < 0.7) {\n                    drawSymbolBetweenBlocks(args, allVCols[i], allAttnCells[i], Dim.X, 'x', { color: Colors.Black, size: 1.5 });\n                }\n\n                if (t_applyAdds.t > 0) {\n                    initColPos = destColPos;\n                    destColPos = topLeftPos.add(new Vec3(0, 0, attnVal * 1.0));\n\n                    setBlkPosition(allVCols[i], initColPos.lerp(destColPos, t_applyAdds.t));\n                }\n\n                if (t_applyMultiplies.t > 0.6 && i > 0 && t_applyAdds.t < 0.7) {\n                    drawSymbolBetweenBlocks(args, allVCols[i - 1], allVCols[i], Dim.X, '+', { color: Colors.Black, size: 1.5 });\n                }\n            }\n        }\n\n        if (t_placeVOutput.t > 0 && t_finalizeVOutput.t <= 0) {\n            let prepareT = inverseLerp(0, 0.5, t_placeVOutput.t);\n\n            let vOutCol = splitGrid(layout, head2.vOutBlock, Dim.X, attnExampleIdx + 0.5, prepareT * 2.0)!;\n            vOutCol.access!.disable = true;\n            vOutCol.opacity = lerp(1.0, 0.0, prepareT);\n\n            for (let col of findSubBlocks(head2.vBlock, Dim.X, null, attnExampleIdx)) {\n                col.opacity = t_placeVOutput.t;\n            }\n\n            let vOutColDupe = duplicateGrid(layout, vOutCol);\n            vOutColDupe.access!.disable = false;\n            vOutColDupe.opacity = 1.0;\n\n            let colInitialPos = topLeftPos;\n            let colFinalPos = getBlkDimensions(vOutCol).tl;\n\n            setBlkPosition(vOutColDupe, colInitialPos.lerp(colFinalPos, t_placeVOutput.t));\n        }\n\n        if (t_finalizeVOutput.t > 0) {\n            let splitAmt = lerp(1.0, 0.0, t_finalizeVOutput.t) * 2.0;\n            let vOutCol = splitGrid(layout, head2.vOutBlock, Dim.X, attnExampleIdx + 0.5, splitAmt)!;\n            vOutCol.access!.disable = false;\n        }\n    }\n\n    moveCameraTo(state, t_processRemainZoom, new Vec3(-99.7, 0, -230.1), new Vec3(275.6, -4.4, 1.2));\n\n    if (t_processRemain.t > 0) {\n        for (let blk of [head2.attnMtx, head2.attnMtxSm, head2.attnMtxAgg1, head2.attnMtxAgg2, head2.vOutBlock]) {\n            blk.access!.disable = true;\n        }\n\n        let processStart = startProcessBefore(state, head2.attnMtx);\n        processUpTo(state, t_processRemain, head2.vOutBlock, processStart);\n    }\n\n    // if (t_processAllAttn.t > 0) {\n    //     let processStart = startProcessBefore(state, head2.attnMtx);\n    //     processUpTo(state, t_processAllAttn, head2.attnMtx, processStart);\n    // }\n\n}\n\n// when t < edge0, returns 0\n// when t > edge1, returns 1\n// when t is between edge0 and edge1, returns a value between 0 and 1\n// note that edge1 must be greater than edge0\nexport function inverseLerp(edge0: number, edge1: number, t: number) {\n    return (clamp(t, edge0, edge1) - edge0) / (edge1 - edge0);\n}\n\nexport interface IProcessDimOpts {\n    pinIdx?: Vec3;\n    clamp?: boolean;\n    maxIdx?: number;\n    hidePopup?: boolean;\n}\n\nexport function processDim(state: IProgramState, block: IBlkDef, dim: Dim, destIdx: number, t: number, options: IProcessDimOpts = {}) {\n    let { layout } = state;\n    let { pinIdx, clamp: keep, maxIdx, hidePopup } = options;\n    let otherDim = dim === Dim.X ? Dim.Y : Dim.X;\n\n    let { cx: cxOther } = dimProps(block, otherDim);\n\n    pinIdx ||= new Vec3(0, 0, 0);\n\n    let rowCol = splitGrid(layout, block, dim, destIdx, 0);\n\n    if (!rowCol) {\n        return;\n    }\n\n    let maxPos = maxIdx ?? cxOther; // for attn matrix, reduce to the row number\n    let cellPos = t * maxPos;\n\n    if (keep) {\n        cellPos = clamp(cellPos, 0, maxPos - 1);\n    }\n\n    let cellIdx = Math.floor(cellPos);\n\n    if (cellIdx >= maxPos) {\n        return;\n    }\n\n    splitGrid(layout, rowCol, otherDim, cellIdx + 0.5, 0);\n\n    // cell!.highlight = 0.2;\n    let destIdxVec = new Vec3(0, 0, 0);\n    destIdxVec.setAt(dim, destIdx);\n    destIdxVec.setAt(otherDim, cellIdx);\n\n    if (rowCol && !hidePopup) {\n        drawDependences(state, block, destIdxVec);\n        drawDataFlow(state, block, destIdxVec, pinIdx);\n    }\n\n    for (let blk of findSubBlocks(rowCol, otherDim, null, cellIdx)) {\n        blk.access!.disable = false;\n    }\n}\n\nexport function focusSelfAttentionHeadTimers(args: IWalkthroughArgs, duration: number) {\n    let afterTime = args.tools.afterTime;\n\n    let totalTime = 1.5 * 2;\n    let timeScale = duration / totalTime;\n\n    let t0_dissolveHeads = afterTime(null, 1 * timeScale, 0.5 * timeScale);\n    let t2_alignqkv = afterTime(null, 1.0 * timeScale, 0.5 * timeScale);\n\n    return { t0_dissolveHeads, t2_alignqkv };\n}\n\nexport function focusSelfAttentionHead(args: IWalkthroughArgs, timers: ReturnType<typeof focusSelfAttentionHeadTimers>) {\n    let { layout } = args;\n    let { t0_dissolveHeads, t2_alignqkv } = timers;\n\n    let targetHeadIdx = 2;\n    let targetHead = layout.blocks[0].heads[targetHeadIdx];\n\n    let block = layout.blocks[0];\n    {\n        for (let headIdx = 0; headIdx < block.heads.length; headIdx++) {\n            if (headIdx == targetHeadIdx) {\n                continue;\n            }\n            for (let cube of block.heads[headIdx].cubes) {\n                cube.opacity = lerpSmoothstep(1.0, 0.0, t0_dissolveHeads.t);\n            }\n        }\n    }\n\n    {\n        let headZ = targetHead.attnMtx.z;\n        let targetHeadZ = block.ln1.lnResid.z;\n        let deltaZ = lerpSmoothstep(0, (targetHeadZ - headZ), t2_alignqkv.t);\n        for (let cube of targetHead.cubes) {\n            cube.z += deltaZ;\n        }\n    }\n\n    {\n        let qkv = [\n            [targetHead.qBlock, targetHead.qWeightBlock, targetHead.qBiasBlock],\n            [targetHead.kBlock, targetHead.kWeightBlock, targetHead.kBiasBlock],\n            [targetHead.vBlock, targetHead.vWeightBlock, targetHead.vBiasBlock],\n        ];\n        let targetZ = block.ln1.lnResid.z;\n        let strideY = targetHead.qBlock.dy + layout.margin;\n        let baseY = targetHead.qBlock.y;\n        let qkvYPos = [-strideY * 2, -strideY, 0];\n\n        for (let i = 0; i < 3; i++) {\n            let y = lerpSmoothstep(qkv[i][0].y, baseY + qkvYPos[i], t2_alignqkv.t);\n            let z = lerpSmoothstep(qkv[i][0].z, targetZ, t2_alignqkv.t);\n            for (let cube of qkv[i]) {\n                cube.y = y;\n                cube.z = z;\n            }\n        }\n\n        let blockMidY = (blk: IBlkDef) => blk.y + blk.dy / 2;\n\n        let resid0Idx = layout.cubes.indexOf(block.ln1.lnResid);\n        let yDelta = lerpSmoothstep(0, blockMidY(block.ln1.lnResid) - blockMidY(targetHead.kBlock), t2_alignqkv.t);\n\n        for (let i = 0; i < resid0Idx; i++) {\n            let targetOpacity = 0.2;\n            layout.cubes[i].opacity = lerpSmoothstep(1.0, targetOpacity, t2_alignqkv.t);\n        }\n\n        let afterAttn = false;\n        for (let i = resid0Idx + 1; i < layout.cubes.length; i++) {\n            let cube = layout.cubes[i];\n            cube.y += yDelta;\n            if (afterAttn) {\n                cube.opacity = Math.min(lerpSmoothstep(1.0, 0.2, t2_alignqkv.t), cube.opacity ?? 1.0);\n            }\n            afterAttn = afterAttn || cube === targetHead.vOutBlock;\n        }\n    }\n\n}\n\nexport function drawSymbolBetweenBlocks(args: IWalkthroughArgs, block1: IBlkDef, block2: IBlkDef, dim: Dim, symbol: string, opts: { color: Vec4, size: number }) {\n    let { color, size } = opts;\n\n    let block1Dim = getBlkDimensions(block1);\n    let block2Dim = getBlkDimensions(block2);\n\n    let midPt: Vec3;\n\n    if (dim === Dim.X) {\n        midPt = new Vec3(\n            lerp(block1Dim.br.x, block2Dim.tl.x, 0.5),\n            (block1Dim.tl.y + block1Dim.br.y + block2Dim.tl.y + block2Dim.br.y) * 0.25,\n            block1Dim.tl.z + args.layout.cell / 2)\n    } else {\n        midPt = new Vec3(\n            (block1Dim.tl.x + block1Dim.br.x + block2Dim.tl.x + block2Dim.br.x) * 0.25,\n            lerp(block1Dim.br.y, block2Dim.tl.y, 0.5),\n            block1Dim.tl.z + args.layout.cell / 2);\n    }\n\n    let mtx = Mat4f.fromTranslation(midPt);\n    let fontOpts: IFontOpts = { color, size, mtx };\n    let w = measureText(args.state.render.modelFontBuf, symbol, fontOpts);\n    drawText(args.state.render.modelFontBuf, symbol, -w/2, -fontOpts.size/2, fontOpts);\n}\n\nfunction makeTextVector(col: Vec4, count: number = 3) {\n    let bgColor = new Vec4(col.x, col.y, col.z, 0.5);\n    return <div className='flex flex-col pb-[2px]'>\n        {makeArray(3, 0).map((_, i) => {\n            return <div key={i} className={\"w-3 h-3 border-2 mb-[-2px]\"} style={{ borderColor: col.toHexColor(), backgroundColor: bgColor.toHexColor() }} />;\n        })}\n    </div>;\n}\n","import { Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, IWalkthroughArgs, setInitialCamera } from \"./WalkthroughTools\";\n\nexport function walkthrough05_Softmax(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state } = args;\n\n    if (wt.phase !== Phase.Input_Detail_Softmax) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(-24.350, 0.000, -1702.195), new Vec3(283.100, 0.600, 1.556));\n\n    let c0 = commentary(wt, null, 0)`\n\nThe softmax operation is used as part of self-attention, as seen in the previous section, and it\nwill also appear at the very end of the model.\n\nIts goal is to take a vector and normalize its values so that they sum to 1.0. However, it's not as\nsimple as dividing by the sum. Instead, each input value is first exponentiated.\n\n  a = exp(x_1)\n\nThis has the effect of making all values positive. Once we have a vector of our exponentiated\nvalues, we can then divide each value by the sum of all the values. This will ensure that the sum\nof the values is 1.0. Since all the exponentiated values are positive, we know that the resulting\nvalues will be between 0.0 and 1.0, which provides a probability distribution over the original values.\n\nThat's it for softmax: simply exponentiate the values and then divide by the sum.\n\nHowever, there's a slight complication. If any of the input values are quite large, then the\nexponentiated values will be very large. We'll end up dividing a large number by a very large number,\nand this can cause issues with floating-point arithmetic.\n\nOne useful property of the softmax operation is that if we add a constant to all the input values,\nthe result will be the same. So we can find the largest value in the input vector and subtract it\nfrom all the values. This ensures that the largest value is 0.0, and the softmax remains numerically\nstable.\n\nLet's take a look at the softmax operation in the context of the self-attention layer. Our input\nvector for each softmax operation is a row of the self-attention matrix (but only up to the diagonal).\n\nLike with layer normalization, we have an intermediate step where we store some aggregation values\nto keep the process efficient.\n\nFor each row, we store the max value in the row and the sum of the shifted & exponentiated values.\nThen, to produce the corresponding output row, we can perform a small set of operations: subtract the\nmax, exponentiate, and divide by the sum.\n\nWhat's with the name \"softmax\"? The \"hard\" version of this operation, called argmax, simply finds\nthe maximum value, sets it to 1.0, and assigns 0.0 to all other values. In contrast, the softmax\noperation serves as a \"softer\" version of that. Due to the exponentiation involved in softmax, the\nlargest value is emphasized and pushed towards 1.0, while still maintaining a probability distribution\nover all input values. This allows for a more nuanced representation that captures not only the most\nlikely option but also the relative likelihood of other options.\n`;\n\n}\n","import { Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, DimStyle, IWalkthroughArgs, moveCameraTo, setInitialCamera } from \"./WalkthroughTools\";\nimport { lerp, lerpSmoothstep } from \"@/src/utils/math\";\nimport { processUpTo, startProcessBefore } from \"./Walkthrough00_Intro\";\n\nexport function walkthrough06_Projection(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state, layout, tools: { breakAfter, afterTime, c_blockRef, c_dimRef, cleanup } } = args;\n\n    if (wt.phase !== Phase.Input_Detail_Projection) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(-73.167, 0.000, -270.725), new Vec3(293.606, 2.613, 1.366));\n    let block = layout.blocks[0];\n    wt.dimHighlightBlocks = [...block.heads.map(h => h.vOutBlock), block.projBias, block.projWeight, block.attnOut];\n\n    let outBlocks = block.heads.map(h => h.vOutBlock);\n\n    commentary(wt, null, 0)`\n\nAfter the self-attention process, we have outputs from each of the heads. These outputs are the\nappropriately mixed V vectors, influenced by the Q and K vectors.\n\nTo combine the ${c_blockRef('output vectors', outBlocks)} from each head, we simply stack them on top of each other. So, for time\n${c_dimRef('t = 4', DimStyle.T)}, we go from 3 vectors of length ${c_dimRef('A = 16', DimStyle.A)} to 1 vector of length ${c_dimRef('C = 48', DimStyle.C)}.`;\n\n    breakAfter();\n\n    let t_fadeOut = afterTime(null, 1.0, 0.5);\n    // let t_zoomToStack = afterTime(null, 1.0);\n    let t_stack = afterTime(null, 1.0);\n\n    breakAfter();\n\n    commentary(wt)`\n\nIt's worth noting that in GPT, the length of the vectors within a head (${c_dimRef('A = 16', DimStyle.A)}) is equal to ${c_dimRef('C', DimStyle.C)} / num_heads.\nThis ensures that when we stack them back together, we get the original length, ${c_dimRef('C', DimStyle.C)}.\n\nFrom here, we perform the projection to get the output of the layer. This is a simple matrix-vector\nmultiplication on a per-column basis, with a bias added.`;\n\n    breakAfter();\n\n    let t_process = afterTime(null, 3.0);\n\n    breakAfter();\n\n    commentary(wt)`\n\nNow we have the output of the self-attention layer. Instead of passing this output directly to the\nnext phase, we add it element-wise to the input embedding. This process, denoted by the green\nvertical arrow, is called the _residual connection_ or _residual pathway_.\n`;\n\n    breakAfter();\n\n    let t_zoomOut = afterTime(null, 1.0, 0.5);\n    let t_processResid = afterTime(null, 3.0);\n\n    cleanup(t_zoomOut, [t_fadeOut, t_stack]);\n\n    breakAfter();\n\n    commentary(wt)`\n\nLike layer normalization, the residual pathway is important for enabling effective learning in deep\nneural networks.\n\nNow with the result of self-attention in hand, we can pass it onto the next section of the transformer:\nthe feed-forward network.\n`;\n\n    breakAfter();\n\n    if (t_fadeOut.active) {\n        for (let head of block.heads) {\n            for (let blk of head.cubes) {\n                if (blk !== head.vOutBlock) {\n                    blk.opacity = lerpSmoothstep(1, 0, t_fadeOut.t);\n                }\n            }\n        }\n    }\n\n    if (t_stack.active) {\n        let targetZ = block.attnOut.z;\n        for (let headIdx = 0; headIdx < block.heads.length; headIdx++) {\n            let head = block.heads[headIdx];\n            let targetY = head.vOutBlock.y + head.vOutBlock.dy * (headIdx - block.heads.length + 1);\n            head.vOutBlock.y = lerp(head.vOutBlock.y, targetY, t_stack.t);\n            head.vOutBlock.z = lerp(head.vOutBlock.z, targetZ, t_stack.t);\n        }\n    }\n\n    let processInfo = startProcessBefore(state, block.attnOut);\n\n    if (t_process.active) {\n        processUpTo(state, t_process, block.attnOut, processInfo);\n    }\n\n    moveCameraTo(state, t_zoomOut, new Vec3(-8.304, 0.000, -175.482), new Vec3(293.606, 2.623, 2.618));\n\n    if (t_processResid.active) {\n        processUpTo(state, t_processResid, block.attnResidual, processInfo);\n    }\n}\n","import React from \"react\";\nimport { Dim, Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, DimStyle, dimStyleColor, IWalkthroughArgs, setInitialCamera } from \"./WalkthroughTools\";\nimport { dimProps, findSubBlocks, splitGrid } from \"../Annotations\";\nimport { lerp } from \"@/src/utils/math\";\nimport { IBlkDef, getBlkDimensions } from \"../GptModelLayout\";\nimport { processUpTo, startProcessBefore } from \"./Walkthrough00_Intro\";\nimport { drawDataFlow } from \"../components/DataFlow\";\nimport { drawDependences } from \"../Interaction\";\nimport { makeArray, makeArrayRange } from \"@/src/utils/data\";\n\nexport function walkthrough07_Mlp(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state, layout, tools: { afterTime, c_blockRef, c_dimRef, breakAfter, cleanup } } = args;\n\n    if (wt.phase !== Phase.Input_Detail_Mlp) {\n        return;\n    }\n\n    let block = layout.blocks[0];\n\n    setInitialCamera(state, new Vec3(-154.755, 0.000, -460.042), new Vec3(289.100, -8.900, 2.298));\n    wt.dimHighlightBlocks = [block.ln2.lnResid, block.mlpAct, block.mlpFc, block.mlpFcBias, block.mlpFcWeight, block.mlpProjBias, block.mlpProjWeight, block.mlpResult, block.mlpResidual];\n\n    commentary(wt)`\n\nThe next half of the transformer block, after the self-attention, is the MLP (multi-layer\nperceptron). A bit of a mouthful, but here it's a simple neural network with two layers.\n\nLike with self-attention, we perform a ${c_blockRef('layer normalization', block.ln2.lnResid)} before the vectors enter the MLP.\n\nIn the MLP, we put each of our ${c_dimRef('C = 48', DimStyle.C)} length column vectors (independently) through:\n\n1. A ${c_blockRef('linear transformation', block.mlpFcWeight)} with a ${c_blockRef('bias', block.mlpFcBias)} added, to a vector of length ${c_dimRef('4 * C', DimStyle.C4)}.\n\n2. A GELU activation function (element-wise)\n\n3. A ${c_blockRef('linear transformation', block.mlpProjWeight)} with a ${c_blockRef('bias', block.mlpProjBias)} added, back to a vector of length ${c_dimRef('C', DimStyle.C)}\n\nLet's track one of those vectors:\n`;\n    breakAfter();\n\n    let t0_fadeOut = afterTime(null, 1.0);\n\n    breakAfter();\n\ncommentary(wt)`\nWe first run through the matrix-vector multiplication with bias added, expanding the vector to length ${c_dimRef('4 * C', DimStyle.C4)}. (Note that the output matrix is transposed here.\nThis is purely for vizualization purposes.)\n`;\n    breakAfter();\n\n    let t1_process = afterTime(null, 3.0);\n\n    breakAfter();\n\ncommentary(wt)`\nNext, we apply the GELU activation function to each element of the vector. This is a key part of any neural network, where we introduce some non-linearity into the model. The specific function used, GELU,\nlooks a lot like a ReLU function (computed as ${<code>max(0, x)</code>}), but it has a smooth curve rather than a sharp corner.\n\n${<ReluGraph />}\n\n`;\n    breakAfter();\n\n    let t2_process = afterTime(null, 3.0);\n\n    breakAfter();\n\ncommentary(wt)`\nWe then project the vector back down to length ${c_dimRef('C', DimStyle.C)} with another matrix-vector multiplication with bias added.\n`;\n    breakAfter();\n\n    let t3_process = afterTime(null, 3.0);\n\n    breakAfter();\n\ncommentary(wt)`\nLike in the self-attention + projection section, we add the result of the MLP to its input, element-wise.\n`;\n    breakAfter();\n\n    let t4_process = afterTime(null, 3.0);\n\n    breakAfter();\ncommentary(wt)`\nWe can now repeat this process for all of the columns in the input.`;\n\n    breakAfter();\n\n    let t5_cleanup = afterTime(null, 1.0, 0.5);\n    cleanup(t5_cleanup, [t0_fadeOut]);\n    let t6_processAll = afterTime(null, 6.0);\n\n    breakAfter();\n\ncommentary(wt)`\nAnd that's the MLP completed. We now have the output of the transformer block, which is ready to be passed to the next block.\n`;\n\n    let targetIdx = 3;\n    let inputBlk = block.ln2.lnResid;\n    let mlp1Blk = block.mlpFc;\n    let mlp2Blk = block.mlpAct;\n    let mlpRes = block.mlpResult;\n    let mlpResid = block.mlpResidual;\n\n    function dimExceptVector(blk: IBlkDef, axis: Dim, disable: boolean) {\n        if (t0_fadeOut.t === 0 || t6_processAll.t > 0) {\n            return;\n        }\n\n        if (disable) {\n            blk.access!.disable = true;\n        }\n\n        let col = splitGrid(layout, blk, axis, targetIdx + 0.5, lerp(0.0, 1.0, t0_fadeOut.t))!;\n\n        for (let sub of blk.subs!) {\n            sub.opacity = lerp(1.0, 0.2, t0_fadeOut.t);\n        }\n\n        col.opacity = 1.0;\n\n        return col!;\n    }\n\n    dimExceptVector(inputBlk, Dim.X, false);\n    let mlp1Col = dimExceptVector(mlp1Blk, Dim.Y, true);\n    let mlp2Col = dimExceptVector(mlp2Blk, Dim.Y, true);\n    let mlpResCol = dimExceptVector(mlpRes, Dim.X, true);\n    let mplResIdCol = dimExceptVector(mlpResid, Dim.X, true);\n\n    function processVector(blk: IBlkDef, col: IBlkDef | undefined, t: number, pinIdx: Vec3) {\n        if (t === 0) {\n            return;\n        }\n\n        let dim0 = blk.transpose ? Dim.Y : Dim.X;\n        let dim1 = blk.transpose ? Dim.X : Dim.Y;\n        let { cx: numCells } = dimProps(blk, dim1);\n\n        let xPos = Math.floor(lerp(0, numCells, t));\n\n        let destIdx = new Vec3().setAt(dim0, targetIdx).setAt(dim1, xPos).round_();\n\n        if (col) {\n            let row = splitGrid(layout, col, dim1, xPos, 0.0);\n            for (let a of findSubBlocks(col, dim1, 0, xPos)) {\n                a.access!.disable = false;\n            }\n        }\n\n        if (t < 1.0) {\n            drawDataFlow(state, blk, destIdx, pinIdx);\n            drawDependences(state, blk, destIdx);\n        } else if (col) {\n            col!.access!.disable = false;\n        }\n    }\n\n    processVector(mlp1Blk, mlp1Col, t1_process.t, new Vec3(40));\n    processVector(mlp2Blk, mlp2Col, t2_process.t, new Vec3(mlp1Blk.cx / 2, -15));\n    processVector(mlpRes, mlpResCol, t3_process.t, new Vec3(mlpRes.cx / 2, -15));\n    processVector(mlpResid, mplResIdCol, t4_process.t, new Vec3(mlpRes.cx / 2, -15));\n\n    if (t5_cleanup.t > 0.4) {\n        mlp1Blk.access!.disable = true;\n        mlp2Blk.access!.disable = true;\n        mlpRes.access!.disable = true;\n        mlpResid.access!.disable = true;\n    }\n\n    if (t6_processAll.t > 0) {\n        let prevInfo = startProcessBefore(state, inputBlk);\n        processUpTo(state, t6_processAll, mlpResid, prevInfo);\n    }\n}\n\n\nconst ReluGraph: React.FC = () => {\n\n    let fnRelu = (x: number) => Math.max(0, x);\n    let fnGelu = (x: number) => x * 0.5 * (1 + Math.tanh(Math.sqrt(2 / Math.PI) * (x + 0.044715 * Math.pow(x, 3))));\n\n    function createMapping(range0: number, range1: number, domain0: number, domain1: number) {\n        let m = (range1 - range0) / (domain1 - domain0);\n        let b = range0 - m * domain0;\n        return (x: number) => m * x + b;\n    }\n\n    let w = 200;\n    let h = 160;\n\n    let halfW = 3.2;\n    let halfH = halfW * h / w;\n    let hOffset = 1.1;\n\n    let xScale = createMapping(0, w, -halfW, halfW);\n    let yScale = createMapping(h, 0, -halfH + hOffset, halfH + hOffset);\n\n    let xPts = makeArrayRange(100, -halfW, halfW);\n\n    function makePath(fn: (x: number) => number) {\n        let path = \"\";\n        for (let x of xPts) {\n            let y = fn(x);\n            path += (path ? 'L' : 'M') + `${xScale(x)},${yScale(y)} `;\n        }\n        return path;\n    }\n\n    let vertTickVals = [-1, 1, 2, 3];\n\n    let vertTicks = vertTickVals.map(a => {\n        return { x: xScale(0), y: yScale(a), label: a };\n    });\n\n    let horizTickVals = [-3, -2, -1, 1, 2, 3];\n    let horizTicks = horizTickVals.map(a => {\n        return { x: xScale(a), y: yScale(0), label: a };\n    });\n\n    let tickColor = \"gray\";\n\n    return <div className=\"flex justify-center my-2\">\n        <svg viewBox={`0 0 ${w} ${h}`} width={w} height={h} className=\"bg-slate-200 rounded\">\n            <line x1={xScale(-halfW)} x2={xScale(halfW)} y1={yScale(0)} y2={yScale(0)} stroke={\"gray\"} strokeWidth={1} />\n            <line x1={xScale(0)} x2={xScale(0)} y1={yScale(-halfH + hOffset)} y2={yScale(halfH + hOffset)} stroke={\"gray\"} strokeWidth={1} />\n            {/* <path d={makePath(fnRelu)} stroke={\"blue\"} fill=\"none\" strokeWidth={1} /> */}\n            <path d={makePath(fnGelu)} stroke={dimStyleColor(DimStyle.Intermediates).toHexColor()} fill=\"none\" strokeWidth={3} />\n            {vertTicks.map((a, i) => <g key={i} transform={`translate(${a.x}, ${a.y})`}>\n                <line x1={-5} x2={5} y1={0} y2={0} stroke={tickColor} strokeWidth={1} />\n                <text x={10} y={5} fontSize={10} fill={tickColor}>{a.label}</text>\n            </g>)}\n            {horizTicks.map((a, i) => <g key={i} transform={`translate(${a.x}, ${a.y})`}>\n                <line x1={0} x2={0} y1={-5} y2={5} stroke={tickColor} strokeWidth={1} />\n                <text x={0} y={18} fontSize={10} textAnchor=\"middle\" fill={tickColor}>{a.label}</text>\n            </g>)}\n        </svg>\n    </div>;\n};\n","import { Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, IWalkthroughArgs, setInitialCamera } from \"./WalkthroughTools\";\n\nexport function walkthrough08_Transformer(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state } = args;\n\n    if (wt.phase !== Phase.Input_Detail_Transformer) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(-135.531, 0.000, -353.905), new Vec3(291.100, 13.600, 5.706));\n\n    let c0 = commentary(wt, null, 0)`\n\nAnd that's a complete transformer block!\n\nThese form the bulk of any GPT model and are repeated a number of times, with the output of one\nblock feeding into the next, continuing the residual pathway.\n\nAs is common in deep learning, it's hard to say exactly what each of these layers is doing, but we\nhave some general ideas: the earlier layers tend to focus on learning\nlower-level features and patterns, while the later layers learn to recognize and understand\nhigher-level abstractions and relationships. In the context of natural language processing, the\nlower layers might learn grammar, syntax, and simple word associations, while the higher layers\nmight capture more complex semantic relationships, discourse structures, and context-dependent meaning.\n\n`;\n\n}\n","import { Vec3 } from \"@/src/utils/vector\";\nimport { Phase } from \"./Walkthrough\";\nimport { commentary, IWalkthroughArgs, setInitialCamera } from \"./WalkthroughTools\";\n\nexport function walkthrough09_Output(args: IWalkthroughArgs) {\n    let { walkthrough: wt, state } = args;\n\n    if (wt.phase !== Phase.Input_Detail_Output) {\n        return;\n    }\n\n    setInitialCamera(state, new Vec3(-20.203, 0.000, -1642.819), new Vec3(281.600, -7.900, 2.298));\n\n    let c0 = commentary(wt, null, 0)`\n\nFinally, we come to the end of the model. The output of the final transformer block is passed through\na layer normalization, and then we use a linear transformation (matrix multiplication), this time without a bias.\n\nThis final transformation takes each of our column vectors from length C to length nvocab. Hence,\nit's effectively producing a score for each word in the vocabulary for each of our columns. These\nscores have a special name: logits.\n\nThe name \"logits\" comes from \"log-odds,\" i.e., the logarithm of the odds of each token. \"Log\" is\nused because the softmax we apply next does an exponentiation to convert to \"odds\" or probabilities.\n\nTo convert these scores into nice probabilities, we pass them through a softmax operation. Now, for\neach column, we have a probability the model assigns to each word in the vocabulary.\n\nIn this particular model, it has effectively learned all the answers to the question of how to sort\nthree letters, so the probabilities are heavily weighted toward the correct answer.\n\nWhen we're stepping the model through time, we use the last column's probabilities to determine the\nnext token to add to the sequence. For example, if we've supplied six tokens into the model, we'll\nuse the output probabilities of the 6th column.\n\nThis column's output is a series of probabilities, and we actually have to pick one of them to use\nas the next in the sequence. We do this by \"sampling from the distribution.\" That is, we randomly\nchoose a token, weighted by its probability. For example, a token with a probability of 0.9 will be\nchosen 90% of the time.\n\nThere are other options here, however, such as always choosing the token with the highest probability.\n\nWe can also control the \"smoothness\" of the distribution by using a temperature parameter. A higher\ntemperature will make the distribution more uniform, and a lower temperature will make it more\nconcentrated on the highest probability tokens.\n\nWe do this by dividing the logits (the output of the linear transformation) by the temperature before\napplying the softmax. Since the exponentiation in the softmax has a large effect on larger numbers,\nmaking them all closer together will reduce this effect.\n`;\n\n}\n","import { addSourceDestCurveLine, blockDimension, blockIndex, drawTextOnModel, findSubBlocks, indexMappingLines, renderIndexes, splitGrid, TextAlignHoriz, TextAlignVert } from \"../Annotations\";\nimport { ICamera, ICameraPos } from \"../Camera\";\nimport { IBlkDef } from \"../GptModelLayout\";\nimport { IProgramState } from \"../Program\";\nimport { IRenderView } from \"../render/modelRender\";\nimport { drawThread } from \"../render/threadRender\";\nimport { SavedState } from \"../SavedState\";\nimport { oneHotArray } from \"@/src/utils/data\";\nimport { lerp, lerpSmoothstep } from \"@/src/utils/math\";\nimport { Dim, Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { DimStyle, dimStyleColor, hideFromBlock, ICommentary, ICommentaryRes, IPhaseGroup, ITimeInfo, IWalkthroughArgs, moveCameraTo, phaseTools } from \"./WalkthroughTools\";\nimport { walkthroughIntro } from \"./Walkthrough00_Intro\";\nimport { walkthrough01_Prelim } from \"./Walkthrough01_Prelim\";\nimport { walkthrough02_Embedding } from \"./Walkthrough02_Embedding\";\nimport { walkthrough03_LayerNorm } from \"./Walkthrough03_LayerNorm\";\nimport { walkthrough04_SelfAttention } from \"./Walkthrough04_SelfAttention\";\nimport { walkthrough05_Softmax } from \"./Walkthrough05_Softmax\";\nimport { walkthrough06_Projection } from \"./Walkthrough06_Projection\";\nimport { walkthrough07_Mlp } from \"./Walkthrough07_Mlp\";\nimport { walkthrough08_Transformer } from \"./Walkthrough08_Transformer\";\nimport { walkthrough09_Output } from \"./Walkthrough09_Output\";\n\n\n/**\n\nThoughts about the walkthrough:\n\n- Linking text events to the visual actions doesn't work well.\n- Attention needs to flip between them directly. Much better to do a chunk of text, then [Spacebar], then action.\n  Can still do aligned highlights though, but focused on the model, and linking back to the text.\n  This also works well with hover on either. The color-coding helps a lot anyway.\n\n- Better to do all this text in html, it adds searchability, and supports more things. _However_, probably\n  difficult to do TeX fonts. Although maybe that's a bit excessive anyway.\n\n- Can show a reasonable amount of text: Limit to half a screen on mobile, say.\n\n- Fast but smooth transitions, with a pause in between, is much better.\n- Slow, linked transitions is kinda nauseating.\n\n- Need more controls! Mainly jumping between phases, and selecting times on phases.\n- Can compute the latest time on each phase by keeping track of the events. Can keep this in an array for\n  display as well.\n- Need to push back into react-land at the end of each frame. (commentary; stats; etc)\n- Probably need to query all the phases up front somehow. Could have a pass where we don't actually\n  update anything, but read off info for each one. A pain for the in-place updates though. Likely to break\n  things. Easier to just have a list of them and info like titles.\n- Hmm, do want to expand to total time, hmm.\n\n- Need a bunch more annotations/effects yet\n  - Get the trails working well\n  - Want a descriptor of how a cell is computed (x, y from these; mul by a, b from these, plus this; all added, [t])\n  - It applies to everything, and could allow for 'draw for this 1 cell', 'draw for this col/row of cells'.\n  - Curved arrows and flows with thickness\n    - Arrows for showing embedding mapping, and for linking src & sink\n    - Flows for the residual pathway: wide transparent no-width path, with glowing more-solid sides\n      - Basically wide arrows\n      - Also need side bit coming off of it for when it's copied\n      - Not as wide as the actual block; keep it maybe half-T thick\n      - Some indication of flow\n  - Highlight block or row/column\n\n */\n\n\nexport type IWalkthrough = ReturnType<typeof initWalkthrough>;\n\nexport function initWalkthrough() {\n    return {\n        phase: SavedState.state?.phase ?? Phase.Intro_Intro,\n        time: SavedState.state?.phaseTime ?? 0,\n        viewDt: 0,\n        dt: 0,\n        prevTime: 0,\n        prevPhase: Phase.None,\n        running: false,\n        speed: 1,\n        cameraInitial: null as ICameraPos | null,\n        commentary: null as ICommentaryRes | null,\n        times: [] as (ITimeInfo | ICommentary)[],\n        phaseLength: 0,\n        dimHighlightBlocks: null as IBlkDef[] | null,\n        markDirty: () => { }, // bit of a hack to get it to WalkthroughSidebar\n        phaseData: new Map<Phase, any>(),\n        phaseTransitiveData: null as any,\n        phaseList: [{\n            groupId: PhaseGroup.Intro,\n            title: 'Introduction',\n            phases: [\n                { id: Phase.Intro_Intro, title: 'Overview' },\n                { id: Phase.Intro_Prelim, title: 'Preliminary' },\n            ],\n        }, {\n            groupId: PhaseGroup.Detailed_Input,\n            title: 'Detailed',\n            phases: [\n                { id: Phase.Input_Detail_Embedding, title: 'Embedding' },\n                { id: Phase.Input_Detail_LayerNorm, title: 'Layer Norm' },\n                { id: Phase.Input_Detail_SelfAttention, title: 'Self Attention' },\n                { id: Phase.Input_Detail_Projection, title: 'Projection' },\n                { id: Phase.Input_Detail_Mlp, title: 'MLP' },\n                { id: Phase.Input_Detail_Transformer, title: 'Transformer' },\n                { id: Phase.Input_Detail_Softmax, title: 'Softmax' },\n                { id: Phase.Input_Detail_Output, title: 'Output' },\n            ],\n        }] as IPhaseGroup[],\n    };\n}\n\ninterface ICameraData {\n    initialCaptured?: ICameraPos;\n    target: ICameraPos;\n}\n\nexport enum PhaseGroup {\n    Intro,\n    Detailed_Input,\n}\n\nexport enum Phase {\n    None,\n\n    Intro_Intro,\n    Input_First,\n    Input_Detail_Tables,\n    Input_Detail_TokEmbed,\n    LayerNorm1,\n    Intro_Prelim,\n    Input_Detail_Embedding,\n    Input_Detail_LayerNorm,\n    Input_Detail_SelfAttention,\n    Input_Detail_Softmax,\n    Input_Detail_Projection,\n    Input_Detail_Mlp,\n    Input_Detail_Transformer,\n    Input_Detail_Output,\n}\n\nexport function phaseToGroup(wt: IWalkthrough) {\n    return wt.phaseList.find(g => g.phases.find(p => p.id === wt.phase))!;\n}\n\n\nexport function runWalkthrough(state: IProgramState, view: IRenderView) {\n    let wt = state.walkthrough;\n    wt.viewDt = view.dt;\n\n    if (wt.running) {\n        let dtSeconds = view.dt / 1000 * wt.speed;\n        wt.time += dtSeconds;\n        wt.dt = dtSeconds;\n\n        if (wt.time > wt.phaseLength) {\n            wt.running = false;\n            wt.time = wt.phaseLength;\n        }\n\n        view.markDirty();\n    }\n\n    SavedState.state = { phase: wt.phase, phaseTime: wt.time, camera: state.camera };\n\n    if (wt.prevPhase !== wt.phase) {\n        wt.phaseTransitiveData = null;\n    }\n\n    wt.cameraInitial = null;\n    wt.times = [];\n    wt.phaseLength = 0;\n    wt.dimHighlightBlocks = null;\n\n    let wtArgs: IWalkthroughArgs = { state, layout: state.layout, tools: phaseTools(state), walkthrough: wt };\n\n    let groupId = phaseToGroup(wt).groupId;\n    if (groupId === PhaseGroup.Intro) {\n        walkthroughIntro(wtArgs);\n        walkthrough01_Prelim(wtArgs);\n    } else if (groupId === PhaseGroup.Detailed_Input) {\n        walkthroughDetailed(wtArgs);\n        walkthrough02_Embedding(wtArgs);\n        walkthrough03_LayerNorm(wtArgs);\n        walkthrough04_SelfAttention(wtArgs);\n        walkthrough05_Softmax(wtArgs);\n        walkthrough06_Projection(wtArgs);\n        walkthrough07_Mlp(wtArgs);\n        walkthrough08_Transformer(wtArgs);\n        walkthrough09_Output(wtArgs);\n    }\n\n    wt.prevPhase = wt.phase;\n    wt.prevTime = wt.time;\n}\n\nexport function walkthroughDetailed(args: IWalkthroughArgs) {\n    let { walkthrough: wt, tools: { c_str, afterTime, atTime, atEvent, commentary, commentaryPara, cleanup }, layout, state } = args;\n    let cam = state.camera;\n    let render = state.render;\n    let display = state.display;\n\n    switch (wt.phase) {\n\n    case Phase.Input_First: {\n        let t0 = c_str('', 0);\n        let c = commentary`These vectors now pass through the stages of the model, going through a series of transformers.${t0}`;\n        let t1 = atEvent(t0);\n        let t1a = afterTime(t1, 0.0, 2.0);\n        let t2 = afterTime(t1a, 5, 0.2);\n\n        if (!t2.active) {\n            cam.centerDesired = new Vec3(0, 0, -30);\n            cam.angleZDesired = 1.2;\n            cam.angleDesired = new Vec3(290, 20);\n        }\n\n        let blocks = layout.cubes.filter(b => b.t === 'i');\n        let pos = lerpSmoothstep(0, blocks.length, t2.t);\n        let idx = Math.floor(pos);\n        for (let i = Math.min(idx, blocks.length - 1); i >= 0; i--) {\n            if (!t2.active) {\n                break;\n            }\n            // blocks that are <= idx should have a falloff applied based on how much they're earlier than idx\n            let falloff = 1.0 - (pos - i) / 8;\n            if (falloff < 0) {\n                break;\n            }\n            let blk = blocks[i];\n            blk.highlight = falloff * 0.8;\n            // blk.access?.enable();\n        }\n        if (idx < blocks.length - 1) {\n            let blk = blocks[idx];\n            hideFromBlock(render, layout, blk);\n        }\n\n        break;\n    }\n\n    case Phase.Input_Detail_Tables: {\n\n        // practice drawing labels on tensors\n        let t0_showAll = atTime(0, 0.1, 0.2);\n        t0_showAll.t = 1.0;\n\n        let tokEmbed = layout.tokEmbedObj;\n        drawTextOnModel(render, 'token-embedding matrix', new Vec3(tokEmbed.x - layout.margin, tokEmbed.y + tokEmbed.dy / 4, 0), {\n            align: TextAlignHoriz.Right,\n            valign: TextAlignVert.Middle,\n            color: new Vec4(0,0,0,1).mul(t0_showAll.t),\n            size: 3,\n        });\n        let posEmbed = layout.posEmbedObj;\n        drawTextOnModel(render, 'position-embedding matrix', new Vec3(posEmbed.x + posEmbed.dx + layout.margin, tokEmbed.y + tokEmbed.dy / 4, 0), {\n            align: TextAlignHoriz.Left,\n            valign: TextAlignVert.Middle,\n            color: new Vec4(0,0,0,1).mul(t0_showAll.t),\n            size: 3,\n        });\n\n        blockDimension(state, layout, tokEmbed, Dim.X, DimStyle.n_vocab, t0_showAll.t);\n        blockDimension(state, layout, tokEmbed, Dim.Y, DimStyle.C, t0_showAll.t);\n\n        blockDimension(state, layout, posEmbed, Dim.X, DimStyle.T, t0_showAll.t);\n        blockDimension(state, layout, posEmbed, Dim.Y, DimStyle.C, t0_showAll.t);\n\n        blockDimension(state, layout, layout.residual0, Dim.X, DimStyle.T, t0_showAll.t);\n        blockDimension(state, layout, layout.residual0, Dim.Y, DimStyle.C, t0_showAll.t);\n\n    } break;\n    case Phase.Input_Detail_TokEmbed: {\n        let tStr = c_str('t', 1);\n        let c = commentary`Let's start at the top. To compute the vectors at each time ${tStr} we do a couple of steps:`;\n\n        moveCameraTo(state, atTime(0), new Vec3(0, 0, 0), new Vec3());\n\n        let t0_expandAt0 = atTime(0, 0.1, 0.2);\n        let t1_totEq3 = afterTime(t0_expandAt0, 1.0, 0.2);\n        let t2_expandSplit = afterTime(t1_totEq3, 0.1, 0.4);\n\n        let t3_showTokEmIdx = afterTime(t2_expandSplit, 0.2, 1.0);\n        let t4_highlightTokEmIdx = afterTime(t3_showTokEmIdx, 0.4, 1.0);\n        let t5_iter1Col = afterTime(t4_highlightTokEmIdx, 1.0, 1.0);\n        let t6_cleanup1 = afterTime(t5_iter1Col, 0.3, 1.0);\n\n        cleanup(t6_cleanup1, [t0_expandAt0, t2_expandSplit, t4_highlightTokEmIdx, t5_iter1Col]);\n\n        let t7_iterCols = afterTime(t6_cleanup1, 5.0, 0.0);\n\n        let exampleTIdx = 3;\n        let exampleTokIdx = layout.model?.inputBuf[exampleTIdx] ?? 1;\n\n        // blockDimension(state, layout, layout.residual0, Dim.X, DimStyle.T, 0.5);\n        if (t6_cleanup1.t < 1.0) {\n            let idx = lerp(0, 3, t1_totEq3.t);\n            let split = lerpSmoothstep(t0_expandAt0.t * 1.0, exampleTIdx, t2_expandSplit.t);\n            blockIndex(render, layout, layout.residual0, Dim.X, DimStyle.t, idx, split / 2, t0_expandAt0.t);\n            splitGrid(layout, layout.residual0, Dim.X, idx + 0.5, split);\n            splitGrid(layout, layout.idxObj   , Dim.X, idx + 0.5, split);\n        }\n\n        let embedMtx = c_str('token embedding matrix');\n        let tokCol = c_str('j');\n        commentaryPara(c)`\\n\\n1. From the ${embedMtx}, select the ${tokCol}'th column.`;\n\n        let embedOffColor = new Vec4(0.5,0.5,0.5).mul(0.6);\n\n        if (layout.model && t7_iterCols.t <= 0.0) {\n            let mixes = new Array(layout.tokEmbedObj.cx).fill(0.0);\n            mixes[layout.model!.inputBuf[exampleTIdx]] = t4_highlightTokEmIdx.t;\n            renderIndexes(render, layout, layout.tokEmbedObj, embedOffColor, t3_showTokEmIdx.t, exampleTIdx, 0, null, { color2: dimStyleColor(DimStyle.n_vocab), mixes });\n        }\n\n        if (layout.model && t4_highlightTokEmIdx.t > 0 && t6_cleanup1.t <= 1.0) {\n            splitGrid(layout, layout.tokEmbedObj, Dim.X, exampleTokIdx, 0);\n            findSubBlocks(layout.tokEmbedObj, Dim.X, exampleTokIdx, exampleTokIdx)[0].highlight = lerp(0, 0.2, t4_highlightTokEmIdx.t);\n            display.tokenColors = { color2: dimStyleColor(DimStyle.n_vocab), mixes: oneHotArray(layout.idxObj.cx, exampleTIdx, t4_highlightTokEmIdx.t) };\n            let padTop = layout.cell * 0.3;\n            let padBot = layout.cell * 0.3 + 3;\n            let color = dimStyleColor(DimStyle.n_vocab).mul(t4_highlightTokEmIdx.t);\n            indexMappingLines(render, layout, layout.idxObj, layout.tokEmbedObj, color, padTop, padBot, exampleTIdx, exampleTokIdx, 0.5);\n        }\n\n        if (layout.model && t7_iterCols.t < 1.0) {\n            hideFromBlock(render, layout, layout.residual0);\n        }\n\n        if (layout.model && t5_iter1Col.t > 0.0 && t6_cleanup1.t <= 0.0) {\n            let sub = findSubBlocks(layout.residual0, Dim.X, exampleTIdx, exampleTIdx)[0];\n            if (sub) {\n                sub.access = { ...sub.access!, src: layout.model.vocabEmbed.output, disable: false };\n                let yPos = t5_iter1Col.t * sub.cy;\n                let yIdx = Math.floor(yPos);\n                if (yIdx < sub.cy) {\n                    addSourceDestCurveLine(render, layout, layout.tokEmbedObj, layout.residual0, new Vec3(exampleTokIdx, yIdx, 0), new Vec3(exampleTIdx, yIdx, 0), new Vec4(1,0,0,1));\n                    drawThread(render.threadRender, layout, sub, Dim.Y, 0, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n                    drawThread(render.threadRender, layout, layout.tokEmbedObj, Dim.Y, exampleTokIdx, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n                    drawThread(render.threadRender, layout, layout.posEmbedObj, Dim.Y, exampleTIdx, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n                }\n\n                splitGrid(layout, sub, Dim.Y, yPos, 0.0);\n\n                for (let vertSubBelow of findSubBlocks(sub, Dim.Y, Math.floor(yPos) + 1, null)) {\n                    vertSubBelow.access = { ...sub.access, disable: true };\n                }\n            }\n        }\n\n        if (layout.model && t7_iterCols.active) {\n            let T = layout.idxObj.cx;\n            let C = layout.residual0.cy;\n\n            let tPos = t7_iterCols.t * T;\n            let tIdx = Math.floor(tPos);\n\n            let t_inner = tPos - tIdx;\n            let cPos = t_inner * C;\n\n            let tokIdx = layout.model.inputBuf[tIdx];\n\n            display.tokenColors = { color2: dimStyleColor(DimStyle.n_vocab), mixes: oneHotArray(T, tIdx, 1.0) };\n\n            splitGrid(layout, layout.residual0, Dim.X, tIdx + 0.5, 0.0);\n\n            let sub = findSubBlocks(layout.residual0, Dim.X, null, tIdx - 1);\n            for (let vertSubLeft of sub) {\n                vertSubLeft.access = { ...vertSubLeft.access!, disable: false };\n            }\n            let sub2 = findSubBlocks(layout.residual0, Dim.X, tIdx, tIdx)[0];\n            if (sub2) {\n                sub2.highlight = 0.2;\n                sub2.access = { ...sub2.access!, disable: false };\n                let yPos = cPos + 0.5;\n\n                let yIdx = Math.floor(cPos);\n                let curveColor = new Vec4(1,0,0,1).mul(0.3);\n                addSourceDestCurveLine(render, layout, layout.tokEmbedObj, layout.residual0, new Vec3(tokIdx, yIdx, 0), new Vec3(tIdx, yIdx, 0), curveColor);\n                addSourceDestCurveLine(render, layout, layout.posEmbedObj, layout.residual0, new Vec3(tIdx, yIdx, 0), new Vec3(tIdx, yIdx, 0), curveColor);\n\n                drawThread(render.threadRender, layout, layout.residual0, Dim.Y, tIdx, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n                drawThread(render.threadRender, layout, layout.tokEmbedObj, Dim.Y, tokIdx, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n                drawThread(render.threadRender, layout, layout.posEmbedObj, Dim.Y, tIdx, 0, 1, yIdx + 1, new Vec4(1,0,0,1));\n\n                splitGrid(layout, sub2, Dim.Y, yPos, 0.0);\n\n                for (let colSubBelow of findSubBlocks(sub2, Dim.Y, Math.floor(cPos) + 1, null)) {\n                    colSubBelow.access = { ...colSubBelow.access!, disable: true };\n                }\n            }\n\n\n            let mixes = oneHotArray(layout.tokEmbedObj.cx, tokIdx, 1.0);\n            renderIndexes(render, layout, layout.tokEmbedObj, embedOffColor, t3_showTokEmIdx.t, 3, 0, null, { color2: dimStyleColor(DimStyle.n_vocab), mixes });\n\n            let padTop = layout.cell * 0.3;\n            let padBot = layout.cell * 0.3 + 3;\n            let color = dimStyleColor(DimStyle.n_vocab).mul(t3_showTokEmIdx.t);\n            indexMappingLines(render, layout, layout.idxObj, layout.tokEmbedObj, color, padTop, padBot, tIdx, tokIdx, 0.5);\n\n            let tokSub = splitGrid(layout, layout.tokEmbedObj, Dim.X, tokIdx + 0.5, 0);\n            // let tokSub = findSubBlocks(layout.tokEmbedObj, Dim.X, tokIdx, tokIdx)[0];\n            if (tokSub) {\n                tokSub.highlight = 0.2;\n            }\n\n            let posSub = splitGrid(layout, layout.posEmbedObj, Dim.X, tIdx + 0.5, 0);\n            // let posSub = findSubBlocks(layout.posEmbedObj, Dim.X, tIdx, tIdx)[0];\n            if (posSub) {\n                posSub.highlight = 0.2;\n            }\n        }\n\n        // fallthrough to continue once the commentary is done\n    } break;\n\n    }\n}\n","import { IBlkDef, IGptModelLayout } from \"../GptModelLayout\";\nimport { IRenderState } from \"../render/modelRender\";\nimport { clamp } from \"@/src/utils/data\";\nimport { measureTextWidth } from \"../render/fontRender\";\nimport { Vec3, Vec4 } from \"@/src/utils/vector\";\nimport { IWalkthrough, Phase, PhaseGroup } from \"./Walkthrough\";\nimport { IProgramState } from \"../Program\";\nimport { ICameraPos } from \"../Camera\";\n\nexport interface IWalkthroughArgs {\n    state: IProgramState;\n    layout: IGptModelLayout;\n    walkthrough: IWalkthrough;\n    tools: ReturnType<typeof phaseTools>;\n}\n\nexport function embed(fc: React.FC) {\n    return { insert: () => fc };\n}\n\nexport function phaseTools(state: IProgramState) {\n    let phaseState = state.walkthrough;\n\n    function c_str(str: string, duration: number = 0.3, style: DimStyle = DimStyle.T) {\n        return { str, duration, start: 0, t: 0.0, color: dimStyleColor(style) };\n    }\n\n    function c_blockRef(str: string, blk: IBlkDef | IBlkDef[], style?: DimStyle) {\n        let firstBlk = Array.isArray(blk) ? blk[0] : blk;\n        style ??= firstBlk.t === 'i' ? DimStyle.Intermediates : firstBlk.t === \"w\" ? DimStyle.Weights : DimStyle.Aggregates;\n        return { str, duration: 0, start: 0, t: 0.0, color: dimStyleColor(style), blk };\n    }\n\n    function c_dimRef(str: string, style: DimStyle) {\n        return { str, duration: 0, start: 0, t: 0.0, color: dimStyleColor(style), dim: style };\n    }\n\n    function atTime(start: number, duration?: number, wait?: number): ITimeInfo {\n        return createAtTime(phaseState, start, duration, wait);\n    }\n\n    function atEvent(evt: { str: string, duration: number, t: number, start: number }): ITimeInfo {\n        return atTime(evt.start, evt.duration);\n    }\n\n    function afterTime(prev: ITimeInfo | null, duration: number, wait?: number): ITimeInfo {\n        prev = prev ?? phaseState.times[phaseState.times.length - 1];\n        return atTime(prev.start + prev.duration + prev.wait, duration, wait);\n    }\n\n    function cleanup(t: ITimeInfo, times: ITimeInfo[] = phaseState.times) {\n        if (t.t > 0.0) {\n            for (let prevTime of times) {\n                prevTime.t = 1.0 - t.t;\n                if (t.t >= 1.0) {\n                    prevTime.active = false;\n                }\n            }\n        }\n    }\n\n    function breakAfter(evt?: ITimeInfo) {\n        evt = evt ?? phaseState.times[phaseState.times.length - 1];\n        if (!evt) {\n            return;\n        }\n        let breakEvt = afterTime(evt, 0.001);\n        if (phaseState.running && phaseState.time - phaseState.dt < breakEvt.start && phaseState.time >= breakEvt.start) {\n            phaseState.running = false;\n            phaseState.speed = 1.0;\n            phaseState.time = breakEvt.start + breakEvt.duration;\n        }\n        breakEvt.isBreak = true;\n    }\n\n    function commentary(stringsArr: TemplateStringsArray, ...values: any[]) {\n        return writeCommentary(state, null, stringsArr, ...values);\n    }\n\n    function commentaryPara(c: ICommentaryRes) {\n        return (stringsArr: TemplateStringsArray, ...values: any[]) => {\n            return writeCommentary(state, c, stringsArr, ...values);\n        };\n    }\n\n    return { atTime, atEvent, afterTime, cleanup, commentary, commentaryPara, c_str, c_blockRef, c_dimRef, breakAfter };\n}\n\nfunction createAtTime(wt: IWalkthrough, start: number, duration?: number, wait?: number): ITimeInfo {\n    duration = duration ?? 0;\n    wait = wait ?? 0;\n    let info: ITimeInfo = {\n        name: '',\n        start,\n        duration,\n        wait,\n        t: duration === 0 ? (wt.time > start ? 1 : 0) : clamp((wt.time - start) / duration, 0, 1),\n        active: wt.time > start,\n    };\n    wt.times.push(info);\n    wt.phaseLength = Math.max(wt.phaseLength, start + duration + wait);\n    return info;\n}\n\nexport function eventEndTime(evt: ITimeInfo) {\n    return evt.start + evt.duration + evt.wait;\n}\n\nexport interface ICommentary extends ITimeInfo {\n    strings: TemplateStringsArray;\n    values: any[];\n}\n\nexport function isCommentary(evt: ITimeInfo): evt is ICommentary {\n    return 'strings' in evt;\n}\n\nexport function commentary(wt: IWalkthrough, prev?: ITimeInfo | null, duration?: number) {\n    return (stringsArr: TemplateStringsArray, ...values: any[]): ICommentary => {\n        let t = 0;\n        prev = prev ?? wt.times[wt.times.length - 1];\n\n        if (prev) {\n            t = prev.start + prev.duration + prev.wait;\n        }\n\n        let commentaryT = createAtTime(wt, prev ? eventEndTime(prev) : 0, duration ?? 0.2);\n\n        let res: ICommentary = {\n            ...commentaryT,\n            strings: stringsArr,\n            values,\n        };\n\n        wt.times[wt.times.length - 1] = res; // replace the time info with the commentary\n\n        return res;\n    }\n}\n\nexport function writeCommentary(state: IProgramState, prev: ICommentaryRes | null, stringsArrRaw: TemplateStringsArray, ...values: any[]): ICommentaryRes {\n    let t = prev?.duration ?? 0;\n    let colNum = 0;\n    let fontSize = 17;\n    let maxWidth = 500;\n    let charsPerSecond = 400;\n    let lineHeight = fontSize * 1.2;\n\n    let lineOffset = prev ? prev.lineOffset + lineHeight * 1.5 : 10;\n    let stringsArr = stringsArrRaw.map(s => s.replace(/([ \\n])+/g, ' '));\n\n    for (let i = 0; i < values.length + 1; i++) {\n        let str = stringsArr[i];\n\n        t += str.length / charsPerSecond;\n\n        if (i < values.length && 't' in values[i]) {\n            // calculate the t value of this point\n            values[i].start = t;\n            t += values[i].duration;\n        }\n    }\n\n    let targetT = state.walkthrough.time;\n\n    function writeWord(str: string, tStart: number, tEnd: number, colOverride?: Vec4, fontOverride?: string) {\n\n        while (str.startsWith('\\n\\n')) {\n            lineOffset += lineHeight;\n            colNum = 0;\n            str = str.substring(2);\n        }\n        str = str.replace(/([ \\n])+/g, ' ');\n\n        let strToDraw = str;\n        let nextOff = 0;\n        let w = measureTextWidth(state.render.modelFontBuf, str, fontSize);\n        if (colNum + w > maxWidth) {\n            lineOffset += lineHeight;\n            colNum = 0;\n            strToDraw = str.trimStart();\n            w = measureTextWidth(state.render.modelFontBuf, strToDraw, fontSize);\n            if (w > maxWidth) {\n                // ignore for now; single word longer than line: should break at the character level\n            }\n            nextOff = w;\n        } else {\n            nextOff = colNum + w;\n        }\n\n        let color = new Vec4(0.5, 0.5, 0.5, 1).mul(0.5);\n        if (targetT > tStart) {\n            let targetColor = colOverride ?? new Vec4(0.1, 0.1, 0.1, 1);\n            // lerp is 0 at tStart, 1 at tEnd\n            let x = clamp((targetT - tStart) / (tEnd - tStart), 0, 1);\n            color = Vec4.lerp(color, targetColor, x);\n        }\n        // writeTextToBuffer(state.overlayFontBuf, strToDraw, color, 10 + colNum, lineOffset, fontSize, undefined, fontOverride);\n\n        colNum = nextOff;\n    }\n\n    t = prev?.duration ?? 0;\n    for (let i = 0; i < values.length + 1; i++) {\n        let words = stringsArr[i].split(/(?=[ \\n]+)/).filter(a => a !== ' ');\n\n        for (let word of words) {\n            let tEnd = t + word.length / charsPerSecond;\n            writeWord(word, t, tEnd);\n            t = tEnd;\n        }\n\n        if (i < values.length && 't' in values[i]) {\n            let val = values[i];\n            // calculate the t value of this point\n            val.start = t;\n            writeWord(values[i].str, t, val.color, val.fontFace);\n            t += val.duration;\n        }\n    }\n\n    let commentryT = createAtTime(state.walkthrough, 0, t, 0);\n\n    let res: ICommentaryRes = {\n        ...commentryT,\n        stringsArr: stringsArrRaw,\n        values,\n        lineOffset,\n        colNum,\n        commentaryList: [],\n    };\n    res.commentaryList = [res];\n\n    if (prev) {\n        prev.lineOffset = lineOffset;\n        prev.colNum = colNum;\n        prev.duration = t;\n        prev.commentaryList = [...prev.commentaryList, res];\n    } else {\n        state.walkthrough.commentary = res;\n    }\n\n    return res;\n}\n\nexport interface ICommentaryRes extends ITimeInfo {\n    stringsArr: TemplateStringsArray;\n    values: any[];\n    commentaryList: ICommentaryRes[];\n    duration: number;\n    lineOffset: number;\n    colNum: number;\n}\n\nexport interface ITimeInfo {\n    name: string;\n    start: number;\n    duration: number;\n    wait: number;\n\n    // will change over the course of a phase: used to lerp\n    t: number; // 0 - 1\n    active: boolean;\n\n    isBreak?: boolean;\n}\n\nfunction getPhaseTransitiveData(wt: IWalkthrough) {\n    wt.phaseTransitiveData ??= {};\n    return wt.phaseTransitiveData;\n}\n\nexport function setInitialCamera(state: IProgramState, target: Vec3, rot: Vec3) {\n    let wt = state.walkthrough;\n    wt.cameraInitial = { angle: rot, center: target };\n\n    let data = getPhaseTransitiveData(wt);\n\n    if (wt.time === 0) {\n        data.cameraSrc ??= { angle: state.camera.angle, center: state.camera.center };\n        data.cameraT ??= 0;\n\n        if (data.cameraT < 1) {\n            let src = data.cameraSrc;\n            let dest = wt.cameraInitial;\n            let t = data.cameraT;\n            state.camera.angle = src.angle.lerp(dest.angle, t);\n            state.camera.center = src.center.lerp(dest.center, t);\n\n            data.cameraT = t + wt.viewDt / 1000 * 1.5;\n            wt.markDirty();\n        }\n    }\n}\n\nexport function moveCameraTo(state: IProgramState, time: ITimeInfo, target: Vec3, rot: Vec3) {\n\n    let wt = state.walkthrough;\n    let phaseData = wt.phaseData.get(wt.phase);\n    if (!phaseData) {\n        wt.phaseData.set(wt.phase, phaseData = { cameraData: null });\n    }\n    if (!phaseData.cameraData) {\n        phaseData.cameraData = new Map<number, ICameraPos>();\n    }\n\n    let prevTime = [...phaseData.cameraData.entries()].filter(([t, _]) => t < time.start).pop()?.[1];\n\n    let camData = phaseData.cameraData.get(time.start);\n    if (!camData) {\n         phaseData.cameraData.set(time.start, camData = {\n            initialCaptured: prevTime ? undefined : wt.cameraInitial ?? {\n                angle: state.camera.angle,\n                center: state.camera.center,\n            },\n            target: { angle: rot, center: target },\n        });\n    }\n\n    // if we transition from before the ITimeInfo to the start of it, we capture the camera position\n    // we store the camera position in a map, keyed by the ITimeInfo name\n    // then we can use that position to lerp from its initial value to the target values\n\n\n    // if we don't get to the start via running (e.g. clicking on a link), we use the camera position\n    // of the last moveCameraTo call (so need to keep track of that!)\n\n    // if (wt.running && wt.time - wt.dt < time.start && wt.time >= time.start && !prevTime && !camData.initialCaptured) {\n    //     camData.initialCaptured = {\n    //         angle: state.camera.angle,\n    //         center: state.camera.center,\n    //     };\n    // }\n\n    let src = prevTime?.target ?? wt.cameraInitial ?? camData.initialCaptured;\n\n    let dest: ICameraPos = {\n        center: target,\n        angle: rot,\n    };\n\n    let isMoving = wt.running || wt.time !== wt.prevTime;\n    let prevWasActive = wt.prevTime >= time.start && wt.prevTime <= time.start + time.duration;\n\n    if (src && isMoving && (time.active || prevWasActive)) {\n        let t = time.t;\n        state.camera.angle = src.angle.lerp(dest.angle, t);\n        state.camera.center = src.center.lerp(dest.center, t);\n    }\n}\n\n\n\n\nexport enum DimStyle {\n    None,\n    t,\n    T,\n    C,\n    B,\n    A,\n    n_vocab,\n    n_heads,\n    n_layers,\n    Token,\n    TokenIdx,\n    C4,\n    Intermediates,\n    Weights,\n    Aggregates,\n}\n\nexport function dimStyleColor(style: DimStyle) {\n     switch (style) {\n        case DimStyle.t:\n        case DimStyle.T:\n            return Vec4.fromHexColor('#359da8');\n        case DimStyle.A:\n            return Vec4.fromHexColor('#d368a4');\n        case DimStyle.C:\n        case DimStyle.C4:\n            return Vec4.fromHexColor('#ce2983');\n        case DimStyle.Token:\n            return new Vec4(0.3, 0.7, 0.3, 1);\n        case DimStyle.TokenIdx:\n            return Vec4.fromHexColor('#1b495d');\n        case DimStyle.n_vocab:\n            return Vec4.fromHexColor('#7c3c8d'); // new Vec4(0.8, 0.6, 0.3, 1);\n        case DimStyle.Intermediates:\n            return Vec4.fromHexColor('#00ad00');\n        case DimStyle.Weights:\n            return Colors.Weights;\n        case DimStyle.Aggregates:\n            return Vec4.fromHexColor('#e3a300');\n    }\n    return new Vec4(0,0,0);\n}\n\nexport function dimStyleText(style: DimStyle) {\n    switch (style) {\n        case DimStyle.TokenIdx: return 'Token Index';\n        case DimStyle.C4: return 'C * 4';\n        default: return DimStyle[style];\n    }\n}\n\nexport function dimStyleTextShort(style: DimStyle) {\n    switch (style) {\n        case DimStyle.B: return 'b';\n        case DimStyle.T: return 't';\n        case DimStyle.A: return 'a';\n        case DimStyle.C: return 'c';\n        case DimStyle.C4: return 'c';\n        default: return DimStyle[style];\n    }\n}\n\nexport const Colors = {\n    Weights: new Vec4(0.3, 0.3, 1.0),\n    Intermediates: new Vec4(0.4, 0.8, 0.4),\n    Aggregates: new Vec4(1.0, 0.8, 0.3), // a yellowish color\n\n    Black: new Vec4(0, 0, 0),\n}\n\nexport function hideFromBlock(state: IRenderState, layout: IGptModelLayout, targetBlk: IBlkDef) {\n    let seen = false;\n    for (let blk of layout.cubes) {\n        if (!seen && blk === targetBlk) {\n            seen = true;\n        }\n        seen && blk.t === 'i' && hideBlock(blk);\n    }\n    function hideBlock(b: IBlkDef) {\n        if (b.access) {\n            b.access.disable = true;\n        }\n        b.subs?.forEach(hideBlock);\n    }\n}\n\nexport interface IPhaseGroup {\n    groupId: PhaseGroup;\n    title: string;\n    phases: IPhaseDef[];\n}\n\nexport interface IPhaseDef {\n    id: Phase;\n    title: string;\n}\n","import { Vec3 } from \"./vector\";\n\nexport function makeArray<T = number>(length: number, val?: T): T[] {\n    return new Array(length).fill(val ?? 0);\n}\n\nexport function makeArrayRange(length: number, min: number, max: number): number[] {\n    return new Array(length).fill(0).map((_, i) => min + i * (max - min) / (length - 1));\n}\n\nexport function oneHotArray(length: number, index: number, val: number, defaultVal: number = 0.0): number[] {\n    let arr = new Array(length).fill(defaultVal);\n    arr[index] = val;\n    return arr;\n}\n\nexport function assignImm<T>(target: T, source: Partial<T>): T {\n    let keys = Object.keys(source);\n    let changed = false;\n    target = target ?? {} as any;\n    for (let k of keys) {\n        let src = (source as any)[k];\n        let dst = (target as any)[k];\n        if ((src === dst) ||\n            (src instanceof Date && dst instanceof Date && +src === +dst) ||\n            (src instanceof Vec3 && dst instanceof Vec3 && src.distSq(dst) === 0.0)\n        ) {\n            continue;\n        }\n        changed = true;\n    }\n    return changed ? Object.assign({}, target, source) : target;\n}\n\nexport function assignImmFull<T>(target: T | null, source: T | null): T | null {\n    return source && target ? assignImm(target, source) : source;\n}\n\nexport function isNil(a: any): a is null | undefined {\n    return a === null || a === undefined;\n}\n\nexport function isNotNil<T>(a: T | null | undefined): a is T {\n    return a !== null && a !== undefined;\n}\n\nexport type StateSetter<T> = (action: React.SetStateAction<T>) => void;\n\nexport function applySetter<T>(setState: React.SetStateAction<T>, existing: T) {\n    return setState instanceof Function ? setState(existing) : setState;\n}\n\nexport function clamp(num: number, min: number, max: number) {\n    if (num < min) {\n        return min;\n    } else if (num > max) {\n        return max;\n    }\n    return num;\n}\n\nexport function base64ToArrayBuffer(base64: string) {\n    let binaryString = window.atob(base64);\n    let len = binaryString.length;\n    let bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n\nexport function getOrAddToMap<K, V>(map: Map<K, V>, key: K, valueFn: () => V): V {\n    let existing = map.get(key);\n    if (existing === undefined) {\n        let value = valueFn();\n        map.set(key, value);\n        return value;\n    }\n    return existing;\n}\n\nexport function hasFlag(flags: number, flag: number) {\n    return (flags & flag) === flag;\n}\n","import { useEffect, useReducer, useRef, useState } from \"react\";\n\nexport function useFunctionRef<T extends ((...args: any[]) => any) | undefined>(fn: T): React.MutableRefObject<T> {\n    let ref = useRef<T>(fn);\n    useEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return ref;\n}\n\nexport function useRequestAnimationFrame(active: boolean, cb: (dt: number) => void) {\n    let cbRef = useFunctionRef(cb);\n    useEffect(() => {\n        let stale = false;\n        let handle: number;\n        let prevTime: number | undefined;\n\n        function loop(time: number) {\n            let dt = (prevTime === undefined ? 16 : (time - prevTime)) / 1000;\n            prevTime = time;\n            cbRef.current(dt);\n            if (!stale) {\n                handle = requestAnimationFrame(loop);\n            }\n        }\n\n        if (active) {\n            handle = requestAnimationFrame(loop);\n            return () => {\n                stale = true;\n                cancelAnimationFrame(handle);\n            };\n        }\n    }, [active, cbRef]);\n}\n\nexport interface IIntervalOptions {\n    // run the callback immediately on mount\n    runImmediately?: boolean;\n}\n\nexport function useInterval(active: boolean, delay: number, cb: () => void, opts?: IIntervalOptions) {\n    let cbRef = useFunctionRef(cb);\n    let runImmediately = opts?.runImmediately ?? false;\n    useEffect(() => {\n        if (active) {\n            let handle = setInterval(cbRef.current, delay);\n            if (runImmediately) {\n                cbRef.current();\n            }\n            return () => clearInterval(handle);\n        }\n    }, [active, delay, cbRef, runImmediately]);\n}\n\nexport function logChangesFn(name: string) {\n    let prevValue: any = null;\n    return (currValue: any) => {\n        let changes = getChanges(prevValue, currValue);\n        prevValue = currValue;\n        changes && console.log(`${name} changed to`, changes);\n        return !!changes;\n    };\n\n    function getChanges(a: any, b: any) {\n        a = a || {};\n        b = b || {};\n        let keys = new Set<string>();\n        for (let k of [...Object.keys(a), ...Object.keys(b)]) {\n            a[k] !== b[k] && keys.add(k);\n        }\n        if (keys.size === 0) {\n            return null;\n        }\n        let changed: any = {};\n        for (let k of [...keys]) {\n            changed[k] = b[k];\n        }\n        return changed;\n    }\n}\n\nexport function useLogChanges(name: string, values: any) {\n    let [changesFn] = useState(() => logChangesFn(name));\n    return changesFn(values);\n}\n\n\nexport class Subscriptions {\n    subs = new Set<() => void>();\n    subscribe = (fn: () => void): (() => void) => {\n        this.subs.add(fn);\n        return () => this.subs.delete(fn);\n    }\n    notify = () => {\n        for (let sub of this.subs) {\n            sub();\n        }\n    }\n}\n\nexport function useSubscriptions(subscription: Subscriptions | null) {\n    let [, refresh] = useReducer(a => a + 1, 0);\n    useEffect(() => subscription?.subscribe(refresh), [subscription]);\n}\n","import { createContext, useContext, useEffect } from \"react\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport enum KeyboardOrder {\n    MainPage = 0,\n    Element = 1,\n    Modal = 2,\n}\n\nexport interface IKeyHandler {\n    order: KeyboardOrder;\n    handler: (ev: KeyboardEvent) => void;\n    receiveKeyUp: boolean;\n}\n\nexport interface IKeyHandlerOptions {\n    isActive?: boolean;\n    receiveKeyUp?: boolean;\n}\n\nexport class KeyboardManager {\n    private handlers: IKeyHandler[] = [];\n\n    registerHandler(order: KeyboardOrder, handler: (ev: KeyboardEvent) => void, opts?: IKeyHandlerOptions): () => void {\n        let newHandler: IKeyHandler = { order, handler, receiveKeyUp: opts?.receiveKeyUp ?? false };\n        this.handlers.push(newHandler);\n        return () => {\n            this.handlers = this.handlers.filter(h => h !== newHandler);\n        };\n    }\n\n    handleKey = (ev: KeyboardEvent) => {\n        let handlersSorted = this.handlers.sort((a, b) => a.order - b.order);\n\n        let propagationStopped = false;\n        let oldStopPropagation = ev.stopPropagation;\n\n        ev.stopPropagation = () => {\n            propagationStopped = true;\n            oldStopPropagation.call(ev);\n        };\n\n        for (let handler of handlersSorted) {\n            if (ev.type === \"keyup\" && !handler.receiveKeyUp) {\n                continue;\n            }\n            handler.handler(ev);\n            if (propagationStopped) {\n                break;\n            }\n        }\n    }\n}\n\nexport const KeyboardManagerContext = createContext<KeyboardManager>(new KeyboardManager());\n\nexport function useGlobalKeyboard(order: KeyboardOrder, handler: (ev: KeyboardEvent) => void, opts?: IKeyHandlerOptions) {\n    let manager = useContext(KeyboardManagerContext);\n    let handlerRef = useFunctionRef(handler);\n    let receiveKeyUp = opts?.receiveKeyUp ?? false;\n    let isActive = opts?.isActive ?? true;\n\n    useEffect(() => {\n        if (isActive) {\n            let h = (ev: KeyboardEvent) => handlerRef.current(ev);\n            let unregister = manager.registerHandler(order, h, { receiveKeyUp });\n            return () => unregister();\n        }\n    }, [order, handlerRef, manager, receiveKeyUp, isActive]);\n}\n\nexport function useCreateGlobalKeyboardDocumentListener() {\n    let manager = useContext(KeyboardManagerContext);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", manager.handleKey);\n        window.addEventListener(\"keyup\", manager.handleKey);\n        return () => {\n            window.removeEventListener(\"keydown\", manager.handleKey);\n            window.removeEventListener(\"keyup\", manager.handleKey);\n        };\n    }, [manager]);\n}\n\nexport enum Modifiers {\n    None = 0,\n    Alt = 1,\n    CtrlOrCmd = 2,\n    Shift = 4,\n}\n\nexport interface IKeyboardEvent {\n    type: string;\n    key: string;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n\nexport interface IModifiersEvent {\n    type: string;\n    altKey: boolean;\n    ctrlKey: boolean;\n    shiftKey: boolean;\n    metaKey: boolean;\n}\n\nexport function isArrowKeyWithModifiers(ev: IKeyboardEvent, direction: \"up\" | \"down\" | \"left\" | \"right\", modifiers: Modifiers = Modifiers.None) {\n    return (ev.key.toLowerCase() === direction || ev.key.toLowerCase() === `arrow${direction}`) && hasModifiers(ev, modifiers);\n}\n\nexport function isKeyWithModifiers(ev: IKeyboardEvent, key: string, modifiers: Modifiers = Modifiers.None) {\n    return key.toLowerCase() === ev.key.toLowerCase() && hasModifiers(ev, modifiers);\n}\n\nexport function hasModifiers(ev: IModifiersEvent, modifiers: Modifiers) {\n    let modifiersActual = Modifiers.None;\n    modifiersActual |= ev.altKey ? Modifiers.Alt : 0;\n    modifiersActual |= ev.ctrlKey || ev.metaKey ? Modifiers.CtrlOrCmd : 0;\n    modifiersActual |= ev.shiftKey ? Modifiers.Shift : 0;\n\n    return modifiersActual === modifiers;\n}\n","import { clamp } from \"./data\";\n\nexport function lerp(a: number, b: number, t: number) {\n    return a + (b - a) * clamp(t, 0, 1);\n}\n\n// we lerp after running the smoothstep, and t is clamped to [0, 1]\nexport function lerpSmoothstep(a: number, b: number, t: number) {\n    if (t <= 0.0) return a;\n    if (t >= 1.0) return b;\n    return a + (b - a) * t * t * (3 - 2 * t);\n}\n\nexport function roundUpTo(a: number, b: number) {\n    return Math.ceil(a / b) * b;\n}\n","\n/* Design decisions for Mat4\n\nWith 16 floats, Float32Array is the obvious choice, and means it maps to WebGL nicely.\nNote that there's limited precision with floats, if we're ever computing js-side.\n\nThe matrix is in column-major order, also to match WebGL.\n*/\n\nimport { IArr, Vec3, Vec4 } from \"./vector\";\n\n/** Column-major, 16-element float32 matrix, extending a Float32Array.\nMethods will return a copy unless otherwise noted.\n*/\nexport class Mat4f extends Float32Array {\n    constructor(\n    ) {\n        super(16);\n        this[0] = this[5] = this[10] = this[15] = 1.0;\n    }\n\n    static identity = new Mat4f();\n\n    g(r: number, c: number) { return this[c * 4 + r]; }\n    s(r: number, c: number, v: number) { this[c * 4 + r] = v; }\n\n    add(a: Mat4f): Mat4f {\n        let res = new Mat4f();\n        for (let i = 0; i < 16; i++) {\n            res[i] = this[i] + a[i];\n        }\n        return res;\n    }\n\n    sub(a: Mat4f): Mat4f {\n        let res = new Mat4f();\n        for (let i = 0; i < 16; i++) {\n            res[i] = this[i] - a[i];\n        }\n        return res;\n    }\n\n    mul(a: Mat4f): Mat4f {\n        let res = new Mat4f();\n        for (let x = 0; x < 4; x++) {\n            for (let y = 0; y < 4; y++) {\n                let v = 0.0;\n                for (let k = 0; k < 4; k++) {\n                     v += this[k * 4 + y] * a[x * 4 + k];\n                }\n                res[x * 4 + y] = v;\n            }\n        }\n        return res;\n    }\n\n    mulVec4(a: Vec4): Vec4 {\n        let x = this[0] * a.x + this[4] * a.y + this[8] * a.z + this[12] * a.w;\n        let y = this[1] * a.x + this[5] * a.y + this[9] * a.z + this[13] * a.w;\n        let z = this[2] * a.x + this[6] * a.y + this[10] * a.z + this[14] * a.w;\n        let w = this[3] * a.x + this[7] * a.y + this[11] * a.z + this[15] * a.w;\n        return new Vec4(x, y, z, w);\n    }\n\n    mulVec3Proj(a: Vec3): Vec3 {\n        let v4 = this.mulVec4(new Vec4(a.x, a.y, a.z, 1.0));\n        let wInv = 1.0 / v4.w;\n        return new Vec3(v4.x * wInv, v4.y * wInv, v4.z * wInv);\n    }\n\n    mulVec3ProjVec(a: Vec3): Vec3 {\n        let v4 = this.mulVec4(new Vec4(a.x, a.y, a.z, 0.0));\n        return new Vec3(v4.x, v4.y, v4.z);\n    }\n\n    mulVec3Affine(a: Vec3) {\n        let o = new Vec3();\n        this.mulVec3Affine_(a, o);\n        return o;\n    }\n\n    mulVec3Affine_(a: Vec3, o: Vec3) {\n        let x = this[0] * a.x + this[4] * a.y + this[8] * a.z + this[12];\n        let y = this[1] * a.x + this[5] * a.y + this[9] * a.z + this[13];\n        let z = this[2] * a.x + this[6] * a.y + this[10] * a.z + this[14];\n        o.x = x;\n        o.y = y;\n        o.z = z;\n    }\n\n    mulVec3AffineArr_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        let ax = a[aOff];\n        let ay = a[aOff + 1];\n        let az = a[aOff + 2];\n        out[outOff + 0] = this[0] * ax + this[4] * ay + this[8] * az + this[12];\n        out[outOff + 1] = this[1] * ax + this[5] * ay + this[9] * az + this[13];\n        out[outOff + 2] = this[2] * ax + this[6] * ay + this[10] * az + this[14];\n    }\n\n    mulVec3AffineVec_(a: Vec3, o: Vec3) {\n        let x = this[0] * a.x + this[4] * a.y + this[8] * a.z;\n        let y = this[1] * a.x + this[5] * a.y + this[9] * a.z;\n        let z = this[2] * a.x + this[6] * a.y + this[10] * a.z;\n        o.x = x;\n        o.y = y;\n        o.z = z;\n    }\n\n    static fromRowMajor(a: ArrayLike<number> | number[][]) {\n        if (a.length > 0 && Array.isArray(a[0])) {\n            a = (a as number[][]).flatMap(x => x);\n        }\n        let flatArr = a as ArrayLike<number>;\n        if (flatArr.length !== 16) {\n            console.log('need 16 elements');\n        }\n\n        let res = new Mat4f();\n        for (let i = 0; i < 4; i++) {\n            for (let j = 0; j < 4; j++) {\n                res[i * 4 + j] = flatArr[j * 4 + i];\n            }\n        }\n        return res;\n    }\n\n    static fromColMajor(flatArr: ArrayLike<number>, offset: number = 0) {\n        if (flatArr.length - offset < 16) {\n            console.log('need 16 elements');\n        }\n        let res = new Mat4f();\n        for (let i = 0; i < 16; i++) {\n            res[i] = flatArr[offset + i];\n        }\n        return res;\n    }\n\n    static fromTranslation(a: Vec3) {\n        let res = new Mat4f();\n        res[12] = a.x;\n        res[13] = a.y;\n        res[14] = a.z;\n        return res;\n    }\n\n    static fromScaleTranslation(s: Vec3, t: Vec3) {\n        let res = new Mat4f();\n        res[0] = s.x;\n        res[5] = s.y;\n        res[10] = s.z;\n        res[12] = t.x;\n        res[13] = t.y;\n        res[14] = t.z;\n        return res;\n    }\n\n    static fromAxisAngle(axis: Vec3, angleRad: number) {\n        let res = new Mat4f();\n        fromAxisAngle(axis, angleRad, res, 4);\n        return res;\n    }\n\n    static fromQuat(q: Vec4) {\n        let res = new Mat4f();\n        fromQuat(q, res, 4);\n        return res;\n    }\n\n    static fromScale(s: Vec3) {\n        let res = new Mat4f();\n        res[0] = s.x;\n        res[5] = s.y;\n        res[10] = s.z;\n        return res;\n    }\n\n    static fromLookAt(eye: Vec3, center: Vec3, up: Vec3) {\n        let f = eye.sub(center).normalize();\n        let u = up.normalize();\n        let r = Vec3.cross(u, f).normalize();\n        u = Vec3.cross(f, r);\n\n        let res = new Mat4f();\n        res[ 0] = r.x;\n        res[ 1] = u.x;\n        res[ 2] = f.x;\n        res[ 4] = r.y;\n        res[ 5] = u.y;\n        res[ 6] = f.y;\n        res[ 8] = r.z;\n        res[ 9] = u.z;\n        res[10] = f.z;\n        res[12] = -eye.dot(r);\n        res[13] = -eye.dot(u);\n        res[14] = -eye.dot(f);\n        return res;\n    }\n\n    static fromPersp(fovDeg: number, aspect: number, near: number, far: number) {\n        let h = near * Math.tan(fovDeg / 2 * Math.PI / 180) * 2;\n        let w = h * aspect;\n\n        let res = new Mat4f();\n        res[0] = 2 * near / w;\n        res[5] = 2 * near / h;\n        res[10] = - far / (far - near);\n        res[11] = -1;\n        res[14] = - far * near / (far - near);\n        res[15] = 0;\n\n        return res;\n    }\n\n    static fromOrtho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n        let res = new Mat4f();\n        res[0] = 2 / (right - left);\n        res[5] = 2 / (top - bottom);\n        res[10] = -2 / (far - near);\n        res[12] = -(right + left) / (right - left);\n        res[13] = -(top + bottom) / (top - bottom);\n        res[14] = -(far + near) / (far - near);\n        return res;\n    }\n\n    static zeros() {\n        let res = new Mat4f();\n        res[0] = 0.0;\n        res[5] = 0.0;\n        res[10] = 0.0;\n        res[15] = 0.0;\n        return res;\n    }\n\n    // creates Translation, Rotation, Scale, such that this matrix is the result of multipling\n    // the equivalent matrix forms, as in\n    //\n    // M = T * R * S\n    //\n    // Note that we assume that there is no skew or projective components.\n    // The rotation is given as a quaternion\n    decomposeToTRS(): [Vec3, Vec4, Vec3] {\n        let T = Vec3.fromArray(this, 12);\n        let S = new Vec3(\n            Vec3.fromArray(this, 0).len(),\n            Vec3.fromArray(this, 4).len(),\n            Vec3.fromArray(this, 8).len());\n\n        let tr = this[0] + this[5] + this[10];\n        let R: Vec4;\n        if (tr > 0.0) {\n            let r = Math.sqrt(1 + tr);\n            let s = 0.5 / r;\n            R = new Vec4(\n                (this[6] - this[9]) * s,\n                (this[8] - this[2]) * s,\n                (this[1] - this[4]) * s,\n                0.5 * r,\n            );\n        } else if (this[0] > this[5] && this[0] > this[10]) {\n            let r = Math.sqrt(1.0 + this[0] - this[5] - this[10]);\n            let s = 0.5 / r;\n            R = new Vec4(\n                0.5 * r,\n                (this[1] + this[4]) * s,\n                (this[8] + this[2]) * s,\n                (this[6] - this[9]) * s,\n            );\n        } else if (this[5] > this[10]) {\n            let r = Math.sqrt(1.0 + this[5] - this[0] - this[10]);\n            let s = 0.5 / r;\n            R = new Vec4(\n                (this[4] + this[1]) * s,\n                0.5 * r,\n                (this[9] + this[6]) * s,\n                (this[8] - this[2]) * s,\n            );\n        } else {\n            let r = Math.sqrt(1.0 + this[10] - this[0] - this[5]);\n            let s = 0.5 / r;\n            R = new Vec4(\n                (this[8] + this[2]) * s,\n                (this[9] + this[6]) * s,\n                0.5 * r,\n                (this[1] - this[4]) * s,\n            );\n        }\n        return [T, R, S];\n    }\n\n    invertTRS(): Mat4f {\n        let res = new Mat4f();\n\n        let u = Vec3.fromArray(this, 0);\n        let v = Vec3.fromArray(this, 4);\n        let w = Vec3.fromArray(this, 8);\n        let t = Vec3.fromArray(this, 12);\n\n        res[0] = this[0];\n        res[1] = this[4];\n        res[2] = this[8];\n\n        res[4] = this[1];\n        res[5] = this[5];\n        res[6] = this[9];\n\n        res[8] = this[2];\n        res[9] = this[6];\n        res[10] = this[10];\n\n        res[12] = -u.dot(t);\n        res[13] = -v.dot(t);\n        res[14] = -w.dot(t);\n\n        return res;\n    }\n\n    determinant(): number {\n        let A = new Float64Array(this);\n        let P = new Int32Array(5);\n        luDecomp(A, P, 4);\n        return luDeterminant(A, P, 4);\n    }\n\n    invert(): Mat4f {\n        let A = new Float64Array(this);\n        let P = new Int32Array(5);\n        luDecomp(A, P, 4);\n        let res = new Mat4f();\n        luInvert(A, P, 4, res);\n        return res;\n    }\n\n    toString(): string {\n        let s = '\\n';\n        for (let i = 0; i < 4; i++) {\n            s += i === 0 ? '[[' : ' [';\n            for (let j = 0; j < 4; j++) {\n                let v = this.g(i, j);\n                s += (v < 0 ? '' : ' ') + v.toFixed(3) + (j === 3 ? ']' : ', ');\n            }\n            s += i === 3 ? ']' : '\\n';\n        }\n        return s;\n    }\n}\n\n/** Column-major, 9-element float32 matrix, extending a Float32Array.\nMethods will return a copy unless otherwise noted.\n*/\nexport class Mat3f extends Float32Array {\n    constructor(\n    ) {\n        super(9);\n        this[0] = this[4] = this[8] = 1.0;\n    }\n\n    g(r: number, c: number) { return this[c * 3 + r]; }\n    s(r: number, c: number, v: number) { this[c * 3 + r] = v; }\n\n    add(a: Mat3f): Mat3f {\n        let res = new Mat3f();\n        for (let i = 0; i < 9; i++) {\n            res[i] = this[i] + a[i];\n        }\n        return res;\n    }\n\n    sub(a: Mat3f): Mat3f {\n        let res = new Mat3f();\n        for (let i = 0; i < 9; i++) {\n            res[i] = this[i] - a[i];\n        }\n        return res;\n    }\n\n    mul(a: Mat3f): Mat3f {\n        let res = new Mat3f();\n        for (let x = 0; x < 3; x++) {\n            for (let y = 0; y < 3; y++) {\n                let v = 0.0;\n                for (let k = 0; k < 3; k++) {\n                     v += this[k * 3 + y] * a[x * 3 + k];\n                }\n                res[x * 3 + y] = v;\n            }\n        }\n        return res;\n    }\n\n    mulVec3(a: Vec3): Vec3 {\n        let x = this[0] * a.x + this[3] * a.y + this[6] * a.z;\n        let y = this[1] * a.x + this[4] * a.y + this[7] * a.z;\n        let z = this[2] * a.x + this[5] * a.y + this[8] * a.z;\n        return new Vec3(x, y, z);\n    }\n\n    transpose(): Mat3f {\n        let res = new Mat3f();\n        res[0] = this[0];\n        res[1] = this[3];\n        res[2] = this[6];\n        res[3] = this[1];\n        res[4] = this[4];\n        res[5] = this[7];\n        res[6] = this[2];\n        res[7] = this[5];\n        res[8] = this[8];\n        return res;\n    }\n\n    static fromRowMajor(a: ArrayLike<number> | number[][]) {\n        if (a.length > 0 && Array.isArray(a[0])) {\n            a = (a as number[][]).flatMap(x => x);\n        }\n        let flatArr = a as ArrayLike<number>;\n        if (flatArr.length !== 9) {\n            console.log('need 9 elements');\n        }\n\n        let res = new Mat3f();\n        for (let i = 0; i < 3; i++) {\n            for (let j = 0; j < 3; j++) {\n                res[i * 3 + j] = flatArr[j * 3 + i];\n            }\n        }\n        return res;\n    }\n\n    static fromColMajor(flatArr: ArrayLike<number>, offset: number = 0) {\n        if (flatArr.length - offset < 9) {\n            console.log('need 9 elements');\n        }\n        let res = new Mat3f();\n        for (let i = 0; i < 9; i++) {\n            res[i] = flatArr[offset + i];\n        }\n        return res;\n    }\n\n    static fromAxisAngle(axis: Vec3, angleRad: number) {\n        let res = new Mat3f();\n        fromAxisAngle(axis, angleRad, res, 3);\n        return res;\n    }\n\n    static fromQuat(q: Vec4) {\n        let res = new Mat3f();\n        fromQuat(q, res, 3);\n        return res;\n    }\n\n    static fromScale(s: Vec3) {\n        let res = new Mat4f();\n        res[0] = s.x;\n        res[4] = s.y;\n        res[8] = s.z;\n        return res;\n    }\n\n    determinant(): number {\n        let A = new Float64Array(this);\n        let P = new Int32Array(4);\n        luDecomp(A, P, 3);\n        return luDeterminant(A, P, 3);\n    }\n\n    invert(): Mat3f {\n        let A = new Float64Array(this);\n        let P = new Int32Array(4);\n        luDecomp(A, P, 3);\n        let res = new Mat3f();\n        luInvert(A, P, 3, res);\n        return res;\n    }\n\n    toString(): string {\n        let s = '\\n';\n        for (let i = 0; i < 3; i++) {\n            s += i === 0 ? '[[' : ' [';\n            for (let j = 0; j < 3; j++) {\n                let v = this.g(i, j);\n                s += (v < 0 ? '' : ' ') + v.toFixed(3) + (j === 2 ? ']' : ', ');\n            }\n            s += i === 2 ? ']' : '\\n';\n        }\n        return s;\n    }\n}\n\nfunction fromQuat(q: Vec4, res: Float32Array, stride: number) {\n    let n = q.lenSq();\n    let s = n === 0.0 ? 0.0 : 2.0 / n;\n    let x = q.x;\n    let y = q.y;\n    let z = q.z;\n    let w = q.w;\n\n    let o = 0;\n    res[o+0] = 1 - s*(y*y + z*z);\n    res[o+1] = s*(x*y + w*z);\n    res[o+2] = s*(x*z - w*y);\n\n    o = stride;\n    res[o+0] = s*(x*y - w*z);\n    res[o+1] = 1 - s*(x*x + z*z);\n    res[o+2] = s*(y*z + w*x);\n\n    o = stride * 2;\n    res[o+0] = s*(x*z + w*y);\n    res[o+1] = s*(y*z - w*x);\n    res[o+2] = 1 - s*(x*x + y*y);\n}\n\nfunction fromAxisAngle(axis: Vec3, angleRad: number, res: Float32Array, stride: number) {\n    let u = axis.normalize();\n    let c = Math.cos(angleRad);\n    let s = Math.sin(angleRad)\n    let x = u.x;\n    let y = u.y;\n    let z = u.z;\n    let c2 = 1 - c;\n\n    let o = 0;\n    res[o+0] = x*x*c2 + c;\n    res[o+1] = y*x*c2 + z*s;\n    res[o+2] = z*x*c2 - y*s;\n\n    o = stride;\n    res[o+0] = x*y*c2 - z*s;\n    res[o+1] = y*y*c2 + c;\n    res[o+2] = z*y*c2 + x*s;\n\n    o = stride * 2;\n    res[o+0] = x*z*c2 + y*s;\n    res[o+1] = y*z*c2 - x*s;\n    res[o+2] = z*z*c2 + c;\n}\n\n/** From https://en.wikipedia.org/wiki/LU_decomposition */\n\n// The col-major n x n matrix A is modified in-place, and P should have n + 1 elements\nexport function luDecomp(A: Float64Array, P: Int32Array, n: number) {\n    for (let i = 0; i <= n; i++) {\n        P[i] = i;\n    }\n\n    for (let i = 0; i < n; i++) {\n        let maxA = 0.0;\n        let imax = i;\n\n        for (let k = i; k < n; k++) {\n            let absA = Math.abs(A[k * n + i]);\n            if (absA > maxA) {\n                maxA = absA;\n                imax = k;\n            }\n        }\n\n        if (maxA < 1e-9) {\n            return false;\n        }\n\n        if (imax !== i) {\n            // pivot p\n            let j = P[i];\n            P[i] = P[imax];\n            P[imax] = j;\n\n            // pivot A rows\n            for (let k = 0; k < n; k++) {\n                let j = A[i * n + k];\n                A[i * n + k] = A[imax * n + k];\n                A[imax * n + k] = j;\n            }\n\n            P[n] += 1;\n        }\n\n        for (let j = i + 1; j < n; j++) {\n            A[j * n + i] /= A[i * n + i];\n\n            for (let k = i + 1; k < n; k++) {\n                A[j * n + k] -= A[j * n + i] * A[i * n + k];\n            }\n        }\n    }\n}\n\nexport function luInvert(A: Float64Array, P: Int32Array, n: number, res: Float32Array | Float64Array) {\n    for (let j = 0; j < n; j++) {\n        for (let i = 0; i < n; i++) {\n            res[i * n + j] = P[i] === j ? 1.0 : 0.0;\n\n            for (let k = 0; k < i; k++) {\n                res[i * n + j] -= A[i * n + k] * res[k * n + j];\n            }\n        }\n\n        for (let i = n - 1; i >= 0; i--) {\n            for (let k = i + 1; k < n; k++) {\n                res[i * n + j] -= A[i * n + k] * res[k * n + j];\n            }\n            res[i * n + j] /= A[i * n + i];\n        }\n    }\n}\n\nexport function luDeterminant(A: Float64Array, P: Int32Array, n: number) {\n    let det = A[0];\n\n    for (let i = 1; i < n; i++) {\n        det *= A[i * n + i];\n    }\n\n    if ((P[n] - n) & 1) {\n        return -det;\n    } else {\n        return det;\n    }\n}\n\nexport function luSolve(A: Float64Array, P: Int32Array, n: number, b: Float64Array) {\n    let x = new Float64Array(n);\n    for (let i = 0; i < n; i++) {\n        x[i] = b[P[i]];\n\n        for (let k = 0; k < i; k++) {\n            x[i] -= A[i * n + k] * x[k];\n        }\n    }\n    for (let i = n - 1; i >= 0; i--) {\n        for (let k = i + 1; k < n; k++) {\n            x[i] -= A[i * n + k] * x[k];\n        }\n        x[i] /= A[i * n + i];\n    }\n    return x;\n}\n\nfunction test() {\n    console.log('Testing:', __filename);\n\n    let m1 = Mat4f.fromRowMajor([\n        -0.746, -0.982, -0.835,  0.752,\n        -0.989,  0.813,  0.142, -0.276,\n         0.553, -0.134, -0.457, -0.515,\n        -0.332,  0.305, -0.131,  0.137]);\n\n    let m2 = Mat4f.fromRowMajor([\n        -0.392, -0.049, -0.413, -0.521,\n         0.679, -0.482,  0.703, -0.223,\n         0.014,  0.485,  0.370, -0.187,\n        -0.294, -0.062, -0.203,  0.345]);\n\n    console.log(`m1: ${m1}`);\n    console.log(`m2: ${m2}`);\n    console.log(`m3: ${m1.mul(m2)}`);\n\n    let persp = Mat4f.fromPersp(30, 1.0, 1, 100);\n\n    console.log('persp:', persp);\n    let vals = [\n        new Vec3(1, 1, -1),\n        new Vec3(1, 1, -1.5),\n        new Vec3(1, 1, -10),\n        new Vec3(1, 1, -40),\n        new Vec3(1, 1, -100)];\n\n    for (let v of vals) {\n        let near = 1;\n        let far = 100;\n        let proj = persp.mulVec3Proj(v);\n        let unprojZ = near * far / ((near - far) * proj.z + far);\n        console.log('proj', v, '=>', proj.z, 'and back? =>', unprojZ);\n    }\n\n    let lookAt = Mat4f.fromLookAt(new Vec3(0, 0, 4), new Vec3(0, 0, 0), new Vec3(0, 1, 0));\n    console.log(`lookAt: ${lookAt}`);\n\n    for (let i = 0; i < 1; i++) {\n        let input = new Vec4(Math.random(), Math.random(), Math.random(), Math.random()).normalize();\n        let m = Mat4f.fromQuat(input);\n        let [T, R, S] = m.decomposeToTRS();\n        console.log(` in = ${input}\\nout = ${R}`);\n        console.log(`T = ${T}, S = ${S}`);\n    }\n}\n\nif (__filename === 'asdf') {\n    test();\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useFunctionRef } from \"./hooks\";\n\nexport interface IDragStart<T> {\n    clientX: number;\n    clientY: number;\n    data: T;\n    button: number;\n    buttons: number;\n    shiftKey: boolean;\n    altKey: boolean;\n    metaKey: boolean;\n    ctrlKey: boolean;\n}\n\nexport function useGlobalDrag<T>(\n    handleMove: (ev: MouseEvent, ds: IDragStart<T>, end: boolean) => void,\n    handleClick?: (ev: MouseEvent, ds: IDragStart<T>) => void,\n    handleMoveEnd?: (ev: MouseEvent, ds: IDragStart<T>, end: boolean) => void,\n): [IDragStart<T> | null, (ev: IMouseEvent, data: T) => void] {\n    let [dragStart, setDragStart] = useState<IDragStart<T> | null>(null);\n    let isDragging = useRef(false);\n    let handleMoveRef = useFunctionRef(handleMove);\n    let handleClickRef = useFunctionRef(handleClick);\n    let handleMoveEndRef = useFunctionRef(handleMoveEnd);\n\n    useEffect(() => {\n        if (!dragStart) {\n            isDragging.current = false;\n            return;\n        }\n\n        function dist(ev1: { clientX: number, clientY: number }, ev2: { clientX: number, clientY: number }) {\n            let dx = ev2.clientX - ev1.clientX;\n            let dy = ev2.clientY - ev1.clientY;\n            return dx * dx + dy * dy;\n        }\n\n        function handleMouseMove(ev: MouseEvent) {\n            if (!isDragging.current && (dist(ev, dragStart!) > 10.0 || !handleClickRef.current)) {\n                isDragging.current = true;\n            }\n            if (isDragging.current) {\n                handleMoveRef.current(ev, dragStart!, false);\n            }\n        }\n\n        function handleMouseUp(ev: MouseEvent) {\n            if (isDragging.current || !handleClickRef.current) {\n                handleMoveRef.current(ev, dragStart!, true);\n                handleMoveEndRef.current?.(ev, dragStart!, true);\n            } else {\n                handleClickRef.current?.(ev, dragStart!);\n            }\n            setDragStart(null);\n        }\n\n        document.addEventListener('mousemove', handleMouseMove, { capture: true });\n        document.addEventListener('mouseup', handleMouseUp, { capture: true });\n        return () => {\n            document.removeEventListener('mousemove', handleMouseMove, { capture: true });\n            document.removeEventListener('mouseup', handleMouseUp, { capture: true });\n        };\n    }, [dragStart, handleMoveRef, handleClickRef, handleMoveEndRef]);\n\n    let setDragStartTarget = useCallback((ev: IMouseEvent, data: T) => {\n        setDragStart({\n            clientX: ev.clientX,\n            clientY: ev.clientY,\n            data,\n            button: ev.button,\n            buttons: ev.buttons,\n            shiftKey: ev.shiftKey,\n            altKey: ev.altKey,\n            ctrlKey: ev.ctrlKey,\n            metaKey: ev.metaKey,\n        });\n    }, [setDragStart]);\n\n    return [dragStart, setDragStartTarget];\n}\n\nexport interface IMouseLocation {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface IPointerEvent {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface IMouseEvent extends IPointerEvent {\n    type: string;\n    readonly button: number;\n    readonly buttons: number;\n    readonly shiftKey: boolean;\n    readonly altKey: boolean;\n    readonly ctrlKey: boolean;\n    readonly metaKey: boolean;\n    stopPropagation(): void;\n    preventDefault(): void;\n}\n\nexport interface IWheelEvent extends IMouseEvent {\n    deltaMode: number;\n    deltaY: number;\n}\n\nexport interface IBaseEvent {\n    type: string;\n    stopPropagation(): void;\n    preventDefault(): void;\n}\n\nexport function getWheelDelta(ev: IWheelEvent): number {\n    let mode = ev.deltaMode;\n    let scale = 1.0;\n    if (mode === 0) { // pixel\n        scale = 125;\n    } else if (mode === 1) { // line\n        scale = 3;\n    } else if (mode === 2) { // page\n        scale = 0.1;\n    }\n\n    return ev.deltaY / scale;\n}\n\nexport interface TouchSimple {\n    clientX: number;\n    clientY: number;\n}\n\nexport interface TouchEventStart<T> {\n    data: T;\n    touches: TouchSimple[];\n}\n\nexport interface TouchEventStart1PointDrag<T> extends TouchEventStart<T> {\n    isDragging: boolean;\n}\n\nexport interface ITouchEventOptions {\n    alwaysSendDragEvent?: boolean;\n    sendDragEnd?: boolean;\n}\n\nexport function useTouchEvents<T>(\n    el: GlobalEventHandlers | null,\n    data: T,\n    options: ITouchEventOptions,\n    handle1PointDrag?: (ev: TouchEvent, start: TouchEventStart1PointDrag<T>, end: boolean) => void,\n    handle2PointDrag?: (ev: TouchEvent, start: TouchEventStart<T>) => void,\n    handle1PointClick?: (ev: TouchEvent, start: TouchEventStart<T>) => void,\n) {\n    let alwaysSendDragEvent = options.alwaysSendDragEvent ?? false;\n    let sendDragEnd = options.sendDragEnd ?? false;\n    let initialData = useRef<T>(data);\n    let initialTouches = useRef<TouchSimple[]>();\n    let lastTouch = useRef<{ time: number, velocity: number, touch: TouchSimple } | null>(null);\n    let isDrag = useRef<boolean>(false);\n    let latestData = useRef<T>(data);\n    let lastPressTime = useRef<number>(0);\n    latestData.current = data;\n    let handle1PointDragRef = useFunctionRef(handle1PointDrag);\n    let handle2PointDragRef = useFunctionRef(handle2PointDrag);\n    let handle1PointClickRef = useFunctionRef(handle1PointClick);\n\n    useEffect(() => {\n        if (!el) {\n            return;\n        }\n\n        function sendEvent(ev: TouchEvent) {\n            let initial = {data: initialData.current, touches: initialTouches.current!};\n            if (!ev.touches || !initial.touches || ev.touches.length !== initial.touches.length) {\n                return;\n            }\n\n            if (!isDrag.current) {\n                if (ev.touches.length > 1 || (ev.touches.length === 1 && touchPixelDist(ev.touches[0], initial.touches[0]) >= 10)) {\n                    isDrag.current = true;\n                }\n            }\n\n            if (ev.touches.length === 1 && handle1PointDragRef.current && (alwaysSendDragEvent || isDrag.current)) {\n                handle1PointDragRef.current(ev, { ...initial, isDragging: isDrag.current }, false);\n            }\n            if (ev.touches.length === 2 && handle2PointDragRef.current) {\n                handle2PointDragRef.current(ev, initial);\n            }\n\n            if (ev.touches.length === 1) {\n                lastTouch.current = {\n                    time: 0,\n                    velocity: 0,\n                    touch: copyTouchList(ev.touches)[0],\n                };\n\n            } else {\n                lastTouch.current = null;\n            }\n        }\n\n        function captureInitialAndSend(ev: TouchEvent) {\n            let prevTouches = initialTouches.current;\n            let prevData = initialData.current;\n            initialData.current = latestData.current;\n            initialTouches.current = copyTouchList(ev.touches as any);\n\n            if (!prevTouches || !prevTouches.length) {\n                lastPressTime.current = performance.now();\n            }\n\n            let lastTouchTouch = lastTouch.current?.touch;\n\n            sendEvent(ev);\n\n            if (ev.touches.length === 0) {\n                if (sendDragEnd && handle1PointDragRef.current && lastTouchTouch && (isDrag.current || alwaysSendDragEvent)) {\n                    ev = cloneTouchEvent(ev, { touches: [lastTouchTouch] as any });\n                    handle1PointDragRef.current(ev, { data: prevData, touches: prevTouches!, isDragging: isDrag.current }, true);\n                }\n                if (!isDrag.current && handle1PointClickRef.current && prevTouches?.length === 1) {\n                    handle1PointClickRef.current(ev, {data: prevData, touches: prevTouches!});\n                }\n                isDrag.current = false;\n                lastTouch.current = null;\n            }\n        }\n\n        el.addEventListener('touchstart', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchend', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchcancel', captureInitialAndSend, { passive: false });\n        el.addEventListener('touchmove', sendEvent, { passive: false });\n        return () => {\n            el.removeEventListener('touchstart', captureInitialAndSend);\n            el.removeEventListener('touchend', captureInitialAndSend);\n            el.removeEventListener('touchcancel', captureInitialAndSend);\n            el.removeEventListener('touchmove', sendEvent);\n        };\n    }, [el, handle1PointDragRef, handle2PointDragRef, handle1PointClickRef, alwaysSendDragEvent, sendDragEnd]);\n}\n\nexport function copyTouchList(tl: TouchList) {\n    let res: TouchSimple[] = [];\n    for (let i = 0; i < tl.length; i++) {\n        let touch = tl[i];\n        res.push({ clientX: touch.clientX, clientY: touch.clientY });\n    }\n    return res;\n}\n\nfunction touchPixelDist(a: TouchSimple, b: TouchSimple) {\n    let dx = b.clientX - a.clientX;\n    let dy = b.clientY - a.clientY;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n\nexport function useCombinedMouseTouchDrag<T>(\n    el: GlobalEventHandlers | null,\n    captureDragStart: (ev: IMouseEvent) => T,\n    handleDrag: (ev: IMouseEvent, start: IDragStart<T>, end: boolean) => void,\n    handleClick?: (ev: IMouseEvent, start: IDragStart<T>) => void,\n): [dragStart: IDragStart<T> | null, setDragStart: (ev: IMouseEvent) => void] {\n    let [touchDragStart, setTouchDragStart] = useState<IDragStart<T> | null>(null);\n\n    let captureDragStartRef = useFunctionRef(captureDragStart);\n    function handleMouseDrag(ev: MouseEvent, ds: IDragStart<T>, end: boolean) {\n        handleDrag(ev, ds, end);\n    }\n\n    function handleMouseClick(ev: MouseEvent, ds: IDragStart<T>) {\n        handleClick?.(ev, ds);\n    }\n\n    useTouchEvents(el, 0, { alwaysSendDragEvent: true, sendDragEnd: true }, function handle1PointDrag(ev, ds, end) {\n        let mouseEvent = mouseEventFromEventAndSingleTouch(ev, ev.touches[0]);\n        let dragStart = touchDragStart;\n        if (!dragStart) {\n            let dragStartData = captureDragStart(mouseEvent);\n            dragStart = { ...extractClientPosFromTouch(ds.touches[0]), data: dragStartData };\n            setTouchDragStart(dragStart);\n        }\n\n        if (!ds.isDragging) {\n            return;\n        }\n\n        handleDrag(mouseEvent, dragStart, end);\n\n        if (end) {\n            setTouchDragStart(null);\n        }\n\n    }, undefined, function handle1PointClick(ev, ds) {\n        if (touchDragStart) {\n            handleClick?.(mouseEventFromEventAndSingleTouch(ev, ev.touches[0]), touchDragStart);\n        }\n        setTouchDragStart(null);\n    });\n\n    let [dragStart, setDragStartLocal] = useGlobalDrag<T>(handleMouseDrag, handleClick ? handleMouseClick : undefined);\n\n    let setDragStart = useCallback((ev: IMouseEvent) => {\n        let data = captureDragStartRef.current(ev);\n        setDragStartLocal(ev, data);\n    }, [setDragStartLocal, captureDragStartRef]);\n\n    return [dragStart ?? touchDragStart, setDragStart];\n}\n\nfunction cloneTouchEvent<T extends {}>(ev: TouchEvent, extra: T): TouchEvent & T & { button: -1, buttons: 0 } {\n    return {\n        ...ev,\n        preventDefault: () => ev.preventDefault(),\n        stopPropagation: () => ev.stopPropagation(),\n        ...extra,\n        button: -1,\n        buttons: 0,\n    };\n}\n\nfunction mouseEventFromEventAndSingleTouch(ev: TouchEvent, touch: TouchSimple): TouchEvent & IMouseEvent {\n    return cloneTouchEvent(ev, extractClientPosFromTouch(touch));\n}\n\nfunction extractClientPosFromTouch(touch: TouchSimple) {\n    // creates a mouse event compatible with mouse drags\n    return {\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n        shiftKey: false,\n        altKey: false,\n        ctrlKey: false,\n        metaKey: false,\n        button: -1,\n        buttons: 0,\n     };\n}\n","import { ISharedRender } from \"../llm/render/sharedRender\";\nimport { roundUpTo } from \"./math\";\n\nexport interface IGLContext {\n    gl: WebGL2RenderingContext;\n    shaderManager: IShaderManager;\n    ext: {\n        colorBufferFloat: EXT_color_buffer_float | null;\n        disjointTimerQuery: EXT_disjoint_timer_query_webgl2 | null;\n    },\n}\n\nexport interface EXT_disjoint_timer_query_webgl2 {\n    TIME_ELAPSED_EXT: number;\n}\n\nexport interface IProgram<T extends string = any> {\n    name: string;\n    program: WebGLProgram;\n    vertShader: WebGLShader;\n    fragShader: WebGLShader;\n    vertSource: string;\n    fragSource: string;\n    ready: boolean;\n    locs: Record<T, WebGLUniformLocation>;\n    uboBindings: Record<string, number>;\n}\n\nexport interface IShaderManager {\n    gl: WebGL2RenderingContext;\n    vertShaders: Map<string, WebGLShader>;\n    fragShaders: Map<string, WebGLShader>;\n    programs: IProgram[];\n    unlinkedPrograms: IProgram[];\n}\n\nexport function createShaderManager(gl: WebGL2RenderingContext) {\n    return {\n        gl,\n        vertShaders: new Map(),\n        fragShaders: new Map(),\n        programs: [],\n        unlinkedPrograms: [],\n    };\n}\n\nexport interface IShaderExtras {\n    uboBindings: Record<string, number>;\n}\n\nexport function createShaderProgram<T extends string>(manager: IShaderManager | IGLContext, name: string, vert: string, frag: string, uniformNames?: T[], extra?: IShaderExtras): IProgram<T> | null {\n    if ('shaderManager' in manager) {\n        manager = manager.shaderManager;\n    }\n\n    let gl = manager.gl;\n\n    let program = gl.createProgram()!;\n\n    function compileAndAttachShader(type: number, source: string, typeStr: string, map: Map<string, WebGLShader>) {\n        let shader = map.get(source);\n        if (!shader) {\n            shader = gl.createShader(type)!;\n            gl.shaderSource(shader, source);\n            gl.compileShader(shader);\n            map.set(source, shader);\n        }\n        gl.attachShader(program, shader);\n        return shader;\n    }\n\n    let vertShader = compileAndAttachShader(gl.VERTEX_SHADER, vert, 'vert', manager.vertShaders);\n    let fragShader = compileAndAttachShader(gl.FRAGMENT_SHADER, frag, 'frag', manager.fragShaders);\n\n    let locs = {} as Record<T, WebGLUniformLocation>;\n\n    if (uniformNames) {\n        for (let name of uniformNames) {\n            locs[name] = -1;\n        }\n    }\n\n    let prog: IProgram<T> = {\n        name,\n        program,\n        vertSource: vert,\n        fragSource: frag,\n        vertShader,\n        fragShader,\n        locs,\n        uboBindings: extra?.uboBindings ?? {},\n        ready: false,\n    };\n\n    manager.unlinkedPrograms.push(prog);\n\n    return prog;\n}\n\n\nexport function ensureShadersReady(manager: IShaderManager) {\n    let gl = manager.gl;\n\n    for (let prog of manager.unlinkedPrograms) {\n        gl.linkProgram(prog.program);\n    }\n\n    for (let prog of manager.unlinkedPrograms) {\n        let program = prog.program;\n\n        if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\n            for (let name of Object.keys(prog.locs)) {\n                let loc = gl.getUniformLocation(program, name);\n                if (!loc) {\n                    console.log(`uniform of ${prog.name} not found: ${name} (may just be unused)`);\n                }\n                prog.locs[name] = loc!;\n            }\n            prog.ready = true;\n\n            for (let uboName of Object.keys(prog.uboBindings)) {\n                let uboIndex = gl.getUniformBlockIndex(program, uboName);\n                if (uboIndex < 0) {\n                    console.log(`ubo of ${prog.name} not found: ${uboName} (may just be unused)`);\n                }\n                gl.uniformBlockBinding(program, uboIndex, prog.uboBindings[uboName]);\n            }\n\n        } else {\n\n            let progInfoLog = gl.getProgramInfoLog(program);\n            if (progInfoLog) {\n                let prefix = `---- '${prog.name}' program info log ----`;\n                console.log(`${prefix}\\n` + gl.getProgramInfoLog(program)?.replace('\\x00', '').trimEnd());\n            }\n\n            logShader(prog.vertShader, prog.name, 'vert');\n            logShader(prog.fragShader, prog.name, 'frag');\n        }\n    }\n\n    manager.programs.push(...manager.unlinkedPrograms);\n    manager.unlinkedPrograms = [];\n\n    function logShader(shader: WebGLShader, name: string, typeStr: string) {\n        let infoLog = gl.getShaderInfoLog(shader);\n        if (infoLog) {\n            let prefix = `---- ${name} ${typeStr} shader info log ----`;\n            console.log(`${prefix}\\n` + infoLog.replace('\\x00', '').trimEnd());\n        }\n    }\n}\n\nexport interface IBindOpts {\n    divisor?: number;\n    locOffset?: number;\n    bufOffset?: number;\n}\n\nexport interface IFloatAttrib {\n    name: string;\n    size: number;\n    nCols?: number; // for matrices\n}\n\nexport function bindFloatAttribs(gl: WebGL2RenderingContext, buf: WebGLBuffer, opts: IBindOpts, attribs: IFloatAttrib[]) {\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    let locId = opts.locOffset || 0;\n    let offset = opts.bufOffset || 0;\n    let divisor = opts.divisor || 0;\n    let byteStride = 0;\n    for (let a of attribs) {\n        byteStride += a.size * 4 * (a.nCols ?? 1);\n    }\n    for (let a of attribs) {\n        for (let i = 0; i < (a.nCols ?? 1); i++) {\n            gl.enableVertexAttribArray(locId);\n            gl.vertexAttribPointer(locId, a.size, gl.FLOAT, false, byteStride, offset);\n            gl.vertexAttribDivisor(locId, divisor);\n            offset += a.size * 4;\n            locId++;\n        }\n    }\n    return byteStride;\n}\n\n/*\nWe store multiple buffers client-side, each one can grow independently, and each represents the\ndata drawn in a specific phase.  Then we can upload the data nicely packed.\nWe still have to do multiple draw calls, since each phase is made up of different renderers, but\njust need a single WebGLBuffer with its vertexAttribs etc.\n*/\nexport interface IFloatLocalBuffer {\n    buf: Float32Array;\n    strideFloats: number;\n    strideBytes: number;\n    capacityEls: number; // elements\n    usedEls: number; // elements\n\n    glOffsetEls: number;\n}\n\nexport interface IFloatBuffer {\n    target: number; // gl.ARRAY_BUFFER, gl.UNIFORM_BUFFER, etc\n    localBufs: IFloatLocalBuffer[];\n    buf: WebGLBuffer;\n    strideFloats: number;\n    strideBytes: number;\n\n    glCapacityEls: number; // elements in the gl buffer. May lag capacityEls\n    sharedRender?: ISharedRender;\n}\n\nexport function createFloatBuffer(gl: WebGL2RenderingContext, target: number, buf: WebGLBuffer, capacityEls: number, strideBytes: number, sharedRender: ISharedRender | null): IFloatBuffer {\n    let numPhases = sharedRender?.numPhases || 1;\n    if (target === gl.UNIFORM_BUFFER) {\n        let uboBlockOffsetAlign = Math.max(gl.getParameter(gl.UNIFORM_BUFFER_OFFSET_ALIGNMENT) ?? 0, 64);\n        strideBytes = roundUpTo(strideBytes, uboBlockOffsetAlign);\n    }\n\n    let strideFloats = strideBytes / 4;\n    gl.bindBuffer(target, buf);\n    gl.bufferData(target, capacityEls * strideBytes, gl.DYNAMIC_DRAW);\n\n    let localBufs: IFloatLocalBuffer[] = [];\n    for (let i = 0; i < numPhases; i++) {\n        localBufs.push({\n            buf: new Float32Array(capacityEls * strideFloats),\n            strideFloats,\n            strideBytes,\n            capacityEls,\n            usedEls: 0,\n            glOffsetEls: 0,\n        });\n    }\n\n    return { target, buf, strideFloats, strideBytes, glCapacityEls: capacityEls, localBufs };\n}\n\nexport function ensureFloatBufferSize(localBuf: IFloatLocalBuffer, countEls: number) {\n    let newUsedEls = localBuf.usedEls + countEls;\n\n    if (newUsedEls > localBuf.capacityEls) {\n        while (newUsedEls > localBuf.capacityEls) {\n            localBuf.capacityEls *= 2;\n        }\n\n        let newLocalBuf = new Float32Array(localBuf.capacityEls * localBuf.strideFloats);\n        newLocalBuf.set(localBuf.buf);\n        localBuf.buf = newLocalBuf;\n    }\n}\n\nexport function uploadFloatBuffer(gl: WebGL2RenderingContext, bufMap: IFloatBuffer) {\n    gl.bindBuffer(bufMap.target, bufMap.buf);\n\n    let totalUsed = 0;\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        let localBuf = bufMap.localBufs[i];\n        totalUsed += localBuf.usedEls;\n    }\n\n    if (totalUsed > bufMap.glCapacityEls) {\n        while (totalUsed > bufMap.glCapacityEls) {\n            bufMap.glCapacityEls *= 2;\n        }\n        gl.bufferData(bufMap.target, bufMap.glCapacityEls * bufMap.strideBytes, gl.DYNAMIC_DRAW);\n    }\n\n    let offsetEls = 0;\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        let localBuf = bufMap.localBufs[i];\n        localBuf.glOffsetEls = offsetEls;\n        if (localBuf.usedEls > 0) {\n            gl.bufferSubData(bufMap.target, offsetEls * bufMap.strideBytes, localBuf.buf.subarray(0, localBuf.usedEls * localBuf.strideFloats));\n        }\n        offsetEls += localBuf.usedEls;\n    }\n}\n\nexport function resetFloatBufferMap(bufMap: IFloatBuffer) {\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        bufMap.localBufs[i].usedEls = 0;\n    }\n}\n\nexport interface IELementLocalBuffer {\n    buf: Uint32Array;\n    capacityVerts: number;\n    usedVerts: number\n\n    glOffsetBytes: number;\n}\n\nexport interface IElementBuffer {\n    buf: WebGLBuffer;\n    localBufs: IELementLocalBuffer[];\n    glCapacityVerts: number; // verts in the gl buffer. May lag capacityVerts\n}\n\nexport function createElementBuffer(gl: WebGL2RenderingContext, buf: WebGLBuffer, capacityVerts: number, sharedRender: ISharedRender | null): IElementBuffer {\n    let numPhases = sharedRender?.numPhases || 1;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, capacityVerts * 4, gl.DYNAMIC_DRAW);\n\n    let localBufs: IELementLocalBuffer[] = [];\n    for (let i = 0; i < numPhases; i++) {\n        localBufs.push({\n            buf: new Uint32Array(capacityVerts),\n            capacityVerts,\n            usedVerts: 0,\n            glOffsetBytes: 0,\n        });\n    }\n\n    return { buf, glCapacityVerts: capacityVerts, localBufs };\n}\n\nexport function ensureElementBufferSize(localBuf: IELementLocalBuffer, countVerts: number) {\n    let newUsedVerts = localBuf.usedVerts + countVerts;\n\n    if (newUsedVerts > localBuf.capacityVerts) {\n        let newCapacityVerts = localBuf.capacityVerts * 2;\n        while (newUsedVerts > newCapacityVerts) {\n            newCapacityVerts *= 2;\n        }\n\n        let newLocalBuf = new Uint32Array(newCapacityVerts);\n        newLocalBuf.set(localBuf.buf);\n\n        localBuf.capacityVerts = newCapacityVerts;\n        localBuf.buf = newLocalBuf;\n    }\n}\n\nexport function uploadElementBuffer(gl: WebGL2RenderingContext, bufMap: IElementBuffer) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufMap.buf);\n\n    let totalUsed = 0;\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        let localBuf = bufMap.localBufs[i];\n        totalUsed += localBuf.usedVerts;\n    }\n\n    if (totalUsed > bufMap.glCapacityVerts) {\n        while (totalUsed > bufMap.glCapacityVerts) {\n            bufMap.glCapacityVerts *= 2;\n        }\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, bufMap.glCapacityVerts * 4, gl.DYNAMIC_DRAW);\n    }\n\n    let offsetIndex = 0;\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        let localBuf = bufMap.localBufs[i];\n        localBuf.glOffsetBytes = offsetIndex * 4;\n        let srcBuf = localBuf.buf.subarray(0, localBuf.usedVerts);\n        if (localBuf.usedVerts > 0) {\n            gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, offsetIndex * 4, srcBuf);\n        }\n        offsetIndex += localBuf.usedVerts;\n    }\n}\n\nexport function resetElementBufferMap(bufMap: IElementBuffer) {\n    for (let i = 0; i < bufMap.localBufs.length; i++) {\n        bufMap.localBufs[i].usedVerts = 0;\n    }\n}\n","\n/* Design decisions for Vec3/Vec4\n\nMethods have immutable behavior (rather than in-place) for less error-prone usage, but that naturally\nmeans a drop in perf. Happy with this trade.\nAll methods only have at most 1 new Vec*, even if it means a bit more repetition.\n\nFact-check: false:\n    Inheriting from Array<number> seems to give good structure in V8. In particular, the number array\n    elements (as doubles) are inline in the array, and the initialization with the size means the array\n    is actually that size. It looks like there's an extra pointer hop from this class to get to the\n    actual array data which is not strictly ideal, but better than both Float64Array and 3 pointer hops\n    in the case of { x: number, y: number, z: number } (V8 doesn't do double de-boxing :( ).\n\nProbably due to inhieriting from Array<number>, the constructor is painfully slow, showing up in\nstack traces.\n\nBack to simple objects, on the idea that ones that live on the stack will get jitted away anyway.\n\nV8 shows Vec3 & Vec4 as having an 24 byte overhead, which... isn't toooo bad\n\n*/\n\nimport { clamp } from \"./data\";\n\nexport enum Dim {\n    X = 0,\n    Y = 1,\n    Z = 2,\n}\n\nexport class Vec3 {\n    x: number;\n    y: number;\n    z: number;\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n    }\n\n    add(a: Vec3): Vec3 { return new Vec3(this.x + a.x, this.y + a.y, this.z + a.z); }\n    sub(a: Vec3): Vec3 { return new Vec3(this.x - a.x, this.y - a.y, this.z - a.z); }\n    dot(a: Vec3): number { return this.x * a.x + this.y * a.y + this.z * a.z; }\n    mul(a: number): Vec3 { return new Vec3(this.x * a, this.y * a, this.z * a); }\n    mulAdd(a: Vec3, b: number): Vec3 { return new Vec3(this.x + a.x * b, this.y + a.y * b, this.z + a.z * b); }\n    lenSq(): number { return this.x * this.x + this.y * this.y + this.z * this.z; }\n    distSq(a: Vec3): number {\n        let dx = this.x - a.x;\n        let dy = this.y - a.y;\n        let dz = this.z - a.z;\n        return dx * dx + dy * dy + dz * dz;\n    }\n    len(): number { return Math.sqrt(this.lenSq()); }\n    dist(a: Vec3): number { return Math.sqrt(this.distSq(a)); }\n    normalize(): Vec3 { return this.mul(1.0 / Math.sqrt(this.lenSq())); }\n    mid(a: Vec3): Vec3 { return new Vec3((this.x + a.x) * 0.5, (this.y + a.y) * 0.5, (this.z + a.z) * 0.5); }\n    abs() { return new Vec3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z)); }\n    clone(): Vec3 { return new Vec3(this.x, this.y, this.z); }\n    toVec4(): Vec4 { return new Vec4(this.x, this.y, this.z, 1.0); }\n    round(): Vec3 { return new Vec3(Math.round(this.x), Math.round(this.y), Math.round(this.z)); }\n    round_(): Vec3 { this.x = Math.round(this.x); this.y = Math.round(this.y); this.z = Math.round(this.z); return this; }\n    copy_(a: Vec3) { this.x = a.x; this.y = a.y; this.z = a.z; }\n    static cross(a: Vec3, b: Vec3): Vec3 { return new Vec3(\n        a.y * b.z - a.z * b.y,\n        a.z * b.x - a.x * b.z,\n        a.x * b.y - a.y * b.x); }\n    writeToBuf(buf: Float32Array, offset: number) {\n        buf[offset + 0] = this.x;\n        buf[offset + 1] = this.y;\n        buf[offset + 2] = this.z;\n    }\n    static fromArray(a: ArrayLike<number>, offset: number = 0): Vec3 {\n        return new Vec3(a[offset + 0], a[offset + 1], a[offset + 2]);\n    }\n    setAt(i: number, v: number) {\n        switch (i) {\n        case 0: this.x = v; break;\n        case 1: this.y = v; break;\n        case 2: this.z = v; break;\n        }\n        return this;\n    }\n    addAt(i: number, v: number) {\n        switch (i) {\n        case 0: this.x += v; break;\n        case 1: this.y += v; break;\n        case 2: this.z += v; break;\n        }\n        return this;\n    }\n    getAt(i: number): number {\n        switch (i) {\n        case 0: return this.x;\n        case 1: return this.y;\n        case 2: return this.z;\n        }\n        return 0.0;\n    }\n    withSetAt(i: number, v: number): Vec3 { return this.clone().setAt(i, v); }\n    withAddAt(i: number, v: number): Vec3 { return this.clone().addAt(i, v); }\n    toString(dp: number = 3): string {\n        return `Vec3(${numMaxDp(this.x, dp)}, ${numMaxDp(this.y, dp)}, ${numMaxDp(this.z, dp)})`;\n    }\n    rotateAbout(k: Vec3, thetaRad: number) {\n        // https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n        // k must have unit length\n        let c = Math.cos(thetaRad);\n        let s = Math.sin(thetaRad);\n        let kCrossV = Vec3.cross(k, this);\n        let kDotV = k.dot(this);\n        return this.mul(c).add(kCrossV.mul(s)).add(k.mul(kDotV * (1 - c)));\n    }\n    lerp(a: Vec3, t: number): Vec3 {\n         return new Vec3(\n            a.x * t + this.x * (1 - t),\n            a.y * t + this.y * (1 - t),\n            a.z * t + this.z * (1 - t),\n         );\n    }\n    static zero = new Vec3(0, 0, 0);\n    static one = new Vec3(1, 1, 1);\n}\n\n\nexport class Vec4 {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n    constructor(x: number = 0.0, y: number = 0.0, z: number = 0.0, w: number = 1.0) {\n        this.x = +x;\n        this.y = +y;\n        this.z = +z;\n        this.w = +w;\n    }\n\n    getIdx(i: number): number {\n        switch (i) {\n        case 0: return this.x;\n        case 1: return this.y;\n        case 2: return this.z;\n        case 3: return this.w;\n        default: throw new Error(`Invalid index ${i}`);\n        }\n    }\n    add(a: Vec4): Vec4 { return new Vec4(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w); }\n    sub(a: Vec4): Vec4 { return new Vec4(this.x - a.x, this.y - a.y, this.z - a.z, this.w - a.w); }\n    dot(a: Vec4): number { return this.x*a.x + this.y*a.y + this.z*a.z + this.w+a.w; }\n    mul(a: number): Vec4 { return new Vec4(this.x * a, this.y * a, this.z * a, this.w * a); }\n    lenSq(): number { return this.x*this.x + this.y*this.y + this.z*this.z + this.w*this.w; }\n    distSq(a: Vec4): number {\n        let dx = this.x - a.x;\n        let dy = this.y - a.y;\n        let dz = this.z - a.z;\n        let dw = this.w - a.w;\n        return dx * dx + dy * dy + dz * dz + dw * dw;\n    }\n    len(): number { return Math.sqrt(this.lenSq()); }\n    dist(a: Vec4): number { return Math.sqrt(this.distSq(a)); }\n    normalize(): Vec4 { return this.mul(1.0 / Math.sqrt(this.lenSq())); }\n    projToVec3(): Vec3 { return new Vec3(this.x / this.w, this.y / this.w, this.z / this.w); }\n    static lerp(a: Vec4, b: Vec4, t: number): Vec4 {\n        return a.add(b.sub(a).mul(t));\n    }\n    writeToBuf(buf: Float32Array, offset: number) {\n        buf[offset + 0] = this.x;\n        buf[offset + 1] = this.y;\n        buf[offset + 2] = this.z;\n        buf[offset + 3] = this.w;\n    }\n    static fromArray(a: ArrayLike<number>, offset: number = 0): Vec4 {\n        return new Vec4(a[offset + 0], a[offset + 1], a[offset + 2], a[offset + 3]);\n    }\n    static fromVec3(v: Vec3, w: number = 1.0): Vec4 {\n        return new Vec4(v.x, v.y, v.z, w);\n    }\n    toArray(): ArrayLike<number> {\n        return [this.x, this.y, this.z, this.w];\n    }\n    static fromHexColor(s: string, alpha: number = 1.0): Vec4 {\n        if (s.startsWith('#')) s = s.slice(1);\n        let hexVal = parseInt(s, 16);\n        let x = (hexVal >> 16) & 0xFF;\n        let y = (hexVal >> 8) & 0xFF;\n        let z = hexVal & 0xFF;\n        return new Vec4(x / 255.0 * alpha, y / 255.0 * alpha, z / 255.0 * alpha, alpha);\n    }\n    toHexColor(): string {\n        let toPair = (v: number) => Math.floor(v * 255).toString(16).padStart(2, '0');\n        return `#${toPair(this.x)}${toPair(this.y)}${toPair(this.z)}${toPair(this.w)}`;\n    }\n    toString(): string {\n        return `Vec4(${numMaxDp(this.x)}, ${numMaxDp(this.y)}, ${numMaxDp(this.z)}, ${numMaxDp(this.w)})`;\n    }\n}\n\nfunction numMaxDp(x: number, dp: number = 3) {\n    return parseFloat(x.toFixed(dp)).toString();\n}\n\nexport class BoundingBox3d {\n    public min: Vec3 = new Vec3();\n    public max: Vec3 = new Vec3();\n    public empty: boolean = true;\n\n    constructor(...args: Array<Vec3>) {\n        for (let v of args)\n            this.addInPlace(v);\n    }\n\n    addInPlace(v: Vec3) {\n        if (this.empty) {\n            this.min.x = v.x;\n            this.min.y = v.y;\n            this.min.z = v.z;\n            this.max.x = v.x;\n            this.max.y = v.y;\n            this.max.z = v.z;\n            this.empty = false;\n        } else {\n            this.min.x = Math.min(this.min.x, v.x);\n            this.min.y = Math.min(this.min.y, v.y);\n            this.min.z = Math.min(this.min.z, v.z);\n            this.max.x = Math.max(this.max.x, v.x);\n            this.max.y = Math.max(this.max.y, v.y);\n            this.max.z = Math.max(this.max.z, v.z);\n        }\n        return this;\n    }\n\n    combineInPlace(v: BoundingBox3d) {\n        return v.empty ? this : this.addInPlace(v.min).addInPlace(v.max);\n    }\n\n    center(): Vec3 {\n        let a = this.max;\n        let b = this.min;\n        return new Vec3(\n            a.x + 0.5 * (b.x - a.x),\n            a.y + 0.5 * (b.y - a.y),\n            a.z + 0.5 * (b.z - a.z));\n    }\n\n    size(): Vec3 {\n        return this.max.sub(this.min);\n    }\n\n    contains(p: Vec3) {\n        return !this.empty &&\n            p.x >= this.min.x && p.x <= this.max.x &&\n            p.y >= this.min.y && p.y <= this.max.y &&\n            p.z >= this.min.z && p.z <= this.max.z;\n    }\n\n    intersects(b: BoundingBox3d) {\n        return !this.empty && !b.empty &&\n            this.max.x >= b.min.x && this.min.x <= b.max.x &&\n            this.max.y >= b.min.y && this.min.y <= b.max.y &&\n            this.max.z >= b.min.z && this.min.z <= b.max.z;\n    }\n\n    expandInPlace(border: number) {\n        if (!this.empty) {\n            this.min.x -= border;\n            this.min.y -= border;\n            this.min.z -= border;\n            this.max.x += border;\n            this.max.y += border;\n            this.max.z += border;\n        }\n        return this;\n    }\n\n    shrinkInPlaceXY(inset: number) {\n        if (!this.empty) {\n            this.min.x += inset;\n            this.min.y += inset;\n            this.max.x -= inset;\n            this.max.y -= inset;\n            if (this.min.x > this.max.x || this.min.y > this.max.y) {\n                this.empty = true;\n                this.min = new Vec3();\n                this.max = new Vec3();\n            }\n        }\n        return this;\n    }\n\n    clone(): BoundingBox3d {\n        let b = new BoundingBox3d();\n        b.min = this.min.clone();\n        b.max = this.max.clone();\n        b.empty = this.empty;\n        return b;\n    }\n\n    toString(): string {\n        return `BoundingBox3d(${this.min}, ${this.max})`;\n    }\n}\n\n// static functions that operate on Float32Arrays (or Float64Arrays)\n// all functions are in-place, and read/write from specified offsets\n// safe to use with the same array for both input and output\n\nexport type IArr = Float32Array | Float64Array;\n\nexport class Vec3Buf {\n\n    static add_(a: IArr, aOff: number, b: IArr, bOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0] + b[bOff + 0];\n        out[outOff + 1] = a[aOff + 1] + b[bOff + 1];\n        out[outOff + 2] = a[aOff + 2] + b[bOff + 2];\n    }\n\n    static sub_(a: IArr, aOff: number, b: IArr, bOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0] - b[bOff + 0];\n        out[outOff + 1] = a[aOff + 1] - b[bOff + 1];\n        out[outOff + 2] = a[aOff + 2] - b[bOff + 2];\n    }\n\n    static copy_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0];\n        out[outOff + 1] = a[aOff + 1];\n        out[outOff + 2] = a[aOff + 2];\n    }\n\n    static normalize_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        let x = a[aOff + 0];\n        let y = a[aOff + 1];\n        let z = a[aOff + 2];\n        let lenInv = 1.0 / Math.sqrt(x * x + y * y + z * z);\n        out[outOff + 0] = x * lenInv;\n        out[outOff + 1] = y * lenInv;\n        out[outOff + 2] = z * lenInv;\n    }\n\n    static len_(a: Float32Array, aOff: number): number {\n        let x = a[aOff + 0];\n        let y = a[aOff + 1];\n        let z = a[aOff + 2];\n        return Math.sqrt(x * x + y * y + z * z);\n    }\n}\n\nexport class Vec4Buf {\n    static copy_(a: IArr, aOff: number, out: IArr, outOff: number) {\n        out[outOff + 0] = a[aOff + 0];\n        out[outOff + 1] = a[aOff + 1];\n        out[outOff + 2] = a[aOff + 2];\n        out[outOff + 3] = a[aOff + 3];\n    }\n}\n\nexport function segmentNearestPoint(p0: Vec3, p1: Vec3, x: Vec3) {\n    let v = p1.sub(p0);\n    let w = x.sub(p0);\n    let t = clamp(w.dot(v) / v.dot(v), 0, 1);\n    return p0.mulAdd(v, t);\n}\n\nexport function segmentNearestT(p0: Vec3, p1: Vec3, x: Vec3) {\n    let v = p1.sub(p0);\n    let w = x.sub(p0);\n    return clamp(w.dot(v) / v.dot(v), 0, 1);\n}\n\n// project x onto v\nexport function projectOntoVector(x: Vec3, v: Vec3) {\n    return v.mul(x.dot(v) / v.dot(v));\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Commentary_title__9oCTc\",\"tocBackground\":\"Commentary_tocBackground__oThfn\",\"walkthroughViewport\":\"Commentary_walkthroughViewport__cj_wY\",\"walkthroughText\":\"Commentary_walkthroughText__grBzj\",\"walkthroughParas\":\"Commentary_walkthroughParas__iceMD\",\"chapterControls\":\"Commentary_chapterControls__08VdM\",\"chapterTitle\":\"Commentary_chapterTitle__ejBeS\",\"controls\":\"Commentary_controls__odOrv\",\"btn\":\"Commentary_btn__qpOgN\",\"prevNextBtn\":\"Commentary_prevNextBtn__uw7Ei\",\"commentaryBreak\":\"Commentary_commentaryBreak__s9i5H\",\"playPause\":\"Commentary_playPause__NctlD\",\"jump\":\"Commentary_jump__uT7ow\",\"dividerLine\":\"Commentary_dividerLine__XTLaK\",\"activeRange\":\"Commentary_activeRange__0ny0d\",\"beadOfLight\":\"Commentary_beadOfLight__9Cwgu\",\"sectionHighlightWrap\":\"Commentary_sectionHighlightWrap__2QQKY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"view\":\"LayerView_view__Tjb_T\",\"sidebar\":\"LayerView_sidebar__rYQhV\",\"canvasWrap\":\"LayerView_canvasWrap__Nz_uj\",\"canvas\":\"LayerView_canvas__UYk4I\",\"canvasEventSurface\":\"LayerView_canvasEventSurface__1KPkQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelineBase\":\"PhaseTimeline_timelineBase__i4V5a\",\"timelineLine\":\"PhaseTimeline_timelineLine__2OIT9\",\"timelineCaret\":\"PhaseTimeline_timelineCaret___TlTl\",\"timelineCaretHit\":\"PhaseTimeline_timelineCaretHit__W86E2\",\"timelineEvt\":\"PhaseTimeline_timelineEvt__KNUJx\",\"timelineEvtStart\":\"PhaseTimeline_timelineEvtStart__kD_4g\",\"timelineEvtEnd\":\"PhaseTimeline_timelineEvtEnd__AitmT\",\"timelineBaseHoriz\":\"PhaseTimeline_timelineBaseHoriz__jvRf8\",\"timelineLineHoriz\":\"PhaseTimeline_timelineLineHoriz__YXMM6\",\"timelineCaretHoriz\":\"PhaseTimeline_timelineCaretHoriz__D8clA\",\"timelineCaretHitHoriz\":\"PhaseTimeline_timelineCaretHitHoriz__8EXt8\",\"timelineEvtHoriz\":\"PhaseTimeline_timelineEvtHoriz__eHPvT\",\"timelineEvtStartHoriz\":\"PhaseTimeline_timelineEvtStartHoriz__ThdRv\",\"timelineEvtEndHoriz\":\"PhaseTimeline_timelineEvtEndHoriz__D0yl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"split\":\"Sidebar_split___9RZf\",\"walkthrough\":\"Sidebar_walkthrough__Gkr1T\",\"timelineLeft\":\"Sidebar_timelineLeft__e8aE_\",\"content\":\"Sidebar_content__M6iat\",\"phaseGroupTitle\":\"Sidebar_phaseGroupTitle__Li2MO\",\"phase\":\"Sidebar_phase__6CZQs\",\"active\":\"Sidebar_active__5aKCi\",\"phaseTitle\":\"Sidebar_phaseTitle__r6mbd\",\"topSplit\":\"Sidebar_topSplit__cAaab\",\"camStats\":\"Sidebar_camStats__l3zK5\",\"title\":\"Sidebar_title__hqVHx\",\"toc\":\"Sidebar_toc__ncbvo\",\"helpers\":\"Sidebar_helpers__EJodm\",\"popup\":\"Sidebar_popup__V9b4I\",\"mainMenu\":\"Sidebar_mainMenu__jd7I1\",\"menu\":\"Sidebar_menu__z2UJk\",\"menuTopBar\":\"Sidebar_menuTopBar__PPm6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindow\":\"WelcomePopup_modalWindow__3eNZb\",\"modalWindowBackdrop\":\"WelcomePopup_modalWindowBackdrop__gSWbu\",\"opacityFadeIn\":\"WelcomePopup_opacityFadeIn__hLBQy\",\"header\":\"WelcomePopup_header__WCDcc\",\"body\":\"WelcomePopup_body__U1IBd\",\"image\":\"WelcomePopup_image__zzf1U\",\"text\":\"WelcomePopup_text__jnyN5\",\"footer\":\"WelcomePopup_footer__AG95A\",\"infoBtn\":\"WelcomePopup_infoBtn__SAr9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tocDiagram\":\"TocDiagram_tocDiagram__eJiui\",\"toc\":\"TocDiagram_toc__yJlTr\",\"tocTitle\":\"TocDiagram_tocTitle__H3jtZ\",\"tocGroupTitle\":\"TocDiagram_tocGroupTitle__EzX1I\",\"menuEntry\":\"TocDiagram_menuEntry__xVQYF\",\"active\":\"TocDiagram_active__FzTAa\",\"hover\":\"TocDiagram_hover__52Xwi\",\"dataPath\":\"TocDiagram_dataPath__UCjX8\",\"gap\":\"TocDiagram_gap__VTpn2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrap\":\"Walkthrough_tableWrap__zEbW3\",\"table\":\"Walkthrough_table__zkmDL\",\"tokString\":\"Walkthrough_tokString__YKnMY\",\"tokIndex\":\"Walkthrough_tokIndex__lJuNg\",\"cellInfoCols\":\"Walkthrough_cellInfoCols__GkQL9\",\"cellInfoCol\":\"Walkthrough_cellInfoCol__ESJaY\",\"cellInfoText\":\"Walkthrough_cellInfoText__wEYEf\",\"cellArrayHoriz\":\"Walkthrough_cellArrayHoriz__rFO1E\",\"cellRect\":\"Walkthrough_cellRect__3Oc7J\",\"cellCircle\":\"Walkthrough_cellCircle__4IZwo\",\"graph\":\"Walkthrough_graph__klTBM\",\"graphCol\":\"Walkthrough_graphCol__36PIM\",\"graphBar\":\"Walkthrough_graphBar__X15Rd\",\"graphBarLabel\":\"Walkthrough_graphBarLabel__mMc6E\",\"graphBarHit\":\"Walkthrough_graphBarHit___0SS5\",\"axisZero\":\"Walkthrough_axisZero__uHUMa\",\"externalLink\":\"Walkthrough_externalLink__8Y7Rh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Portal_popup__YM1hF\",\"popupBackdrop\":\"Portal_popupBackdrop___vhK5\",\"popup-backdrop-fadein\":\"Portal_popup-backdrop-fadein__7OqfR\",\"fullscreenOverlay\":\"Portal_fullscreenOverlay__G53p6\",\"modalWindowBackdrop\":\"Portal_modalWindowBackdrop__CaLY_\",\"modalWindow\":\"Portal_modalWindow__h65zy\"};"],"names":["Promise","resolve","then","__webpack_require__","bind","t","TextAlignVert","TextAlignHoriz","blockDimension","state","layout","blk","dim","style","render","vecId","dimConsts","cx","dimProps","offVecId","text","dimStyleText","DimStyle","None","start","cellPosition","end","cell","mid","midPos","Dim","X","Vec3","y","dz","z","x","mul","scale","camScaleToScreen","fontSize","Math","min","tw","measureTextWidth","modelFontBuf","textPad","Y","th","botPad","edgeH2","color","dimStyleColor","textPos","dy","setAt","withAddAt","textYOff","tooSmall","mtx","Mat4f","fromTranslation","textDx","textDy","writeTextToBuffer","lX","lY","lZ","thickness","n","base","vStart","withSetAt","vEnd","vMid1","vMid2","addLine","lineRender","blockIndex","idx","cellOffset","round","toFixed","cellL","floor","cellR","ceil","pos","lerp","lerpSmoothstep","dimConstX","xName","dxName","cxName","offXName","sizeXName","dimConstY","dimConstZ","dx","rangeOffsets","rangeOffsetsX","offX","sizeX","cy","rangeOffsetsY","offY","sizeY","Z","cz","rangeOffsetsZ","offZ","sizeZ","duplicateGrid","newBlk","access","undefined","name","cubes","push","splitGridForHighlight","xSplit","subs","s","res","splitGrid","splitAmt","midBlock","blocks","colX","addSubBlockLocal","iStart","iEnd","xOffset","addSubBlock","subBlock","rangeOffset","fract","addMidBlockBefore","addMidBlockAfter","offset","length","fromScaleTranslation","localMtx","splitGridAll","nCells","i","renderIndexes","count","data","mix","fontBuf","Float32Array","em","yLower","strParts","textOffset","a","w","space","max","val","leftPos","mtxRes","totalOffset","drawColor","mixes","Vec4","color2","tx","bx","top","delta","bot","thick","indexMappingLines","blkSrc","blkDest","srcPad","destPad","srcIdx","destIdx","lineFract","midY","srcX","destX","findSubBlocks","idxLow","idxHi","offsets","subBlocks","startIdx","endIdx","isNil","drawTextOnModel","cfg","align","Left","valign","Top","size","face","Center","Right","Middle","h","Bottom","addSourceDestCurveLine","srcBlk","destBlk","srcY","srcZ","destY","destZ","srcPos","destPos","add","cVec","cross","sub","normalize","circleCenter","radius","dist","theta","asin","rotateVec","prevP","p1","rotateAbout","cameraToMatrixView","camera","angle","camZoom","angleX","PI","angleY","camLookat","center","camPos","cos","sin","lookAt","fromLookAt","genModelViewMatrices","modelOffset","zero","bb","BoundingBox3d","c","tl","br","addInPlace","len","viewMtx","persp","fromPersp","modelMtx","camPosModel","invert","mulVec3Affine","lookAtMtx","modelPt","camDist","updateCamera","view","transition","desiredCameraTransition","clamp","dt","src","initialPos","dest","targetPos","markDirty","desiredCamera","jumpToPhase","wt","phaseId","time","phase","running","jumpPhase","phaseDelta","group","phaseToGroup","groupIdx","phaseList","indexOf","newPhaseGroupIdx","phaseGroupIdx","phases","findIndex","p","id","newGroup","console","log","concat","Phase","Commentary","progState","useProgramState","parasEl","setParasEl","React","walkthrough","handleContinueClick","phaseLength","handlePhaseDeltaClick","numTimes","times","nodes","useMemo","prevIsTime","isCommentary","commentary","isBreak","eventEndTime","lastNode","prevBreak","nextBreak","lastBreak","node","guideLayout","setGuideLayout","useState","width","height","parentHeight","childRanges","useLayoutEffect","observer","ResizeObserver","children","parasBcr","getBoundingClientRect","ranges","child","nid","parseInt","getAttribute","cStart","cEnd","childBcr","bottom","nodeId","startT","endT","parentElement","observe","disconnect","rangeInfo","currPos","range","startPos","endPos","findChild","find","useEffect","scrollTop","prevPhase","useRef","upToDate","commentaryList","current","scrollTo","behavior","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","div","className","jsx","button","clsx","onClick","FontAwesomeIcon","icon","faChevronLeft","title","faChevronRight","tabIndex","onKeyDownCapture","ev","key","preventDefault","TocDiagram","activePhase","ref","map","displayFactor","duration","opacity","blur","filter","data-nid","genCommentary","keyId","paraKeyId","paraItems","pushParagraph","strings","strRaw","trim","paras","split","j","strPart","markupSimple","values","isValidElement","insertInline","insert","fnVal","el","toHexColor","content","str","DimensionText","BlockText","span","active","inRange","showLine","faArrowDown","faPause","faPlay","PhaseTimelineHoriz","SectionHighlight","SpaceToContinueHint","speed","inputStr","italicLocs","prevC","match","nodesFlat","addNodes","locs","treeBase","insertIntoTree","treeNode","currStart","directNewChildren","sort","b","buildReactDom","pad","segStart","segEnd","slice","param","transform","tick","setTick","useRequestAnimationFrame","svgW","rectPad","svgH","y1","strokeWidth","left","svg","viewBox","rect","x1","fill","stroke","rx","ry","BlkSpecial","BlKDepSpecial","getBlkDimensions","setBlkPosition","index","xOff","genGptModelLayout","shape","lmHeadWeight","logits","logitsAgg1","logitsAgg2","logitsSoftmax","gptGpuModel","B","T","C","vocabSize","nHeads","A","nBlocks","isLargeModel","margin","mk","args","makeBlkDeps","xDef","xL","xR","xM","reduce","yDef","zF","zB","zM","JSON","stringify","ensure4","dimX","dimY","channel","mat","fromColMajor","deps","depStr","srcIdxMtx","parseDepIdxStr","zeros","destI","depIdxVars","dot","dotLen","special","lowerTri","hidden","highlight","small","transpose","mkLabel","init","visible","idxObj","inputTokens","leftX","rightX","tokEmbedObj","vocabEmbed","weight","n_vocab","posEmbedObj","posEmbed","residual0","output","InputEmbed","embedLabel","createLn","target","lnLeftX","resLeftX","lnAgg1","normAgg","LayerNormMu","lnAgg2","LayerNormSigma","lnSigma","normWeight","lnMu","normBias","lnResid","LayerNorm","blockHalfMargin","columnWidth","blockIdxInColumn","blockYTop","blockSrc","block","createLayer","ln1","ln_1","interHeadMargin","qkvMargin","headWidth","attn1Y","vOutY","attn2Y","attnLeftX","qkvValLeftX","qkvBiasLeftX","attnTarget","attn","heads","headZMid","qMid","vMid","qWeightBlock","qkvWeight","kWeightBlock","vWeightBlock","qkvWeightBlock","qBiasBlock","qkvBias","kBiasBlock","vBiasBlock","qBlock","qkvOutput","kBlock","vBlock","qkvBlock","attn2LeftX","attnMtx","attnMatrix","Attention","attnMtxAgg1","attnMatrixSoftmax","SoftmaxAggExp","attnMtxAgg2","SoftmaxAggMax","attnMtxSm","Softmax","vOutBlock","scaledVectors","headCubes","headLabel","qLabel","kLabel","vLabel","biasLabel","mtxLabel","vectorLabel","head","labels","vOutCombined","vFinalZ","stepPerHeadY","projWeight","proj","projBias","bias","attnOut","attnResidual","ln2","ln_2","mlpFcWeight","mlp","fcLayer","C4","mlpFcBias","mlpFc","mlpAct","mlpGelu","Gelu","mlpProjWeight","projLayer","mlpProjBias","mlpResult","mlpResidual","blockCubes","flatMap","projCubes","transformerLabel","selfAttendLabel","projLabel","mlpLabel","ln_f","lm_head","softmaxFinal","agg","weightCount","logitsTransposed","model","extraSources","inputBuf","tokEmbedOut","posEmbedOut","runMouseHitTesting","mouse","canvasSize","ndcX","mousePos","ndcY","viewMtxInv","modelMtxInv","clipToWorld","v","v2","mulVec4","v3","projToVec3","clipSpaceA","clipSpaceB","worldA","dir","worldB","visibleCubes","addCube","mainCube","minT","minCube","main","rayAABBIntersect","rayOrigin","rayDir","tx1","tx2","tmin","tmax","ty1","ty2","tz1","tz2","pt","pt2","pt3","mulVec3Proj","ptIdx","label","display","hoverTarget","subCube","mainIdx","highlightCellUnderMouse","mainBlk","iterVisibleSubCubes","ptLocalIdx","midX","midZ","drawDependences","drawDataFlow","isNotNil","blkIdxHover","dimHover","blks","dimHighlightBlocks","cb","getDepSrcIdx","dep","hasXDot","g","hasYDot","srcIdx4","fromVec3","dotDim","otherDim","isDot","getDepDotLen","triLimit","d","getAt","drawDep","tokenIdx","getBlockValueAtIdx","parts","GlFormat","GlInternalFormat","GlType","BlockPos","CornerMode","TensorType","MovementAction","nonNil","value","createRenderPhase","gl","program","names","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","texture","drawBuffers","_","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","destBuffers","srcBuffers","uniformNames","uniformsSet","createBufferTex","channels","createTexture","bindTexture","format","iformat","channelsToFormat","texImage2D","FLOAT","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","writeToBufferTex","buffer","texSubImage2D","RED","R32F","RG","RG32F","RGB","RGB32F","RGBA","RGBA32F","UNSIGNED_BYTE","basicVertexShader","createLayerNorm","layerBuilder","layerPrefix","input","shaderManager","tWeight","tBias","toFloat32Array","normAggProg","createShaderProgram","normEps","normApply","aggPhase","applyPhase","createLinearLayer","prefix","nIn","nOut","residual","linearWeight","linearBias","linearPhase","createEmbeddingLayer","nEmbed","nDims","createAddLayer","inputA","inputB","addPhase","Random","randint","random","constructor","seed","seeder","normal","sqrt","xmur3","imul","charCodeAt","randomGen","toString","TensorF32","existingSize","join","isContiguous","stride","temp","temp2","permute","_len","arguments","axes","_key","setItems","Set","forEach","delete","indexToOffset","indexIterator","contiguous","array","set","fromJson","obj","dtype","error","buf","base64ToArrayBuffer","copyFrom","source","totalEls","strideContiguous","_cacheRes","Bot","_bezierLineBuf","drawArrow","drawHead","drawCorner","endDir","headDepth","headExtra","side","opts","borderColor","ribbonColor","lineThick","mulVec3ProjVec","abs","drawBezierRibbon","p0","p2","p3","mulAdd","steps","bezierCurveBuild","threshold","resOff","queue","writeToBuf","pop","q0","q1","q2","r0","r1","s0","d03","d31","d32","d2a","d2b","lenSq","newRes","nPts","headNPts","nFloats","arrowLine","subarray","drawArrowSeg","arrowEndIdx","arrowStartIdx","k","endA","lineOpts","makeLineOpts","drawLineSegs","drawArrowCorner","mode","_cornerPivot","_cornerCurrP","_cornerPrevP","addVert","triRender","_cornerN","tmp","addPrimitiveRestart","_headTl","copy_","_headTr","_headBr","_headLeft","_headRight","_headTip","_headN","_segTl","_segBr","addQuad","drawSectionLabel","fontScale","lineColor","inward","initBlockRender","ctx","blockUboText","blockAccessUboText","blockUbo","createFloatBuffer","UNIFORM_BUFFER","createBuffer","blockAccessUbo","cubeGeom","genCubeGeom","faceVerts","faces","fromAxisAngle","fromScale","arr","faceMtx","vao","createVertexArray","bindVertexArray","vbo","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","bindFloatAttribs","type","TRIANGLES","numVerts","instancedVao","instancedVbo","instancedStrideBytes","locOffset","divisor","instancedFloatBuf","dummyTexture","createVertShader","instanced","modelViewUboText","createFragShader","Uint8Array","shader","uboBindings","UboBindings","ModelView","Block","BlockAccess","instancedShader","simpleShader","instancedDataStale","instancedNumBlocks","loadNativeBindings","resp","fetch","lineStr","memory","WebAssembly","Memory","initial","maximum","importObject","env","odin_env","write","fd","ptr","mem","lines","TextDecoder","decode","time_now","BigInt","Date","now","odin_dom","init_event_raw","wasmModule","instantiateStreaming","exports","instance","init_allocator","__heap_base","NativeFunctions","createModel","config","wasm_create_model","block_size","n_embd","n_layer","n_head","vocab_size","runModel","wasm_run_model","getModelTensor","tensor","wasm_get_model_tensor","checkViews","bufNElem","int32View","ndimsSize","dataPtr","ptrView","shapeArrPtr","strideArrPtr","Int32Array","viewBuf","Uint32Array","module","builder","createBufferTex2","createEmbedLayer","cIn","cOut","createLayerNormLayer","syncWasmDataWithJsAndGpu","wasmModel","jsModel","needsSync","weightsDirty","intersDirty","lastMemoryBuffer","native","readLocalBuffersFromWasm","writeIntersToGpu","writeWeightsToGpu","readFromWasmToBufferTex","Wte","Wpe","InputTokens","Ln1Gamma","Ln1Beta","Ln1Agg","Ln1Norm","AttnQkvW","AttnQkvB","AttnQkv","Attn","AttnSmAgg","attnMatrixAgg","AttnSm","AttnVOut","AttnProjW","AttnProjB","AttnProj","AttnResidual","Ln2Gamma","Ln2Beta","Ln2Agg","Ln2Norm","MlpW","MlpB","MlpProjW","MlpProjB","MlpMlp","MlpAct","MlpProj","MlpResidual","addLayer","LnFGamma","LnFBeta","LnFAgg","LnFNorm","LmHeadW","Logits","LogitsSmAgg","LogitsSm","resultBuf","localBuffer","sortedBuf","options","tex","isWeight","modelPtr","readToBufferTex","texSize","InputTokenEmbed","CanvasEventSurface","eventSurfaceEl","setEventSurfaceEl","updateRenderState","useCallback","fn","pan","camAngle","camTarget","clone","sideMul","ps","rotate","dragStart","setDragStart","useGlobalDrag","ds","clientX","clientY","shiftKey","useTouchEvents","alwaysSendDragEvent","dsTouch0","touches","evTouch0","dsTouch1","evTouch1","dsMidX","dsMidY","evMidX","evMidY","dsDist","evDist","jsx_runtime","onMouseDown","onMouseMove","canvasBcr","canvasEl","onWheel","zoom","pow","deltaY","rs","stopPropagation","onContextMenu","cursor","Up","Down","Focus","In","Out","Expand","Resizer","vertical","defaultFraction","parentEl","setParentEl","sliderHitEl","setSliderHitEl","childrenArr","toArray","firstChild","scndChild","fraction","setFraction","useCombinedMouseTouchDrag","parentBcr","deltaPx","fullSizePx","pct","invPct","hasBothChildren","flexBasis","ModelSelectorToolbar","makeButton","egIndex","example","examples","mainExample","isEnabled","enabled","isActive","currExampleId","faExpand","modelTarget","faMagnifyingGlass","fetchTensorData","url","json","LayerView","setCanvasEl","dataAndModel","setDataAndModel","canvasRender","setCanvasRender","fontAtlasData","setFontAtlasData","useScreenLayout","setLayout","isDesktop","isPhone","mediaQuery","window","matchMedia","handleResize","innerWidth","innerHeight","matches","addEventListener","removeEventListener","keyboardManager","useContext","KeyboardManagerContext","useGlobalKeyboard","KeyboardOrder","MainPage","toLowerCase","mvmt","movement","action","document","handleKey","stale","getData","dataP","modelP","nativeBindingsP","all","fetchFontAtlasData","canvasRenderLocal","CanvasRender","resizeObserver","canvasSizeDirty","handleWheel","passive","destroy","setData","pageLayout","sidebar","ProgramStateContext","Provider","WalkthroughSidebar","mainView","canvas","stopped","canvasData","renderState","createGptModel","posArr","createBlockLayer","createAttnLayer","tAttnWeight","tAttnBias","qkvProg","selfAttendProg","attnMatrixAggProg","attnMatrixSoftmaxProg","scaledVectorsProg","qkvPhase","selfAttendPhase","attnMatrixAggPhase","attnMatrixSoftmaxPhase","scaledVectorsPhase","createMLP","geluProg","geluPhase","createSoftmaxLayer","softmaxAggProg","softmaxProg","softmaxPhase","bufs","progs","copyOutputToInput","createCopyOutputToInputLayer","prevOutput","currInput","copyPhase","ensureShadersReady","inputLen","readbackSync","wasmGptModel","constructModel","nativeModel","copyWeightBias","weightType","biasType","sw","performance","jsGptModel","makeArray","createMlpLayer","createAttentionLayer","checkSyncObjects","objs","syncObjects","anyToRemove","isReady","syncStatus","clientWaitSync","sync","TIMEOUT_EXPIRED","isWaitingForSync","elapsedMs","startTime","deleteSync","o","bcr","devicePixelRatio","runProgram","timer0","resetLineRender","resetFontBuffers","resetTriRender","sharedRender","RenderPhase","Opaque","tokenColors","tokenIdxColors","stepModel","stepWasmModel","tIdx","inputTokensTensor","topSortedIdx","queryRes","beginQueryAndGetPrevMs","manager","ext","disjointTimerQuery","existing","queries","get","query","createQuery","hasRun","hasStarted","resultAvailable","getQueryParameter","QUERY_RESULT_AVAILABLE","resultMs","timeElapsed","QUERY_RESULT","beginQuery","TIME_ELAPSED_EXT","queryManager","lastGpuMs","renderTiming","inWalkthrough","runWalkthrough","drawBlockInfo","blkTopMid","textColor","bgColor","textOpts","textW","measureText","drawRoundedRect","Overlay","drawText","drawAllArrows","prevResid","weightColor","fromHexColor","dataColor","drawVertArrow","drawHorizArrow","drawArrowBetween","drawArrowResidSplit","drawArrowBotToSide","blkColor","blockPos","residWidth","forceOffset","mid0","mid1","drawModelCard","modelCardOffset","drawBlockLabels","baseColor","transformerIdx","blockTop","blockBottom","mlpLeft","headLeft","attnLabelLeft","attnLeft","attnProjTop","attnProjBot","mlpTop","blockLeft","headIdx","lineNo","line","Overlay2D","renderModel","blockRender","lightPos","lightColor","lightPosArr","lightColorArr","viewport","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","CULL_FACE","cullFace","FRONT","frontFace","CW","lastJsMs","writeModelViewUbo","blurW","blurH","blurBlocks","setupBlurTarget","blurFactor","currViewSize","initialTex","blurFbos","initialFbo","blurRender","renderBlocksSimple","ready","geom","cube","useProgram","uniform3f","u_size","u_offset","uniform4f","u_baseColor","drawArrays","quadVao","disable","STENCIL_TEST","activeTexture","TEXTURE0","horizShader","uniform1i","u_texture","TRIANGLE_FAN","vertShader","TEXTURE1","overlayShader","uploadAllLines","uploadAllTris","uploadAllText","renderAllBlocks","u_camPos","u_accessSampler","transparentCubes","allCubes","firstTransparent","localBufs","resetFloatBufferMap","ensureFloatBufferSize","blockBuf","baseOff","usedEls","strideFloats","Colors","Weights","Intermediates","Aggregates","uploadFloatBuffer","prevHasAccess","depthMask","bindBufferRange","strideBytes","hasAccess","modelMtxLocal","renderAllBlocksInstanced","vboBuf","drawArraysInstanced","renderAllThreads","threadRender","polygonOffset","Arrows","fromOrtho","POLYGON_OFFSET_FILL","renderAllTris","renderAllText","renderAllLines","endQuery","flush","htmlSubs","notify","modelState","prevTime","rafHandle","isDirty","requestAnimationFrame","loop","_this_progState_render","_this_progState_render1","_this_progState_render_syncObjects_length","_this_progState_render_syncObjects_length1","wasDirty","prevSyncCount","initProgramState","prevState","initRender","getContext","antialias","colorBufferFloat","getExtension","createShaderManager","quadVbo","enableVertexAttribArray","vertexAttribPointer","initSharedRender","fontAtlas","setupFontAtlas","createFontBuffers","initThreadRender","createLineRender","initTriRender","initBlurRender","createBlurFbo","LINEAR","blurWeights","blurWeightsSum","radiusPx","exp","wIdx","blurUbo","createBlurShader","blurPixelStride","bindBufferBase","Map","initWalkthrough","SavedState","makeCamera","Subscriptions","actionHover","depth","cameraLerp","tokenOutputColors","PhaseTimeline","baseEl","setBaseEl","caretHitEl","setCaretHitEl","refresh","useReducer","totalTime","toFract","clientHeight","timeOffset","inZone","clientWidth","setBaseDragStart","xPos","menuVisible","setMenuVisible","menuButtonEl","setMenuButtonEl","groupId","createContext","context","useSubscriptions","PopupPos","Portal","portalEl","setPortalEl","getElementById","createPortal","FullscreenOverlay","currentTarget","ModalWindow","backdropClassName","onBackdropClick","TopLeft","BottomLeft","hydrateWelcomePopupLS","WelcomePopup","WelcomeContext","subscriptions","welcomeState","setWelcomeState","useLocalStorageState","hydrateFromLS","setValue","readFromLocalStorage","ls","localStorage","getItem","parse","e","setItem","removeItem","hide","assignImm","Modal","forceVisible","flex","onEnterPhase","showWelcomeDialog","InfoButton","faCircleQuestion","setHover","isHover","textShadow","onMouseEnter","onMouseLeave","blkArr","Array","isArray","firstBlk","dimStyle","hoverIdxs","includes","pinIdx","cellPos","resMtx","dataFlowArgs","screenPos","round_","drawZeroSymbol","drawMaths","mkTextBlock","opColor","drawOLInputEmbed","nameColor","TextBlockType","Custom","draw","drawOLIndexLookup","tokenPct","heightPct","drawLineRect","backWhiteColor","colTl","colBr","cellTl","cellBr","lineEndX","colW","lineEndY","lineStartX","pts","drawCells","drawOLPosEmbedLookup","posPct","drawLayerNorm","Divide","cellX","cellY","workingSrcColor","Line","rectOpts","dash","Sqrt","weightSrcColor","drawLayerNormMuAgg","drawLayerNormSigmaAgg","drawSoftmaxAggMax","drawSoftmaxAggExp","fontOpts","drawSoftmax","drawAttention","dotA","dotB","cellSizeAndColor","isRow","drawGeluActivation","geluX","tanh","mappingX","createMapping","mappingY","halfH","axisLineOpts","addLine2","curveLineOpts","srcVal","destVal","drawCircle","nPoints","closed","drawOLMatrixMul","hasAdd","drawResidualAdd","empty","cellIdxBb","drawCellIndexAndValue","mapDimToSub","posValue","dimStyleTextShort","xDim","yDim","textBlock","sizeBlock","layoutBlock","padX","padY","drawBlock","fullBB","drawDepArrows","drawDepArrow","srcT","reverse","projectToScreen","tVals","actualTarget","drawArc","bisect","endAngle","atan2","startAngle","tangent","dirA","dirB","modelPos","ndc","blkIdx","bufferTex","bufferPos","channelIdx","innerQuadTl","innerQuadBr","cIdx","pivot","startTheta","nRadiusVerts","bottomMiddle","textBlk","getPad","range0","range1","domain0","domain1","m","backgroundColor","titleColor","paramOff","allNums","titleW","nParamsText","weightCountText","numberToCommaSep","out","weightTitleW","weightCountW","titleFontScale","weightX","paramFontScale","weightSize","renderOutputAtBottom","softmax","topMid","outCellW","renderOutputBoxes","boldLast","tokMixes","ty","by","midY1","midY2","drawLine","arrowLeft","arrowRight","renderInputAtTop","inputTokBlk","inCellW","outputOpacity","topOutputOpacity","titleTextOpts","renderInputBoxes","cellW","inCellH","tokTextOpts","idxTextOpts","tokens","lineX","tokOpts","mixColorValues","tokIdxOpts","idxMixes","tokStr","sortABCInputTokenToString","tokW","idxW","totalH","lineHeight","outBr","outTl","outputTextOpts","lineOptsLocal","String","fromCharCode","outCellH","sortedOutput","usedSoFar","tokIdx","tokProb","partTop","partH","dimmed","idxOpts","textH","color1","_lineRectArr","cellSize","sqrtSpacing","subA","subB","Text","Cells","_src_utils_data__WEBPACK_IMPORTED_MODULE_3__","DX","maxH","spacing","padInnerY","inner","cellSizing","subY","sqrtX","sqrtY","sqrtSize","mathOpts","faceName","lineY","ElType","Cell","PosEmbed","Gap","focusId","hoverEntry","entryManager","EntryManager","diagramEl","setDiagramEl","setCanvas","createElement","hoverId","setHoverId","hover","activeId","setActiveId","setActive","colors","ln","multihead","feedForward","tokEmbed","linear","focus","structure","items","gapType","arrow","entries","entryGroups","makeEntry","ids","groupIds","entry","findByIdBounds","findById","bounds","getElGlobalBounds","item","posPx","posGlobal","sizePx","renderPlus","circle","r","x2","y2","renderArrow","to","from","dirProp","right","arrowWidth","path","groupName","Intro_Intro","Intro_Prelim","Input_Detail_Embedding","Input_Detail_LayerNorm","Input_Detail_SelfAttention","Input_Detail_Projection","Input_Detail_Mlp","Input_Detail_Transformer","Input_Detail_Softmax","Input_Detail_Output","calcSizes","calcPosition","exampleInfo","renderExampleText","font","textSegs","widths","seg","egTextSegs","egPct","egIds","egWidths","egColor","egPosX","egMaxWidth","totalWidth","replaceAll","textAnchor","egTopY","fillOpacity","strokeDasharray","inputPos","inputWidth","outputPos","outputWidth","getFocusBounds","idBounds","box","combineInPlace","renderEl","d3Color","targetId","darker","opacityDimmed","l","embedX","dashArray","renderResiduals","segs","fromItem","toItem","fromY","toY","fromX","toX","xVert","strokeLinejoin","renderMultihead","topY","renderInputLines","endPt","horizY","path2","renderOutputLine","softmaxOut","llmTarget","startPt","botY","innerPad","defs","mask","renderTocToDigramLines","svgRect","offsetLeft","result","tocEl","tocRect","allBounds","yPts","minY","maxY","mainPath","isFocusEntry","pathOpts","strokeOpacity","bound","MenuEntry","setEl","memo","setDivRef","imgEl","imgP","reject","onload","onerror","fontDefP","credentials","fontAtlasImage","fontDef","atlasTex","floatsPerSegment","u_tex","u_transformTex","faceInfos","charArr","Int16Array","chars","numChars","charMap","charCodeMap","char","xoffset","yoffset","xadvance","page","chnl","kernArr","kernings","numKerns","kernMap","kern","first","second","amount","firstChar","secondChar","common","atlas","transformTex","numSegments","vertVbo","vertBuffer","floatsPerVert","localTexBuffer","segmentCapacity","segmentsUsed","glSegmentCapacity","prevCodePoint","codePoint","charDef","kernKey","kernAmount","vertBuf","texWidth","segmentId","bufIdx","atlasWInv","scaleW","atlasHInv","scaleH","numGlyphs","localScale","ux","uy","px","py","tri","ix","iy","newCapacity","newBuf","renderPhase","uniform1f","pxRange","localBuf","glOffsetEls","lineVao","lineVbo","lineFloatBuf","lineIbo","floatBuf","indexBuf","createElementBuffer","lineShader","identity","_lineA","_lineB","_lineDir","floatLocalBuf","idxLocalBuf","idxBuf","ensureElementBufferSize","mulVec3Affine_","dirLen","usedVerts","_lineSegBufs","_dir","_prevDir","_ptsTransformed","ptsLen","mulVec3AffineArr_","mulVec3AffineVec_","Vec3Buf","sub_","normalize_","cw","nx","ny","nz","linePos","pOff","segLen","len_","bufOff","idxOff","idxCount","uploadElementBuffer","localIdxBuf","uniform2f","u_viewSizeInv","drawElements","TRIANGLE_STRIP","UNSIGNED_INT","glOffsetBytes","resetElementBufferMap","modelViewUbo","DYNAMIC_DRAW","modelViewBuf","numPhases","bufferSubData","instanceVbo","instanceStride","nCols","instanceBuf","numInstances","threadInfos","drawThread","threadDir","threadVao","u_nCells","uniformMatrix3x2fv","u_threadDir","triVbo","byteStride","triFloatBuf","triIbo","ibo","triShader","defaultN","_vertP","_vertN","fBuf","iBuf","fIdx","iIdx","_quadTr","_quadBl","isEnd","PhaseGroup","Walkthrough_Phase","startProcessBefore","lastBlockIdx","activeBlocks","processUpTo","timer","prevInfo","firstIdx","lastIdx","cellCounts","totalCells","accCell","currIdx","subPos","blockFract","dim0","dim1","horizPos","horizIdx","vertPos","vertIdx","pinPos","column","col","curr","info","ExampleInputOutput","cols","Token","ExampleTokenValues","TokenIdx","TokenVocab","table","tbody","tr","td","GreenBlueCells","blueNums","setBlueNums","greenNums","setGreenNums","blueColor","greenColor","nums","Graph","setNums","grey","cellLight","cellDark","cellColor","negColor","zeroColor","graphEl","setGraphEl","dispColor","stopImmediatePropagation","nScaled","embedLink","href","embedInline","rel","inverseLerp","edge0","edge1","processDim","keep","maxIdx","hidePopup","cxOther","rowCol","maxPos","cellIdx","destIdxVec","drawSymbolBetweenBlocks","block1","block2","symbol","midPt","block1Dim","block2Dim","makeTextVector","ReluGraph","xScale","yScale","xPts","makeArrayRange","vertTicks","vertTickVals","horizTicks","horizTickVals","tickColor","makePath","phaseTime","viewDt","cameraInitial","phaseData","phaseTransitiveData","Intro","Detailed_Input","dtSeconds","wtArgs","tools","phaseTools","walkthroughIntro","breakAfter","afterTime","c_str","setInitialCamera","c0","_templateObject","embed","tokenIdxModelOpacity","t4","moveCameraTo","t6","highT","tokenStr","tokenIdxStr","t7","idxPos","t_camMove","t_makeVecs","splitWidth","splitIdx","t_firstResid","processState","t_firstTransformer","t_fullFrame","t_output","t_outputToks","walkthrough01_Prelim","Walkthrough01_Prelim_templateObject","walkthroughDetailed","atTime","atEvent","commentaryPara","cleanup","cam","Input_First","t0","t1a","t2","centerDesired","angleZDesired","angleDesired","falloff","hideFromBlock","Input_Detail_Tables","t0_showAll","Input_Detail_TokEmbed","tStr","t0_expandAt0","t1_totEq3","t2_expandSplit","t3_showTokEmIdx","t4_highlightTokEmIdx","t5_iter1Col","t6_cleanup1","t7_iterCols","exampleTokIdx","embedMtx","tokCol","embedOffColor","oneHotArray","padTop","padBot","yPos","yIdx","vertSubBelow","tPos","cPos","t_inner","vertSubLeft","sub2","curveColor","colSubBelow","tokSub","posSub","walkthrough02_Embedding","c_blockRef","c_dimRef","t_moveCamera","t0_splitEmbedAnim","t1_fadeEmbedAnim","t2_highlightTokenEmbed","t4_highlightPosEmbed","t3_moveTokenEmbed","t5_movePosEmbed","t6_plusSymAnim","t7_addAnim","t8_placeAnim","t9_cleanupInstant","t10_fadeAnim","t11_fillRest","residCol","exampleIdx","tokValue","tokColDupe","posColDupe","tokEmbedCol","posEmbedCol","plusCenter","origResidPos","offsetResidPos","tokStartPos","posStartPos","tokPos","posPos","walkthrough03_LayerNorm","Walkthrough03_LayerNorm_templateObject","t_hideExtra","t_moveInputEmbed","t_moveCameraClose","t_focusColumn","t_calcMuAgg","t_calcVarAgg","sup","t_colSequence","t_cleanupSplits","t_runAggFull","t_runNormFull","inputBlock","relevantBlocks","has","startResidualY","endResidulY","otherColOpacity","aggMuCol","aggVarCol","inputCol","aggDestIdx","targetCell","processInfo","walkthrough04_SelfAttention","keyCol","valCol","qCol","block0","head2","Walkthrough04_SelfAttention_templateObject","t_highlightHeads","t_moveCamera2","t_focusHeads","t0_dissolveHeads","t2_alignqkv","ul","li","t_focusQCol","t_qIterColDot","t_moveDotCells","t_dotCellsZoomClose","t_collapseDotCellsA","t_collapseDotCellsB","t_dotCellsZoomOut","t_addBias","t_moveToDest","t_processQkv","t_focusQKVCols","t_processAttnRow","t_processAttnSmAggRow","t_processAttnSmRow","t_zoomVOutput","t_expandVCols","t_moveAttnVals","t_applyMultiplies","t_applyAdds","t_placeVOutput","t_finalizeVOutput","t_processRemainZoom","t_processRemain","headPos","labelOpacity","headFrac","focusSelfAttentionHead","timers","targetHead","headZ","targetHeadZ","deltaZ","qkv","targetZ","strideY","baseY","qkvYPos","blockMidY","resid0Idx","yDelta","afterAttn","otherOpacity","aPos","aIdx","targetTop","addTarget","biasTarget","qWeightRow","qCells","inCells","prevCY","cellMoveT","qInitial","qFinal","inInitial","inFinal","collapsDotCellsT","startT2","cellTimesSymT","qCurr","inCurr","qCellPos","inCellPos","Black","qBiasCell","qBiasInitial","qBiasPos","moveTogetherT","qResultCell","qResultPos","qResultInitial","processStart","ignoreOpacity","attnExampleIdx","attnRow","agg0T","agg1T","topLeftPos","midLeftPos","allVCols","allAttnCells","subCell","attnVal","initColPos","destColPos","initAttnPos","destAttnPos","prepareT","vOutCol","vOutColDupe","colFinalPos","colInitialPos","walkthrough05_Softmax","Walkthrough05_Softmax_templateObject","walkthrough06_Projection","outBlocks","Walkthrough06_Projection_templateObject","t_fadeOut","t_stack","t_process","t_zoomOut","t_processResid","targetY","walkthrough07_Mlp","t0_fadeOut","t1_process","code","t2_process","t3_process","t4_process","t5_cleanup","t6_processAll","inputBlk","mlp1Blk","mlp2Blk","mlpRes","mlpResid","dimExceptVector","axis","targetIdx","mlp1Col","mlp2Col","mlpResCol","mplResIdCol","processVector","numCells","walkthrough08_Transformer","Walkthrough08_Transformer_templateObject","walkthrough09_Output","Walkthrough09_Output_templateObject","LayerNorm1","fc","phaseState","wait","createAtTime","prev","evt","stringsArr","writeCommentary","breakEvt","stringsArrRaw","colNum","lineOffset","replace","targetT","writeWord","tStart","tEnd","colOverride","fontOverride","startsWith","substring","strToDraw","nextOff","trimStart","targetColor","word","fontFace","rot","cameraSrc","cameraT","_filter_pop","cameraData","camData","initialCaptured","isMoving","prevWasActive","n_heads","n_layers","targetBlk","seen","hideBlock","defaultVal","keys","Object","changed","dst","distSq","assign","num","base64","binaryString","atob","bytes","useFunctionRef","cbRef","handle","cancelAnimationFrame","subscribe","subscription","Modifiers","Element","registerHandler","order","handler","newHandler","receiveKeyUp","handlers","handlersSorted","propagationStopped","oldStopPropagation","call","handlerRef","unregister","Alt","CtrlOrCmd","Shift","roundUpTo","v4","wInv","aOff","outOff","ax","ay","az","fromRowMajor","flatArr","angleRad","u","c2","fromQuat","q","eye","up","f","fovDeg","aspect","near","far","tan","decomposeToTRS","R","fromArray","S","invertTRS","determinant","Float64Array","P","luDecomp","luDeterminant","det","luInvert","maxA","imax","absA","handleMove","handleClick","handleMoveEnd","isDragging","handleMoveRef","handleClickRef","handleMoveEndRef","handleMouseMove","ev2","ev1","handleMouseUp","capture","buttons","altKey","ctrlKey","metaKey","handle1PointDrag","handle2PointDrag","handle1PointClick","sendDragEnd","initialData","initialTouches","lastTouch","isDrag","latestData","lastPressTime","handle1PointDragRef","handle2PointDragRef","handle1PointClickRef","captureInitialAndSend","sendEvent","touchPixelDist","velocity","touch","copyTouchList","prevTouches","prevData","lastTouchTouch","cloneTouchEvent","captureDragStart","handleDrag","touchDragStart","setTouchDragStart","captureDragStartRef","mouseEvent","extractClientPosFromTouch","dragStartData","setDragStartLocal","extra","vertShaders","fragShaders","programs","unlinkedPrograms","vert","frag","createProgram","compileAndAttachShader","typeStr","createShader","shaderSource","compileShader","attachShader","VERTEX_SHADER","fragShader","FRAGMENT_SHADER","prog","vertSource","fragSource","linkProgram","getProgramParameter","LINK_STATUS","loc","getUniformLocation","uboName","uboIndex","getUniformBlockIndex","uniformBlockBinding","getProgramInfoLog","trimEnd","logShader","infoLog","getShaderInfoLog","attribs","locId","bufOffset","vertexAttribDivisor","capacityEls","uboBlockOffsetAlign","getParameter","UNIFORM_BUFFER_OFFSET_ALIGNMENT","glCapacityEls","countEls","newUsedEls","newLocalBuf","bufMap","totalUsed","offsetEls","capacityVerts","ELEMENT_ARRAY_BUFFER","glCapacityVerts","countVerts","newUsedVerts","newCapacityVerts","offsetIndex","srcBuf","toVec4","addAt","dp","numMaxDp","thetaRad","kCrossV","kDotV","one","getIdx","dw","alpha","hexVal","toPair","padStart","parseFloat","contains","intersects","expandInPlace","border","shrinkInPlaceXY","inset","add_","bOff","lenInv"],"sourceRoot":""}